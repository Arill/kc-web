{"version":3,"sources":["webpack:///./src/views/SaveDataList.vue?69ad","webpack:///./node_modules/@firebase/firestore/dist/lite/index.browser.esm2017.js","webpack:///./src/views/SaveDataList.vue","webpack:///./src/views/SaveDataList.vue?2f28","webpack:///./src/views/SaveDataList.vue?c840","webpack:///./src/views/SaveDataList.vue?6687"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","attrs","areaItems","maxHeight","on","$event","changedWorld","model","value","callback","$$v","selectedArea","expression","directives","name","rawName","levelItems","level","isLoading","isSameSearchCondition","searchPreset","_v","savedata","length","_s","_e","_l","preset","i","key","expandPreset","ship","j","data","memo","createdAt","enabledMoreLoad","staticRenderFns","t","uid","isAuthenticated","UNAUTHENTICATED","GOOGLE_CREDENTIALS","FIRST_PARTY","MOCK_USER","d","m","e","logLevel","DEBUG","n","map","_","debug","p","ERROR","error","y","WARN","warn","JSON","stringify","g","Error","v","b","E","T","I","A","R","P","D","N","$","S","F","x","O","C","super","code","message","toString","user","type","headers","Map","set","M","Promise","resolve","enqueueRetryable","z","auth","onInit","getToken","then","accessToken","getUid","G","r","getAuthHeaderValueForFirstParty","Q","o","W","Y","u","appCheck","token","H","s","databaseId","appId","persistenceKey","host","ssl","forceLongPolling","autoDetectLongPolling","useFetchStreams","K","projectId","database","J","segments","offset","len","comparator","slice","limit","forEach","push","construct","get","Math","min","X","toArray","join","canonicalString","indexOf","split","filter","Z","tt","test","replace","isValidIdentifier","et","path","fromString","popFirst","emptyPath","popLast","lastSegment","nt","st","isDocumentKey","it","substring","Array","constructor","ot","_delegate","ut","ct","at","ht","BatchGetDocuments","Commit","RunQuery","lt","ft","dt","OK","CANCELLED","UNKNOWN","INVALID_ARGUMENT","DEADLINE_EXCEEDED","NOT_FOUND","ALREADY_EXISTS","PERMISSION_DENIED","RESOURCE_EXHAUSTED","FAILED_PRECONDITION","ABORTED","OUT_OF_RANGE","UNIMPLEMENTED","INTERNAL","UNAVAILABLE","DATA_LOSS","wt","databaseInfo","h","l","method","body","status","statusText","ok","json","yt","_t","every","gt","seconds","nanoseconds","fromMillis","Date","now","getTime","floor","toMillis","String","padStart","vt","timestamp","_compareTo","isEqual","bt","Object","prototype","hasOwnProperty","call","Et","It","binaryString","atob","fromCharCode","Symbol","iterator","next","charCodeAt","done","btoa","Uint8Array","EMPTY_BYTE_STRING","At","RegExp","Rt","exec","substr","Number","nanos","Pt","Vt","fromBase64String","fromUint8Array","Dt","mapValue","fields","__type__","stringValue","Nt","__previous_value__","$t","__local_write_time__","timestampValue","St","Ft","booleanValue","bytesValue","referenceValue","geoPointValue","latitude","longitude","integerValue","doubleValue","isNaN","arrayValue","values","xt","find","qt","Ot","compareTo","keys","sort","Ct","Lt","Ut","kt","jt","Mt","assign","Bt","isEmpty","getFieldsMap","isImmediateParentOf","applyChanges","field","zt","documentType","version","readTime","documentState","empty","hasLocalMutations","hasCommittedMutations","clone","Gt","collectionGroup","orderBy","filters","startAt","endAt","Qt","Wt","op","isKeyField","V","Yt","Xt","Zt","te","ee","Ht","Kt","fromName","Jt","some","nullValue","ne","position","inclusive","re","dir","oe","explicitOrderBy","limitType","ue","ce","ae","he","le","keyField","fe","we","isInteger","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER","Pe","asc","desc","Ve","in","De","Ne","toISOString","$e","toBase64","toUint8Array","Fe","fromTimestamp","xe","child","Oe","We","Ce","Me","structuredQuery","parent","from","collectionId","allDescendants","unaryFilter","Ge","fieldFilter","ze","compositeFilter","where","direction","Be","before","fieldPath","Ye","Ke","authCredentials","appCheckCredentials","q","all","catch","invalidateToken","async","Ze","document","updateTime","newFoundDocument","setHasCommittedMutations","tn","en","_terminated","has","fetch","bind","_databaseId","app","options","_persistenceKey","_freezeSettings","experimentalForceLongPolling","experimentalAutoDetectLongPolling","_authCredentials","_appCheckCredentials","nn","credentials","ignoreUndefinedProperties","cacheSizeBytes","rn","_settings","_settingsFrozen","_app","apply","_terminateTask","client","sessionIndex","iamToken","_terminate","settings","delete","terminate","getImmediate","an","converter","_key","firestore","ln","hn","_query","_path","fn","yn","_internalPath","gn","_byteString","vn","_methodName","bn","isFinite","_lat","_long","En","An","Rn","fieldTransforms","fieldMask","rt","Qn","methodName","isPrefixOf","Pn","Vn","Ln","Un","jn","Mn","kn","_toFieldTransform","fromDate","getPrototypeOf","zn","Gn","search","c","Yn","_firestore","_userDataWriter","_document","_converter","Hn","fromFirestore","convertValue","Xn","Kn","_docs","query","docs","Zn","tr","_apply","er","pr","mr","create","yr","concat","nr","rr","sr","ir","or","cr","wr","hr","isArray","gr","convertTimestamp","convertServerTimestamp","convertBytes","convertReference","convertGeoPoint","convertArray","convertObject","convertDocumentKey","br","reverse","getProvider","_setSettings","STEP","Vue","extend","components","DIFFICULTY_LEVEL","HARD","Const","DIFFICULTY_LEVELS","lastMap","lastLevel","lastDocument","undefined","mounted","items","worlds","WORLDS","world","maps","MAPS","divider","header","text","worldText","group","initialiList","$store","state","searchedList","computed","isEvent","methods","db","getFirestore","fbLevel","collection","startAfter","getDocs","snapShot","fetchData","Convert","ships","defaultEnemies","doc","manager","restoreOldSaveData","fleetInfo","fleets","formatDate","toDate","dispatch","saveData","disabledMain","SaveData","remarks","tempData","tempIndex","isActive","isMain","childItems","$router","component","VBtn","VCard","VDivider","VIcon","VImg","VProgressCircular","VSelect","VSpacer"],"mappings":"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","file":"js/chunk-0a4f200d.166c04f7.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"mb-5\"},[_c('div',{staticClass:\"general-container\"},[_c('v-card',[_c('div',{staticClass:\"pa-3\"},[_c('div',{staticClass:\"mt-2 search-inputs\"},[_c('div',{staticClass:\"world-select-all\"},[_c('v-select',{attrs:{\"dense\":\"\",\"hide-details\":\"\",\"items\":_vm.areaItems,\"label\":\"海域\",\"menu-props\":{ maxHeight: '600px' }},on:{\"change\":function($event){return _vm.changedWorld()}},model:{value:(_vm.selectedArea),callback:function ($$v) {_vm.selectedArea=$$v},expression:\"selectedArea\"}})],1),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.isEvent),expression:\"isEvent\"}]},[_c('v-select',{attrs:{\"dense\":\"\",\"hide-details\":\"\",\"items\":_vm.levelItems,\"label\":\"難易度\"},on:{\"change\":function($event){return _vm.changedWorld()}},model:{value:(_vm.level),callback:function ($$v) {_vm.level=$$v},expression:\"level\"}})],1),_c('div',{staticClass:\"ml-3\"},[_c('v-btn',{attrs:{\"color\":\"success\",\"disabled\":_vm.isLoading || _vm.isSameSearchCondition},on:{\"click\":function($event){return _vm.searchPreset()}}},[_vm._v(\"検索\")])],1),(_vm.savedata && _vm.savedata.length)?_c('div',{staticClass:\"ml-auto align-self-end caption\"},[_vm._v(_vm._s(_vm.savedata.length)+\"件\")]):_vm._e()])]),_c('div',{staticClass:\"pa-3\"},_vm._l((_vm.savedata),function(preset,i){return _c('v-card',{key:(\"data_\" + i),staticClass:\"preset-item\"},[_c('div',{staticClass:\"d-flex\"},[_c('div',{staticClass:\"align-self-end\"},[_vm._v(_vm._s(preset.name))]),_c('v-spacer'),_c('v-btn',{attrs:{\"icon\":\"\"},on:{\"click\":function($event){return _vm.expandPreset(preset)}}},[_c('v-icon',[_vm._v(\"mdi-download\")])],1)],1),_c('v-divider'),_c('div',{staticClass:\"d-flex flex-wrap my-1\"},_vm._l((preset.ships),function(ship,j){return _c('div',{key:(\"ship\" + i + \"_\" + j)},[_c('v-img',{attrs:{\"src\":(\"./img/ship/\" + (ship.data.id) + \".png\"),\"height\":\"30\",\"width\":\"120\"}})],1)}),0),(preset.memo)?_c('div',{staticClass:\"preset-memo\"},[_vm._v(_vm._s(preset.memo))]):_vm._e(),_c('div',{staticClass:\"d-flex flex-wrap justify-end\"},[_c('div',{staticClass:\"d-flex mx-2\"},[_c('div',[_c('v-icon',{attrs:{\"small\":\"\"}},[_vm._v(\"mdi-account\")])],1),_c('div',{staticClass:\"caption align-self-center\"},[_vm._v(_vm._s(preset.name))])]),_c('div',{staticClass:\"d-flex mx-2\"},[_c('div',[_c('v-icon',{attrs:{\"small\":\"\"}},[_vm._v(\"mdi-clock-time-four-outline\")])],1),_c('div',{staticClass:\"caption align-self-center\"},[_vm._v(_vm._s(preset.createdAt))])])])],1)}),1),(_vm.enabledMoreLoad && !_vm.isLoading)?_c('div',{staticClass:\"pa-2\"},[_c('v-btn',{attrs:{\"color\":\"info\",\"block\":\"\"},on:{\"click\":function($event){return _vm.searchPreset()}}},[_vm._v(\"さらに読み込む\")])],1):_vm._e(),(_vm.isLoading)?_c('div',{staticClass:\"py-5\"},[_c('div',{staticClass:\"d-flex justify-center\"},[_c('v-progress-circular',{attrs:{\"size\":\"70\",\"color\":\"secondary\",\"indeterminate\":\"\"}})],1)]):_vm._e()])],1),_c('div',{staticClass:\"info-area\"},[_c('v-divider',{staticClass:\"mb-2\"}),_c('div',{staticClass:\"caption\"},[_vm._v(\" 著作権法第32条に基づき画像を引用し、著作権は権利者様へ帰属します。権利者様側からの画像等の削除の依頼や警告には速やかに対処いたします。 \")]),_c('div',{staticClass:\"caption\"},[_vm._v(\"また、本サイトの情報、計算結果によって受けた利益・損害その他あらゆる事象については一切の責任を負いません。\")])],1)])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import { _registerComponent, registerVersion, _getProvider, getApp, _removeServiceInstance, SDK_VERSION } from '@firebase/app';\nimport { Component } from '@firebase/component';\nimport { Logger, LogLevel } from '@firebase/logger';\nimport { FirebaseError, createMockUserToken, getModularInstance } from '@firebase/util';\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Simple wrapper around a nullable UID. Mostly exists to make code more\n * readable.\n */\nclass l {\n    constructor(t) {\n        this.uid = t;\n    }\n    isAuthenticated() {\n        return null != this.uid;\n    }\n    /**\n     * Returns a key representing this user, suitable for inclusion in a\n     * dictionary.\n     */    toKey() {\n        return this.isAuthenticated() ? \"uid:\" + this.uid : \"anonymous-user\";\n    }\n    isEqual(t) {\n        return t.uid === this.uid;\n    }\n}\n\n/** A user with a null UID. */ l.UNAUTHENTICATED = new l(null), \n// TODO(mikelehen): Look into getting a proper uid-equivalent for\n// non-FirebaseAuth providers.\nl.GOOGLE_CREDENTIALS = new l(\"google-credentials-uid\"), l.FIRST_PARTY = new l(\"first-party-uid\"), \nl.MOCK_USER = new l(\"mock-user\");\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nlet f = \"9.6.9\";\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst d = new Logger(\"@firebase/firestore\");\n\n/**\n * Sets the verbosity of Cloud Firestore logs (debug, error, or silent).\n *\n * @param logLevel - The verbosity you set for activity and error logging. Can\n *   be any of the following values:\n *\n *   <ul>\n *     <li>`debug` for the most verbose logging level, primarily for\n *     debugging.</li>\n *     <li>`error` to log errors only.</li>\n *     <li><code>`silent` to turn off logging.</li>\n *   </ul>\n */ function w(t) {\n    d.setLogLevel(t);\n}\n\nfunction m(t, ...e) {\n    if (d.logLevel <= LogLevel.DEBUG) {\n        const n = e.map(_);\n        d.debug(`Firestore (${f}): ${t}`, ...n);\n    }\n}\n\nfunction p(t, ...e) {\n    if (d.logLevel <= LogLevel.ERROR) {\n        const n = e.map(_);\n        d.error(`Firestore (${f}): ${t}`, ...n);\n    }\n}\n\n/**\n * @internal\n */ function y(t, ...e) {\n    if (d.logLevel <= LogLevel.WARN) {\n        const n = e.map(_);\n        d.warn(`Firestore (${f}): ${t}`, ...n);\n    }\n}\n\n/**\n * Converts an additional log parameter to a string representation.\n */ function _(t) {\n    if (\"string\" == typeof t) return t;\n    try {\n        return e = t, JSON.stringify(e);\n    } catch (e) {\n        // Converting to JSON failed, just log the object directly\n        return t;\n    }\n    /**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n    /** Formats an object as a JSON string, suitable for logging. */\n    var e;\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Unconditionally fails, throwing an Error with the given message.\n * Messages are stripped in production builds.\n *\n * Returns `never` and can be used in expressions:\n * @example\n * let futureVar = fail('not implemented yet');\n */ function g(t = \"Unexpected state\") {\n    // Log the failure in addition to throw an exception, just in case the\n    // exception is swallowed.\n    const e = `FIRESTORE (${f}) INTERNAL ASSERTION FAILED: ` + t;\n    // NOTE: We don't use FirestoreError here because these are internal failures\n    // that cannot be handled by the user. (Also it would create a circular\n    // dependency between the error and assert modules which doesn't work.)\n    throw p(e), new Error(e);\n}\n\n/**\n * Fails if the given assertion condition is false, throwing an Error with the\n * given message if it did.\n *\n * Messages are stripped in production builds.\n */ function v(t, e) {\n    t || g();\n}\n\n/**\n * Casts `obj` to `T`. In non-production builds, verifies that `obj` is an\n * instance of `T` before casting.\n */ function b(t, \n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ne) {\n    return t;\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ const E = \"ok\", T = \"cancelled\", I = \"unknown\", A = \"invalid-argument\", R = \"deadline-exceeded\", P = \"not-found\", V = \"already-exists\", D = \"permission-denied\", N = \"unauthenticated\", $ = \"resource-exhausted\", S = \"failed-precondition\", F = \"aborted\", x = \"out-of-range\", q = \"unimplemented\", O = \"internal\", C = \"unavailable\", L = \"data-loss\";\n\n/** An error returned by a Firestore operation. */ class U extends FirebaseError {\n    /** @hideconstructor */\n    constructor(\n    /**\n     * The backend error code associated with this error.\n     */\n    t, \n    /**\n     * A custom error description.\n     */\n    e) {\n        super(t, e), this.code = t, this.message = e, \n        // HACK: We write a toString property directly because Error is not a real\n        // class and so inheritance does not work correctly. We could alternatively\n        // do the same \"back-door inheritance\" trick that FirebaseError does.\n        this.toString = () => `${this.name}: [code=${this.code}]: ${this.message}`;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ class k {\n    constructor() {\n        this.promise = new Promise(((t, e) => {\n            this.resolve = t, this.reject = e;\n        }));\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ class j {\n    constructor(t, e) {\n        this.user = e, this.type = \"OAuth\", this.headers = new Map, this.headers.set(\"Authorization\", `Bearer ${t}`);\n    }\n}\n\n/**\n * A CredentialsProvider that always yields an empty token.\n * @internal\n */ class M {\n    getToken() {\n        return Promise.resolve(null);\n    }\n    invalidateToken() {}\n    start(t, e) {\n        // Fire with initial user.\n        t.enqueueRetryable((() => e(l.UNAUTHENTICATED)));\n    }\n    shutdown() {}\n}\n\n/**\n * A CredentialsProvider that always returns a constant token. Used for\n * emulator token mocking.\n */ class B {\n    constructor(t) {\n        this.token = t, \n        /**\n         * Stores the listener registered with setChangeListener()\n         * This isn't actually necessary since the UID never changes, but we use this\n         * to verify the listen contract is adhered to in tests.\n         */\n        this.changeListener = null;\n    }\n    getToken() {\n        return Promise.resolve(this.token);\n    }\n    invalidateToken() {}\n    start(t, e) {\n        this.changeListener = e, \n        // Fire with initial user.\n        t.enqueueRetryable((() => e(this.token.user)));\n    }\n    shutdown() {\n        this.changeListener = null;\n    }\n}\n\n/** Credential provider for the Lite SDK. */ class z {\n    constructor(t) {\n        this.auth = null, t.onInit((t => {\n            this.auth = t;\n        }));\n    }\n    getToken() {\n        return this.auth ? this.auth.getToken().then((t => t ? (v(\"string\" == typeof t.accessToken), \n        new j(t.accessToken, new l(this.auth.getUid()))) : null)) : Promise.resolve(null);\n    }\n    invalidateToken() {}\n    start(t, e) {}\n    shutdown() {}\n}\n\n/*\n * FirstPartyToken provides a fresh token each time its value\n * is requested, because if the token is too old, requests will be rejected.\n * Technically this may no longer be necessary since the SDK should gracefully\n * recover from unauthenticated errors (see b/33147818 for context), but it's\n * safer to keep the implementation as-is.\n */ class G {\n    constructor(t, e, n) {\n        this.type = \"FirstParty\", this.user = l.FIRST_PARTY, this.headers = new Map, this.headers.set(\"X-Goog-AuthUser\", e);\n        const r = t.auth.getAuthHeaderValueForFirstParty([]);\n        r && this.headers.set(\"Authorization\", r), n && this.headers.set(\"X-Goog-Iam-Authorization-Token\", n);\n    }\n}\n\n/*\n * Provides user credentials required for the Firestore JavaScript SDK\n * to authenticate the user, using technique that is only available\n * to applications hosted by Google.\n */ class Q {\n    constructor(t, e, n) {\n        this.t = t, this.i = e, this.o = n;\n    }\n    getToken() {\n        return Promise.resolve(new G(this.t, this.i, this.o));\n    }\n    start(t, e) {\n        // Fire with initial uid.\n        t.enqueueRetryable((() => e(l.FIRST_PARTY)));\n    }\n    shutdown() {}\n    invalidateToken() {}\n}\n\nclass W {\n    constructor(t) {\n        this.value = t, this.type = \"AppCheck\", this.headers = new Map, t && t.length > 0 && this.headers.set(\"x-firebase-appcheck\", this.value);\n    }\n}\n\n/** AppCheck token provider for the Lite SDK. */ class Y {\n    constructor(t) {\n        this.u = t, this.appCheck = null, t.onInit((t => {\n            this.appCheck = t;\n        }));\n    }\n    getToken() {\n        return this.appCheck ? this.appCheck.getToken().then((t => t ? (v(\"string\" == typeof t.token), \n        new W(t.token)) : null)) : Promise.resolve(null);\n    }\n    invalidateToken() {}\n    start(t, e) {}\n    shutdown() {}\n}\n\n/**\n * Builds a CredentialsProvider depending on the type of\n * the credentials passed in.\n */\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nclass H {\n    /**\n     * Constructs a DatabaseInfo using the provided host, databaseId and\n     * persistenceKey.\n     *\n     * @param databaseId - The database to use.\n     * @param appId - The Firebase App Id.\n     * @param persistenceKey - A unique identifier for this Firestore's local\n     * storage (used in conjunction with the databaseId).\n     * @param host - The Firestore backend host to connect to.\n     * @param ssl - Whether to use SSL when connecting.\n     * @param forceLongPolling - Whether to use the forceLongPolling option\n     * when using WebChannel as the network transport.\n     * @param autoDetectLongPolling - Whether to use the detectBufferingProxy\n     * option when using WebChannel as the network transport.\n     * @param useFetchStreams Whether to use the Fetch API instead of\n     * XMLHTTPRequest\n     */\n    constructor(t, e, n, r, s, i, o, u) {\n        this.databaseId = t, this.appId = e, this.persistenceKey = n, this.host = r, this.ssl = s, \n        this.forceLongPolling = i, this.autoDetectLongPolling = o, this.useFetchStreams = u;\n    }\n}\n\n/** The default database name for a project. */\n/**\n * Represents the database ID a Firestore client is associated with.\n * @internal\n */\nclass K {\n    constructor(t, e) {\n        this.projectId = t, this.database = e || \"(default)\";\n    }\n    static empty() {\n        return new K(\"\", \"\");\n    }\n    get isDefaultDatabase() {\n        return \"(default)\" === this.database;\n    }\n    isEqual(t) {\n        return t instanceof K && t.projectId === this.projectId && t.database === this.database;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Path represents an ordered sequence of string segments.\n */\nclass J {\n    constructor(t, e, n) {\n        void 0 === e ? e = 0 : e > t.length && g(), void 0 === n ? n = t.length - e : n > t.length - e && g(), \n        this.segments = t, this.offset = e, this.len = n;\n    }\n    get length() {\n        return this.len;\n    }\n    isEqual(t) {\n        return 0 === J.comparator(this, t);\n    }\n    child(t) {\n        const e = this.segments.slice(this.offset, this.limit());\n        return t instanceof J ? t.forEach((t => {\n            e.push(t);\n        })) : e.push(t), this.construct(e);\n    }\n    /** The index of one past the last segment of the path. */    limit() {\n        return this.offset + this.length;\n    }\n    popFirst(t) {\n        return t = void 0 === t ? 1 : t, this.construct(this.segments, this.offset + t, this.length - t);\n    }\n    popLast() {\n        return this.construct(this.segments, this.offset, this.length - 1);\n    }\n    firstSegment() {\n        return this.segments[this.offset];\n    }\n    lastSegment() {\n        return this.get(this.length - 1);\n    }\n    get(t) {\n        return this.segments[this.offset + t];\n    }\n    isEmpty() {\n        return 0 === this.length;\n    }\n    isPrefixOf(t) {\n        if (t.length < this.length) return !1;\n        for (let e = 0; e < this.length; e++) if (this.get(e) !== t.get(e)) return !1;\n        return !0;\n    }\n    isImmediateParentOf(t) {\n        if (this.length + 1 !== t.length) return !1;\n        for (let e = 0; e < this.length; e++) if (this.get(e) !== t.get(e)) return !1;\n        return !0;\n    }\n    forEach(t) {\n        for (let e = this.offset, n = this.limit(); e < n; e++) t(this.segments[e]);\n    }\n    toArray() {\n        return this.segments.slice(this.offset, this.limit());\n    }\n    static comparator(t, e) {\n        const n = Math.min(t.length, e.length);\n        for (let r = 0; r < n; r++) {\n            const n = t.get(r), s = e.get(r);\n            if (n < s) return -1;\n            if (n > s) return 1;\n        }\n        return t.length < e.length ? -1 : t.length > e.length ? 1 : 0;\n    }\n}\n\n/**\n * A slash-separated path for navigating resources (documents and collections)\n * within Firestore.\n *\n * @internal\n */ class X extends J {\n    construct(t, e, n) {\n        return new X(t, e, n);\n    }\n    canonicalString() {\n        // NOTE: The client is ignorant of any path segments containing escape\n        // sequences (e.g. __id123__) and just passes them through raw (they exist\n        // for legacy reasons and should not be used frequently).\n        return this.toArray().join(\"/\");\n    }\n    toString() {\n        return this.canonicalString();\n    }\n    /**\n     * Creates a resource path from the given slash-delimited string. If multiple\n     * arguments are provided, all components are combined. Leading and trailing\n     * slashes from all components are ignored.\n     */    static fromString(...t) {\n        // NOTE: The client is ignorant of any path segments containing escape\n        // sequences (e.g. __id123__) and just passes them through raw (they exist\n        // for legacy reasons and should not be used frequently).\n        const e = [];\n        for (const n of t) {\n            if (n.indexOf(\"//\") >= 0) throw new U(A, `Invalid segment (${n}). Paths must not contain // in them.`);\n            // Strip leading and traling slashed.\n                        e.push(...n.split(\"/\").filter((t => t.length > 0)));\n        }\n        return new X(e);\n    }\n    static emptyPath() {\n        return new X([]);\n    }\n}\n\nconst Z = /^[_a-zA-Z][_a-zA-Z0-9]*$/;\n\n/**\n * A dot-separated path for navigating sub-objects within a document.\n * @internal\n */ class tt extends J {\n    construct(t, e, n) {\n        return new tt(t, e, n);\n    }\n    /**\n     * Returns true if the string could be used as a segment in a field path\n     * without escaping.\n     */    static isValidIdentifier(t) {\n        return Z.test(t);\n    }\n    canonicalString() {\n        return this.toArray().map((t => (t = t.replace(/\\\\/g, \"\\\\\\\\\").replace(/`/g, \"\\\\`\"), \n        tt.isValidIdentifier(t) || (t = \"`\" + t + \"`\"), t))).join(\".\");\n    }\n    toString() {\n        return this.canonicalString();\n    }\n    /**\n     * Returns true if this field references the key of a document.\n     */    isKeyField() {\n        return 1 === this.length && \"__name__\" === this.get(0);\n    }\n    /**\n     * The field designating the key of a document.\n     */    static keyField() {\n        return new tt([ \"__name__\" ]);\n    }\n    /**\n     * Parses a field string from the given server-formatted string.\n     *\n     * - Splitting the empty string is not allowed (for now at least).\n     * - Empty segments within the string (e.g. if there are two consecutive\n     *   separators) are not allowed.\n     *\n     * TODO(b/37244157): we should make this more strict. Right now, it allows\n     * non-identifier path components, even if they aren't escaped.\n     */    static fromServerFormat(t) {\n        const e = [];\n        let n = \"\", r = 0;\n        const s = () => {\n            if (0 === n.length) throw new U(A, `Invalid field path (${t}). Paths must not be empty, begin with '.', end with '.', or contain '..'`);\n            e.push(n), n = \"\";\n        };\n        let i = !1;\n        for (;r < t.length; ) {\n            const e = t[r];\n            if (\"\\\\\" === e) {\n                if (r + 1 === t.length) throw new U(A, \"Path has trailing escape character: \" + t);\n                const e = t[r + 1];\n                if (\"\\\\\" !== e && \".\" !== e && \"`\" !== e) throw new U(A, \"Path has invalid escape sequence: \" + t);\n                n += e, r += 2;\n            } else \"`\" === e ? (i = !i, r++) : \".\" !== e || i ? (n += e, r++) : (s(), r++);\n        }\n        if (s(), i) throw new U(A, \"Unterminated ` in path: \" + t);\n        return new tt(e);\n    }\n    static emptyPath() {\n        return new tt([]);\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @internal\n */ class et {\n    constructor(t) {\n        this.path = t;\n    }\n    static fromPath(t) {\n        return new et(X.fromString(t));\n    }\n    static fromName(t) {\n        return new et(X.fromString(t).popFirst(5));\n    }\n    static empty() {\n        return new et(X.emptyPath());\n    }\n    get collectionGroup() {\n        return this.path.popLast().lastSegment();\n    }\n    /** Returns true if the document is in the specified collectionId. */    hasCollectionId(t) {\n        return this.path.length >= 2 && this.path.get(this.path.length - 2) === t;\n    }\n    /** Returns the collection group (i.e. the name of the parent collection) for this key. */    getCollectionGroup() {\n        return this.path.get(this.path.length - 2);\n    }\n    /** Returns the fully qualified path to the parent collection. */    getCollectionPath() {\n        return this.path.popLast();\n    }\n    isEqual(t) {\n        return null !== t && 0 === X.comparator(this.path, t.path);\n    }\n    toString() {\n        return this.path.toString();\n    }\n    static comparator(t, e) {\n        return X.comparator(t.path, e.path);\n    }\n    static isDocumentKey(t) {\n        return t.length % 2 == 0;\n    }\n    /**\n     * Creates and returns a new document key with the given segments.\n     *\n     * @param segments - The segments of the path to the document\n     * @returns A new instance of DocumentKey\n     */    static fromSegments(t) {\n        return new et(new X(t.slice()));\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ function nt(t, e, n) {\n    if (!n) throw new U(A, `Function ${t}() cannot be called with an empty ${e}.`);\n}\n\n/**\n * Validates that two boolean options are not set at the same time.\n * @internal\n */\n/**\n * Validates that `path` refers to a document (indicated by the fact it contains\n * an even numbers of segments).\n */\nfunction rt(t) {\n    if (!et.isDocumentKey(t)) throw new U(A, `Invalid document reference. Document references must have an even number of segments, but ${t} has ${t.length}.`);\n}\n\n/**\n * Validates that `path` refers to a collection (indicated by the fact it\n * contains an odd numbers of segments).\n */ function st(t) {\n    if (et.isDocumentKey(t)) throw new U(A, `Invalid collection reference. Collection references must have an odd number of segments, but ${t} has ${t.length}.`);\n}\n\n/**\n * Returns true if it's a non-null object without a custom prototype\n * (i.e. excludes Array, Date, etc.).\n */\n/** Returns a string describing the type / value of the provided input. */\nfunction it(t) {\n    if (void 0 === t) return \"undefined\";\n    if (null === t) return \"null\";\n    if (\"string\" == typeof t) return t.length > 20 && (t = `${t.substring(0, 20)}...`), \n    JSON.stringify(t);\n    if (\"number\" == typeof t || \"boolean\" == typeof t) return \"\" + t;\n    if (\"object\" == typeof t) {\n        if (t instanceof Array) return \"an array\";\n        {\n            const e = \n            /** try to get the constructor name for an object. */\n            function(t) {\n                if (t.constructor) return t.constructor.name;\n                return null;\n            }\n            /**\n * Casts `obj` to `T`, optionally unwrapping Compat types to expose the\n * underlying instance. Throws if  `obj` is not an instance of `T`.\n *\n * This cast is used in the Lite and Full SDK to verify instance types for\n * arguments passed to the public API.\n * @internal\n */ (t);\n            return e ? `a custom ${e} object` : \"an object\";\n        }\n    }\n    return \"function\" == typeof t ? \"a function\" : g();\n}\n\nfunction ot(t, \n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ne) {\n    if (\"_delegate\" in t && (\n    // Unwrap Compat types\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    t = t._delegate), !(t instanceof e)) {\n        if (e.name === t.constructor.name) throw new U(A, \"Type does not match the expected instance. Did you pass a reference from a different Firestore SDK?\");\n        {\n            const n = it(t);\n            throw new U(A, `Expected type '${e.name}', but it was: ${n}`);\n        }\n    }\n    return t;\n}\n\nfunction ut(t, e) {\n    if (e <= 0) throw new U(A, `Function ${t}() requires a positive number, but it was: ${e}.`);\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Returns whether a variable is either undefined or null.\n */ function ct(t) {\n    return null == t;\n}\n\n/** Returns whether the value represents -0. */ function at(t) {\n    // Detect if the value is -0.0. Based on polyfill from\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n    return 0 === t && 1 / t == -1 / 0;\n}\n\n/**\n * Returns whether a value is an integer and in the safe integer range\n * @param value - The value to test for being an integer and in the safe range\n */\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst ht = {\n    BatchGetDocuments: \"batchGet\",\n    Commit: \"commit\",\n    RunQuery: \"runQuery\"\n};\n\n/**\n * Maps RPC names to the corresponding REST endpoint name.\n *\n * We use array notation to avoid mangling.\n */\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Error Codes describing the different ways GRPC can fail. These are copied\n * directly from GRPC's sources here:\n *\n * https://github.com/grpc/grpc/blob/bceec94ea4fc5f0085d81235d8e1c06798dc341a/include/grpc%2B%2B/impl/codegen/status_code_enum.h\n *\n * Important! The names of these identifiers matter because the string forms\n * are used for reverse lookups from the webchannel stream. Do NOT change the\n * names of these identifiers or change this into a const enum.\n */\nvar lt, ft;\n\n/**\n * Converts an HTTP Status Code to the equivalent error code.\n *\n * @param status - An HTTP Status Code, like 200, 404, 503, etc.\n * @returns The equivalent Code. Unknown status codes are mapped to\n *     Code.UNKNOWN.\n */\nfunction dt(t) {\n    if (void 0 === t) return p(\"RPC_ERROR\", \"HTTP error has no status\"), I;\n    // The canonical error codes for Google APIs [1] specify mapping onto HTTP\n    // status codes but the mapping is not bijective. In each case of ambiguity\n    // this function chooses a primary error.\n    \n    // [1]\n    // https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto\n        switch (t) {\n      case 200:\n        // OK\n        return E;\n\n      case 400:\n        // Bad Request\n        return S;\n\n        // Other possibilities based on the forward mapping\n        // return Code.INVALID_ARGUMENT;\n        // return Code.OUT_OF_RANGE;\n              case 401:\n        // Unauthorized\n        return N;\n\n      case 403:\n        // Forbidden\n        return D;\n\n      case 404:\n        // Not Found\n        return P;\n\n      case 409:\n        // Conflict\n        return F;\n\n        // Other possibilities:\n        // return Code.ALREADY_EXISTS;\n              case 416:\n        // Range Not Satisfiable\n        return x;\n\n      case 429:\n        // Too Many Requests\n        return $;\n\n      case 499:\n        // Client Closed Request\n        return T;\n\n      case 500:\n        // Internal Server Error\n        return I;\n\n        // Other possibilities:\n        // return Code.INTERNAL;\n        // return Code.DATA_LOSS;\n              case 501:\n        // Unimplemented\n        return q;\n\n      case 503:\n        // Service Unavailable\n        return C;\n\n      case 504:\n        // Gateway Timeout\n        return R;\n\n      default:\n        return t >= 200 && t < 300 ? E : t >= 400 && t < 500 ? S : t >= 500 && t < 600 ? O : I;\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A Rest-based connection that relies on the native HTTP stack\n * (e.g. `fetch` or a polyfill).\n */ (ft = lt || (lt = {}))[ft.OK = 0] = \"OK\", ft[ft.CANCELLED = 1] = \"CANCELLED\", \nft[ft.UNKNOWN = 2] = \"UNKNOWN\", ft[ft.INVALID_ARGUMENT = 3] = \"INVALID_ARGUMENT\", \nft[ft.DEADLINE_EXCEEDED = 4] = \"DEADLINE_EXCEEDED\", ft[ft.NOT_FOUND = 5] = \"NOT_FOUND\", \nft[ft.ALREADY_EXISTS = 6] = \"ALREADY_EXISTS\", ft[ft.PERMISSION_DENIED = 7] = \"PERMISSION_DENIED\", \nft[ft.UNAUTHENTICATED = 16] = \"UNAUTHENTICATED\", ft[ft.RESOURCE_EXHAUSTED = 8] = \"RESOURCE_EXHAUSTED\", \nft[ft.FAILED_PRECONDITION = 9] = \"FAILED_PRECONDITION\", ft[ft.ABORTED = 10] = \"ABORTED\", \nft[ft.OUT_OF_RANGE = 11] = \"OUT_OF_RANGE\", ft[ft.UNIMPLEMENTED = 12] = \"UNIMPLEMENTED\", \nft[ft.INTERNAL = 13] = \"INTERNAL\", ft[ft.UNAVAILABLE = 14] = \"UNAVAILABLE\", ft[ft.DATA_LOSS = 15] = \"DATA_LOSS\";\n\nclass wt extends \n/**\n * Base class for all Rest-based connections to the backend (WebChannel and\n * HTTP).\n */\nclass {\n    constructor(t) {\n        this.databaseInfo = t, this.databaseId = t.databaseId;\n        const e = t.ssl ? \"https\" : \"http\";\n        this.h = e + \"://\" + t.host, this.l = \"projects/\" + this.databaseId.projectId + \"/databases/\" + this.databaseId.database + \"/documents\";\n    }\n    m(t, e, n, r, s) {\n        const i = this.p(t, e);\n        m(\"RestConnection\", \"Sending: \", i, n);\n        const o = {};\n        return this.g(o, r, s), this.v(t, i, o, n).then((t => (m(\"RestConnection\", \"Received: \", t), \n        t)), (e => {\n            throw y(\"RestConnection\", `${t} failed with error: `, e, \"url: \", i, \"request:\", n), \n            e;\n        }));\n    }\n    T(t, e, n, r, s) {\n        // The REST API automatically aggregates all of the streamed results, so we\n        // can just use the normal invoke() method.\n        return this.m(t, e, n, r, s);\n    }\n    /**\n     * Modifies the headers for a request, adding any authorization token if\n     * present and any additional headers for the request.\n     */    g(t, e, n) {\n        t[\"X-Goog-Api-Client\"] = \"gl-js/ fire/\" + f, \n        // Content-Type: text/plain will avoid preflight requests which might\n        // mess with CORS and redirects by proxies. If we add custom headers\n        // we will need to change this code to potentially use the $httpOverwrite\n        // parameter supported by ESF to avoid triggering preflight requests.\n        t[\"Content-Type\"] = \"text/plain\", this.databaseInfo.appId && (t[\"X-Firebase-GMPID\"] = this.databaseInfo.appId), \n        e && e.headers.forEach(((e, n) => t[n] = e)), n && n.headers.forEach(((e, n) => t[n] = e));\n    }\n    p(t, e) {\n        const n = ht[t];\n        return `${this.h}/v1/${e}:${n}`;\n    }\n} {\n    /**\n     * @param databaseInfo - The connection info.\n     * @param fetchImpl - `fetch` or a Polyfill that implements the fetch API.\n     */\n    constructor(t, e) {\n        super(t), this.I = e;\n    }\n    A(t, e) {\n        throw new Error(\"Not supported by FetchConnection\");\n    }\n    async v(t, e, n, r) {\n        const s = JSON.stringify(r);\n        let i;\n        try {\n            i = await this.I(e, {\n                method: \"POST\",\n                headers: n,\n                body: s\n            });\n        } catch (t) {\n            throw new U(dt(t.status), \"Request failed with error: \" + t.statusText);\n        }\n        if (!i.ok) throw new U(dt(i.status), \"Request failed with error: \" + i.statusText);\n        return i.json();\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** Initializes the HTTP connection for the REST API. */\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Generates `nBytes` of random bytes.\n *\n * If `nBytes < 0` , an error will be thrown.\n */\nfunction mt(t) {\n    // Polyfills for IE and WebWorker by using `self` and `msCrypto` when `crypto` is not available.\n    const e = \n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    \"undefined\" != typeof self && (self.crypto || self.msCrypto), n = new Uint8Array(t);\n    if (e && \"function\" == typeof e.getRandomValues) e.getRandomValues(n); else \n    // Falls back to Math.random\n    for (let e = 0; e < t; e++) n[e] = Math.floor(256 * Math.random());\n    return n;\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ class pt {\n    static R() {\n        // Alphanumeric characters\n        const t = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\", e = Math.floor(256 / t.length) * t.length;\n        // The largest byte value that is a multiple of `char.length`.\n                let n = \"\";\n        for (;n.length < 20; ) {\n            const r = mt(40);\n            for (let s = 0; s < r.length; ++s) \n            // Only accept values that are [0, maxMultiple), this ensures they can\n            // be evenly mapped to indices of `chars` via a modulo operation.\n            n.length < 20 && r[s] < e && (n += t.charAt(r[s] % t.length));\n        }\n        return n;\n    }\n}\n\nfunction yt(t, e) {\n    return t < e ? -1 : t > e ? 1 : 0;\n}\n\n/** Helper to compare arrays using isEqual(). */ function _t(t, e, n) {\n    return t.length === e.length && t.every(((t, r) => n(t, e[r])));\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// The earliest date supported by Firestore timestamps (0001-01-01T00:00:00Z).\n/**\n * A `Timestamp` represents a point in time independent of any time zone or\n * calendar, represented as seconds and fractions of seconds at nanosecond\n * resolution in UTC Epoch time.\n *\n * It is encoded using the Proleptic Gregorian Calendar which extends the\n * Gregorian calendar backwards to year one. It is encoded assuming all minutes\n * are 60 seconds long, i.e. leap seconds are \"smeared\" so that no leap second\n * table is needed for interpretation. Range is from 0001-01-01T00:00:00Z to\n * 9999-12-31T23:59:59.999999999Z.\n *\n * For examples and further specifications, refer to the\n * {@link https://github.com/google/protobuf/blob/master/src/google/protobuf/timestamp.proto | Timestamp definition}.\n */\nclass gt {\n    /**\n     * Creates a new timestamp.\n     *\n     * @param seconds - The number of seconds of UTC time since Unix epoch\n     *     1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to\n     *     9999-12-31T23:59:59Z inclusive.\n     * @param nanoseconds - The non-negative fractions of a second at nanosecond\n     *     resolution. Negative second values with fractions must still have\n     *     non-negative nanoseconds values that count forward in time. Must be\n     *     from 0 to 999,999,999 inclusive.\n     */\n    constructor(\n    /**\n     * The number of seconds of UTC time since Unix epoch 1970-01-01T00:00:00Z.\n     */\n    t, \n    /**\n     * The fractions of a second at nanosecond resolution.*\n     */\n    e) {\n        if (this.seconds = t, this.nanoseconds = e, e < 0) throw new U(A, \"Timestamp nanoseconds out of range: \" + e);\n        if (e >= 1e9) throw new U(A, \"Timestamp nanoseconds out of range: \" + e);\n        if (t < -62135596800) throw new U(A, \"Timestamp seconds out of range: \" + t);\n        // This will break in the year 10,000.\n                if (t >= 253402300800) throw new U(A, \"Timestamp seconds out of range: \" + t);\n    }\n    /**\n     * Creates a new timestamp with the current date, with millisecond precision.\n     *\n     * @returns a new timestamp representing the current date.\n     */    static now() {\n        return gt.fromMillis(Date.now());\n    }\n    /**\n     * Creates a new timestamp from the given date.\n     *\n     * @param date - The date to initialize the `Timestamp` from.\n     * @returns A new `Timestamp` representing the same point in time as the given\n     *     date.\n     */    static fromDate(t) {\n        return gt.fromMillis(t.getTime());\n    }\n    /**\n     * Creates a new timestamp from the given number of milliseconds.\n     *\n     * @param milliseconds - Number of milliseconds since Unix epoch\n     *     1970-01-01T00:00:00Z.\n     * @returns A new `Timestamp` representing the same point in time as the given\n     *     number of milliseconds.\n     */    static fromMillis(t) {\n        const e = Math.floor(t / 1e3), n = Math.floor(1e6 * (t - 1e3 * e));\n        return new gt(e, n);\n    }\n    /**\n     * Converts a `Timestamp` to a JavaScript `Date` object. This conversion\n     * causes a loss of precision since `Date` objects only support millisecond\n     * precision.\n     *\n     * @returns JavaScript `Date` object representing the same point in time as\n     *     this `Timestamp`, with millisecond precision.\n     */    toDate() {\n        return new Date(this.toMillis());\n    }\n    /**\n     * Converts a `Timestamp` to a numeric timestamp (in milliseconds since\n     * epoch). This operation causes a loss of precision.\n     *\n     * @returns The point in time corresponding to this timestamp, represented as\n     *     the number of milliseconds since Unix epoch 1970-01-01T00:00:00Z.\n     */    toMillis() {\n        return 1e3 * this.seconds + this.nanoseconds / 1e6;\n    }\n    _compareTo(t) {\n        return this.seconds === t.seconds ? yt(this.nanoseconds, t.nanoseconds) : yt(this.seconds, t.seconds);\n    }\n    /**\n     * Returns true if this `Timestamp` is equal to the provided one.\n     *\n     * @param other - The `Timestamp` to compare against.\n     * @returns true if this `Timestamp` is equal to the provided one.\n     */    isEqual(t) {\n        return t.seconds === this.seconds && t.nanoseconds === this.nanoseconds;\n    }\n    /** Returns a textual representation of this `Timestamp`. */    toString() {\n        return \"Timestamp(seconds=\" + this.seconds + \", nanoseconds=\" + this.nanoseconds + \")\";\n    }\n    /** Returns a JSON-serializable representation of this `Timestamp`. */    toJSON() {\n        return {\n            seconds: this.seconds,\n            nanoseconds: this.nanoseconds\n        };\n    }\n    /**\n     * Converts this object to a primitive string, which allows `Timestamp` objects\n     * to be compared using the `>`, `<=`, `>=` and `>` operators.\n     */    valueOf() {\n        // This method returns a string of the form <seconds>.<nanoseconds> where\n        // <seconds> is translated to have a non-negative value and both <seconds>\n        // and <nanoseconds> are left-padded with zeroes to be a consistent length.\n        // Strings with this format then have a lexiographical ordering that matches\n        // the expected ordering. The <seconds> translation is done to avoid having\n        // a leading negative sign (i.e. a leading '-' character) in its string\n        // representation, which would affect its lexiographical ordering.\n        const t = this.seconds - -62135596800;\n        // Note: Up to 12 decimal digits are required to represent all valid\n        // 'seconds' values.\n                return String(t).padStart(12, \"0\") + \".\" + String(this.nanoseconds).padStart(9, \"0\");\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A version of a document in Firestore. This corresponds to the version\n * timestamp, such as update_time or read_time.\n */ class vt {\n    constructor(t) {\n        this.timestamp = t;\n    }\n    static fromTimestamp(t) {\n        return new vt(t);\n    }\n    static min() {\n        return new vt(new gt(0, 0));\n    }\n    compareTo(t) {\n        return this.timestamp._compareTo(t.timestamp);\n    }\n    isEqual(t) {\n        return this.timestamp.isEqual(t.timestamp);\n    }\n    /** Returns a number representation of the version for use in spec tests. */    toMicroseconds() {\n        // Convert to microseconds.\n        return 1e6 * this.timestamp.seconds + this.timestamp.nanoseconds / 1e3;\n    }\n    toString() {\n        return \"SnapshotVersion(\" + this.timestamp.toString() + \")\";\n    }\n    toTimestamp() {\n        return this.timestamp;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ function bt(t) {\n    let e = 0;\n    for (const n in t) Object.prototype.hasOwnProperty.call(t, n) && e++;\n    return e;\n}\n\nfunction Et(t, e) {\n    for (const n in t) Object.prototype.hasOwnProperty.call(t, n) && e(n, t[n]);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Provides a set of fields that can be used to partially patch a document.\n * FieldMask is used in conjunction with ObjectValue.\n * Examples:\n *   foo - Overwrites foo entirely with the provided value. If foo is not\n *         present in the companion ObjectValue, the field is deleted.\n *   foo.bar - Overwrites only the field bar of the object foo.\n *             If foo is not an object, foo is replaced with an object\n *             containing foo\n */\nclass Tt {\n    constructor(t) {\n        this.fields = t, \n        // TODO(dimond): validation of FieldMask\n        // Sort the field mask to support `FieldMask.isEqual()` and assert below.\n        t.sort(tt.comparator);\n    }\n    /**\n     * Verifies that `fieldPath` is included by at least one field in this field\n     * mask.\n     *\n     * This is an O(n) operation, where `n` is the size of the field mask.\n     */    covers(t) {\n        for (const e of this.fields) if (e.isPrefixOf(t)) return !0;\n        return !1;\n    }\n    isEqual(t) {\n        return _t(this.fields, t.fields, ((t, e) => t.isEqual(e)));\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** Converts a Base64 encoded string to a binary string. */\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Immutable class that represents a \"proto\" byte string.\n *\n * Proto byte strings can either be Base64-encoded strings or Uint8Arrays when\n * sent on the wire. This class abstracts away this differentiation by holding\n * the proto byte string in a common class that must be converted into a string\n * before being sent as a proto.\n * @internal\n */\nclass It {\n    constructor(t) {\n        this.binaryString = t;\n    }\n    static fromBase64String(t) {\n        const e = atob(t);\n        return new It(e);\n    }\n    static fromUint8Array(t) {\n        // TODO(indexing); Remove the copy of the byte string here as this method\n        // is frequently called during indexing.\n        const e = \n        /**\n * Helper function to convert an Uint8array to a binary string.\n */\n        function(t) {\n            let e = \"\";\n            for (let n = 0; n < t.length; ++n) e += String.fromCharCode(t[n]);\n            return e;\n        }\n        /**\n * Helper function to convert a binary string to an Uint8Array.\n */ (t);\n        return new It(e);\n    }\n    [Symbol.iterator]() {\n        let t = 0;\n        return {\n            next: () => t < this.binaryString.length ? {\n                value: this.binaryString.charCodeAt(t++),\n                done: !1\n            } : {\n                value: void 0,\n                done: !0\n            }\n        };\n    }\n    toBase64() {\n        return t = this.binaryString, btoa(t);\n        /** Converts a binary string to a Base64 encoded string. */\n        var t;\n    }\n    toUint8Array() {\n        return function(t) {\n            const e = new Uint8Array(t.length);\n            for (let n = 0; n < t.length; n++) e[n] = t.charCodeAt(n);\n            return e;\n        }\n        /**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n        // A RegExp matching ISO 8601 UTC timestamps with optional fraction.\n        (this.binaryString);\n    }\n    approximateByteSize() {\n        return 2 * this.binaryString.length;\n    }\n    compareTo(t) {\n        return yt(this.binaryString, t.binaryString);\n    }\n    isEqual(t) {\n        return this.binaryString === t.binaryString;\n    }\n}\n\nIt.EMPTY_BYTE_STRING = new It(\"\");\n\nconst At = new RegExp(/^\\d{4}-\\d\\d-\\d\\dT\\d\\d:\\d\\d:\\d\\d(?:\\.(\\d+))?Z$/);\n\n/**\n * Converts the possible Proto values for a timestamp value into a \"seconds and\n * nanos\" representation.\n */ function Rt(t) {\n    // The json interface (for the browser) will return an iso timestamp string,\n    // while the proto js library (for node) will return a\n    // google.protobuf.Timestamp instance.\n    if (v(!!t), \"string\" == typeof t) {\n        // The date string can have higher precision (nanos) than the Date class\n        // (millis), so we do some custom parsing here.\n        // Parse the nanos right out of the string.\n        let e = 0;\n        const n = At.exec(t);\n        if (v(!!n), n[1]) {\n            // Pad the fraction out to 9 digits (nanos).\n            let t = n[1];\n            t = (t + \"000000000\").substr(0, 9), e = Number(t);\n        }\n        // Parse the date to get the seconds.\n                const r = new Date(t);\n        return {\n            seconds: Math.floor(r.getTime() / 1e3),\n            nanos: e\n        };\n    }\n    return {\n        seconds: Pt(t.seconds),\n        nanos: Pt(t.nanos)\n    };\n}\n\n/**\n * Converts the possible Proto types for numbers into a JavaScript number.\n * Returns 0 if the value is not numeric.\n */ function Pt(t) {\n    // TODO(bjornick): Handle int64 greater than 53 bits.\n    return \"number\" == typeof t ? t : \"string\" == typeof t ? Number(t) : 0;\n}\n\n/** Converts the possible Proto types for Blobs into a ByteString. */ function Vt(t) {\n    return \"string\" == typeof t ? It.fromBase64String(t) : It.fromUint8Array(t);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Represents a locally-applied ServerTimestamp.\n *\n * Server Timestamps are backed by MapValues that contain an internal field\n * `__type__` with a value of `server_timestamp`. The previous value and local\n * write time are stored in its `__previous_value__` and `__local_write_time__`\n * fields respectively.\n *\n * Notes:\n * - ServerTimestampValue instances are created as the result of applying a\n *   transform. They can only exist in the local view of a document. Therefore\n *   they do not need to be parsed or serialized.\n * - When evaluated locally (e.g. for snapshot.data()), they by default\n *   evaluate to `null`. This behavior can be configured by passing custom\n *   FieldValueOptions to value().\n * - With respect to other ServerTimestampValues, they sort by their\n *   localWriteTime.\n */ function Dt(t) {\n    var e, n;\n    return \"server_timestamp\" === (null === (n = ((null === (e = null == t ? void 0 : t.mapValue) || void 0 === e ? void 0 : e.fields) || {}).__type__) || void 0 === n ? void 0 : n.stringValue);\n}\n\n/**\n * Returns the value of the field before this ServerTimestamp was set.\n *\n * Preserving the previous values allows the user to display the last resoled\n * value until the backend responds with the timestamp.\n */ function Nt(t) {\n    const e = t.mapValue.fields.__previous_value__;\n    return Dt(e) ? Nt(e) : e;\n}\n\n/**\n * Returns the local time at which this timestamp was first set.\n */ function $t(t) {\n    const e = Rt(t.mapValue.fields.__local_write_time__.timestampValue);\n    return new gt(e.seconds, e.nanos);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** Extracts the backend's type order for the provided value. */\nfunction St(t) {\n    return \"nullValue\" in t ? 0 /* NullValue */ : \"booleanValue\" in t ? 1 /* BooleanValue */ : \"integerValue\" in t || \"doubleValue\" in t ? 2 /* NumberValue */ : \"timestampValue\" in t ? 3 /* TimestampValue */ : \"stringValue\" in t ? 5 /* StringValue */ : \"bytesValue\" in t ? 6 /* BlobValue */ : \"referenceValue\" in t ? 7 /* RefValue */ : \"geoPointValue\" in t ? 8 /* GeoPointValue */ : \"arrayValue\" in t ? 9 /* ArrayValue */ : \"mapValue\" in t ? Dt(t) ? 4 /* ServerTimestampValue */ : \n    /** Returns true if the Value represents the canonical {@link #MAX_VALUE} . */\n    function(t) {\n        return \"__max__\" === (((t.mapValue || {}).fields || {}).__type__ || {}).stringValue;\n    }\n    /**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n    /**\n * An ObjectValue represents a MapValue in the Firestore Proto and offers the\n * ability to add and remove fields (via the ObjectValueBuilder).\n */ (t) ? 9 /* ArrayValue */ : 10 /* ObjectValue */ : g();\n}\n\n/** Tests `left` and `right` for equality based on the backend semantics. */ function Ft(t, e) {\n    if (t === e) return !0;\n    const n = St(t);\n    if (n !== St(e)) return !1;\n    switch (n) {\n      case 0 /* NullValue */ :\n      case 9007199254740991 /* MaxValue */ :\n        return !0;\n\n      case 1 /* BooleanValue */ :\n        return t.booleanValue === e.booleanValue;\n\n      case 4 /* ServerTimestampValue */ :\n        return $t(t).isEqual($t(e));\n\n      case 3 /* TimestampValue */ :\n        return function(t, e) {\n            if (\"string\" == typeof t.timestampValue && \"string\" == typeof e.timestampValue && t.timestampValue.length === e.timestampValue.length) \n            // Use string equality for ISO 8601 timestamps\n            return t.timestampValue === e.timestampValue;\n            const n = Rt(t.timestampValue), r = Rt(e.timestampValue);\n            return n.seconds === r.seconds && n.nanos === r.nanos;\n        }(t, e);\n\n      case 5 /* StringValue */ :\n        return t.stringValue === e.stringValue;\n\n      case 6 /* BlobValue */ :\n        return function(t, e) {\n            return Vt(t.bytesValue).isEqual(Vt(e.bytesValue));\n        }(t, e);\n\n      case 7 /* RefValue */ :\n        return t.referenceValue === e.referenceValue;\n\n      case 8 /* GeoPointValue */ :\n        return function(t, e) {\n            return Pt(t.geoPointValue.latitude) === Pt(e.geoPointValue.latitude) && Pt(t.geoPointValue.longitude) === Pt(e.geoPointValue.longitude);\n        }(t, e);\n\n      case 2 /* NumberValue */ :\n        return function(t, e) {\n            if (\"integerValue\" in t && \"integerValue\" in e) return Pt(t.integerValue) === Pt(e.integerValue);\n            if (\"doubleValue\" in t && \"doubleValue\" in e) {\n                const n = Pt(t.doubleValue), r = Pt(e.doubleValue);\n                return n === r ? at(n) === at(r) : isNaN(n) && isNaN(r);\n            }\n            return !1;\n        }(t, e);\n\n      case 9 /* ArrayValue */ :\n        return _t(t.arrayValue.values || [], e.arrayValue.values || [], Ft);\n\n      case 10 /* ObjectValue */ :\n        return function(t, e) {\n            const n = t.mapValue.fields || {}, r = e.mapValue.fields || {};\n            if (bt(n) !== bt(r)) return !1;\n            for (const t in n) if (n.hasOwnProperty(t) && (void 0 === r[t] || !Ft(n[t], r[t]))) return !1;\n            return !0;\n        }\n        /** Returns true if the ArrayValue contains the specified element. */ (t, e);\n\n      default:\n        return g();\n    }\n}\n\nfunction xt(t, e) {\n    return void 0 !== (t.values || []).find((t => Ft(t, e)));\n}\n\nfunction qt(t, e) {\n    if (t === e) return 0;\n    const n = St(t), r = St(e);\n    if (n !== r) return yt(n, r);\n    switch (n) {\n      case 0 /* NullValue */ :\n      case 9007199254740991 /* MaxValue */ :\n        return 0;\n\n      case 1 /* BooleanValue */ :\n        return yt(t.booleanValue, e.booleanValue);\n\n      case 2 /* NumberValue */ :\n        return function(t, e) {\n            const n = Pt(t.integerValue || t.doubleValue), r = Pt(e.integerValue || e.doubleValue);\n            return n < r ? -1 : n > r ? 1 : n === r ? 0 : \n            // one or both are NaN.\n            isNaN(n) ? isNaN(r) ? 0 : -1 : 1;\n        }(t, e);\n\n      case 3 /* TimestampValue */ :\n        return Ot(t.timestampValue, e.timestampValue);\n\n      case 4 /* ServerTimestampValue */ :\n        return Ot($t(t), $t(e));\n\n      case 5 /* StringValue */ :\n        return yt(t.stringValue, e.stringValue);\n\n      case 6 /* BlobValue */ :\n        return function(t, e) {\n            const n = Vt(t), r = Vt(e);\n            return n.compareTo(r);\n        }(t.bytesValue, e.bytesValue);\n\n      case 7 /* RefValue */ :\n        return function(t, e) {\n            const n = t.split(\"/\"), r = e.split(\"/\");\n            for (let t = 0; t < n.length && t < r.length; t++) {\n                const e = yt(n[t], r[t]);\n                if (0 !== e) return e;\n            }\n            return yt(n.length, r.length);\n        }(t.referenceValue, e.referenceValue);\n\n      case 8 /* GeoPointValue */ :\n        return function(t, e) {\n            const n = yt(Pt(t.latitude), Pt(e.latitude));\n            if (0 !== n) return n;\n            return yt(Pt(t.longitude), Pt(e.longitude));\n        }(t.geoPointValue, e.geoPointValue);\n\n      case 9 /* ArrayValue */ :\n        return function(t, e) {\n            const n = t.values || [], r = e.values || [];\n            for (let t = 0; t < n.length && t < r.length; ++t) {\n                const e = qt(n[t], r[t]);\n                if (e) return e;\n            }\n            return yt(n.length, r.length);\n        }(t.arrayValue, e.arrayValue);\n\n      case 10 /* ObjectValue */ :\n        return function(t, e) {\n            const n = t.fields || {}, r = Object.keys(n), s = e.fields || {}, i = Object.keys(s);\n            // Even though MapValues are likely sorted correctly based on their insertion\n            // order (e.g. when received from the backend), local modifications can bring\n            // elements out of order. We need to re-sort the elements to ensure that\n            // canonical IDs are independent of insertion order.\n            r.sort(), i.sort();\n            for (let t = 0; t < r.length && t < i.length; ++t) {\n                const e = yt(r[t], i[t]);\n                if (0 !== e) return e;\n                const o = qt(n[r[t]], s[i[t]]);\n                if (0 !== o) return o;\n            }\n            return yt(r.length, i.length);\n        }\n        /** Returns a reference value for the provided database and key. */ (t.mapValue, e.mapValue);\n\n      default:\n        throw g();\n    }\n}\n\nfunction Ot(t, e) {\n    if (\"string\" == typeof t && \"string\" == typeof e && t.length === e.length) return yt(t, e);\n    const n = Rt(t), r = Rt(e), s = yt(n.seconds, r.seconds);\n    return 0 !== s ? s : yt(n.nanos, r.nanos);\n}\n\nfunction Ct(t, e) {\n    return {\n        referenceValue: `projects/${t.projectId}/databases/${t.database}/documents/${e.path.canonicalString()}`\n    };\n}\n\n/** Returns true if `value` is an ArrayValue. */ function Lt(t) {\n    return !!t && \"arrayValue\" in t;\n}\n\n/** Returns true if `value` is a NullValue. */ function Ut(t) {\n    return !!t && \"nullValue\" in t;\n}\n\n/** Returns true if `value` is NaN. */ function kt(t) {\n    return !!t && \"doubleValue\" in t && isNaN(Number(t.doubleValue));\n}\n\n/** Returns true if `value` is a MapValue. */ function jt(t) {\n    return !!t && \"mapValue\" in t;\n}\n\n/** Creates a deep copy of `source`. */ function Mt(t) {\n    if (t.geoPointValue) return {\n        geoPointValue: Object.assign({}, t.geoPointValue)\n    };\n    if (t.timestampValue && \"object\" == typeof t.timestampValue) return {\n        timestampValue: Object.assign({}, t.timestampValue)\n    };\n    if (t.mapValue) {\n        const e = {\n            mapValue: {\n                fields: {}\n            }\n        };\n        return Et(t.mapValue.fields, ((t, n) => e.mapValue.fields[t] = Mt(n))), e;\n    }\n    if (t.arrayValue) {\n        const e = {\n            arrayValue: {\n                values: []\n            }\n        };\n        for (let n = 0; n < (t.arrayValue.values || []).length; ++n) e.arrayValue.values[n] = Mt(t.arrayValue.values[n]);\n        return e;\n    }\n    return Object.assign({}, t);\n}\n\nclass Bt {\n    constructor(t) {\n        this.value = t;\n    }\n    static empty() {\n        return new Bt({\n            mapValue: {}\n        });\n    }\n    /**\n     * Returns the value at the given path or null.\n     *\n     * @param path - the path to search\n     * @returns The value at the path or null if the path is not set.\n     */    field(t) {\n        if (t.isEmpty()) return this.value;\n        {\n            let e = this.value;\n            for (let n = 0; n < t.length - 1; ++n) if (e = (e.mapValue.fields || {})[t.get(n)], \n            !jt(e)) return null;\n            return e = (e.mapValue.fields || {})[t.lastSegment()], e || null;\n        }\n    }\n    /**\n     * Sets the field to the provided value.\n     *\n     * @param path - The field path to set.\n     * @param value - The value to set.\n     */    set(t, e) {\n        this.getFieldsMap(t.popLast())[t.lastSegment()] = Mt(e);\n    }\n    /**\n     * Sets the provided fields to the provided values.\n     *\n     * @param data - A map of fields to values (or null for deletes).\n     */    setAll(t) {\n        let e = tt.emptyPath(), n = {}, r = [];\n        t.forEach(((t, s) => {\n            if (!e.isImmediateParentOf(s)) {\n                // Insert the accumulated changes at this parent location\n                const t = this.getFieldsMap(e);\n                this.applyChanges(t, n, r), n = {}, r = [], e = s.popLast();\n            }\n            t ? n[s.lastSegment()] = Mt(t) : r.push(s.lastSegment());\n        }));\n        const s = this.getFieldsMap(e);\n        this.applyChanges(s, n, r);\n    }\n    /**\n     * Removes the field at the specified path. If there is no field at the\n     * specified path, nothing is changed.\n     *\n     * @param path - The field path to remove.\n     */    delete(t) {\n        const e = this.field(t.popLast());\n        jt(e) && e.mapValue.fields && delete e.mapValue.fields[t.lastSegment()];\n    }\n    isEqual(t) {\n        return Ft(this.value, t.value);\n    }\n    /**\n     * Returns the map that contains the leaf element of `path`. If the parent\n     * entry does not yet exist, or if it is not a map, a new map will be created.\n     */    getFieldsMap(t) {\n        let e = this.value;\n        e.mapValue.fields || (e.mapValue = {\n            fields: {}\n        });\n        for (let n = 0; n < t.length; ++n) {\n            let r = e.mapValue.fields[t.get(n)];\n            jt(r) && r.mapValue.fields || (r = {\n                mapValue: {\n                    fields: {}\n                }\n            }, e.mapValue.fields[t.get(n)] = r), e = r;\n        }\n        return e.mapValue.fields;\n    }\n    /**\n     * Modifies `fieldsMap` by adding, replacing or deleting the specified\n     * entries.\n     */    applyChanges(t, e, n) {\n        Et(e, ((e, n) => t[e] = n));\n        for (const e of n) delete t[e];\n    }\n    clone() {\n        return new Bt(Mt(this.value));\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Represents a document in Firestore with a key, version, data and whether it\n * has local mutations applied to it.\n *\n * Documents can transition between states via `convertToFoundDocument()`,\n * `convertToNoDocument()` and `convertToUnknownDocument()`. If a document does\n * not transition to one of these states even after all mutations have been\n * applied, `isValidDocument()` returns false and the document should be removed\n * from all views.\n */ class zt {\n    constructor(t, e, n, r, s, i) {\n        this.key = t, this.documentType = e, this.version = n, this.readTime = r, this.data = s, \n        this.documentState = i;\n    }\n    /**\n     * Creates a document with no known version or data, but which can serve as\n     * base document for mutations.\n     */    static newInvalidDocument(t) {\n        return new zt(t, 0 /* INVALID */ , vt.min(), vt.min(), Bt.empty(), 0 /* SYNCED */);\n    }\n    /**\n     * Creates a new document that is known to exist with the given data at the\n     * given version.\n     */    static newFoundDocument(t, e, n) {\n        return new zt(t, 1 /* FOUND_DOCUMENT */ , e, vt.min(), n, 0 /* SYNCED */);\n    }\n    /** Creates a new document that is known to not exist at the given version. */    static newNoDocument(t, e) {\n        return new zt(t, 2 /* NO_DOCUMENT */ , e, vt.min(), Bt.empty(), 0 /* SYNCED */);\n    }\n    /**\n     * Creates a new document that is known to exist at the given version but\n     * whose data is not known (e.g. a document that was updated without a known\n     * base document).\n     */    static newUnknownDocument(t, e) {\n        return new zt(t, 3 /* UNKNOWN_DOCUMENT */ , e, vt.min(), Bt.empty(), 2 /* HAS_COMMITTED_MUTATIONS */);\n    }\n    /**\n     * Changes the document type to indicate that it exists and that its version\n     * and data are known.\n     */    convertToFoundDocument(t, e) {\n        return this.version = t, this.documentType = 1 /* FOUND_DOCUMENT */ , this.data = e, \n        this.documentState = 0 /* SYNCED */ , this;\n    }\n    /**\n     * Changes the document type to indicate that it doesn't exist at the given\n     * version.\n     */    convertToNoDocument(t) {\n        return this.version = t, this.documentType = 2 /* NO_DOCUMENT */ , this.data = Bt.empty(), \n        this.documentState = 0 /* SYNCED */ , this;\n    }\n    /**\n     * Changes the document type to indicate that it exists at a given version but\n     * that its data is not known (e.g. a document that was updated without a known\n     * base document).\n     */    convertToUnknownDocument(t) {\n        return this.version = t, this.documentType = 3 /* UNKNOWN_DOCUMENT */ , this.data = Bt.empty(), \n        this.documentState = 2 /* HAS_COMMITTED_MUTATIONS */ , this;\n    }\n    setHasCommittedMutations() {\n        return this.documentState = 2 /* HAS_COMMITTED_MUTATIONS */ , this;\n    }\n    setHasLocalMutations() {\n        return this.documentState = 1 /* HAS_LOCAL_MUTATIONS */ , this;\n    }\n    setReadTime(t) {\n        return this.readTime = t, this;\n    }\n    get hasLocalMutations() {\n        return 1 /* HAS_LOCAL_MUTATIONS */ === this.documentState;\n    }\n    get hasCommittedMutations() {\n        return 2 /* HAS_COMMITTED_MUTATIONS */ === this.documentState;\n    }\n    get hasPendingWrites() {\n        return this.hasLocalMutations || this.hasCommittedMutations;\n    }\n    isValidDocument() {\n        return 0 /* INVALID */ !== this.documentType;\n    }\n    isFoundDocument() {\n        return 1 /* FOUND_DOCUMENT */ === this.documentType;\n    }\n    isNoDocument() {\n        return 2 /* NO_DOCUMENT */ === this.documentType;\n    }\n    isUnknownDocument() {\n        return 3 /* UNKNOWN_DOCUMENT */ === this.documentType;\n    }\n    isEqual(t) {\n        return t instanceof zt && this.key.isEqual(t.key) && this.version.isEqual(t.version) && this.documentType === t.documentType && this.documentState === t.documentState && this.data.isEqual(t.data);\n    }\n    mutableCopy() {\n        return new zt(this.key, this.documentType, this.version, this.readTime, this.data.clone(), this.documentState);\n    }\n    toString() {\n        return `Document(${this.key}, ${this.version}, ${JSON.stringify(this.data.value)}, {documentType: ${this.documentType}}), {documentState: ${this.documentState}})`;\n    }\n}\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// Visible for testing\nclass Gt {\n    constructor(t, e = null, n = [], r = [], s = null, i = null, o = null) {\n        this.path = t, this.collectionGroup = e, this.orderBy = n, this.filters = r, this.limit = s, \n        this.startAt = i, this.endAt = o, this.P = null;\n    }\n}\n\n/**\n * Initializes a Target with a path and optional additional query constraints.\n * Path must currently be empty if this is a collection group query.\n *\n * NOTE: you should always construct `Target` from `Query.toTarget` instead of\n * using this factory method, because `Query` provides an implicit `orderBy`\n * property.\n */ function Qt(t, e = null, n = [], r = [], s = null, i = null, o = null) {\n    return new Gt(t, e, n, r, s, i, o);\n}\n\nclass Wt extends class {} {\n    constructor(t, e, n) {\n        super(), this.field = t, this.op = e, this.value = n;\n    }\n    /**\n     * Creates a filter based on the provided arguments.\n     */    static create(t, e, n) {\n        return t.isKeyField() ? \"in\" /* IN */ === e || \"not-in\" /* NOT_IN */ === e ? this.V(t, e, n) : new Yt(t, e, n) : \"array-contains\" /* ARRAY_CONTAINS */ === e ? new Xt(t, n) : \"in\" /* IN */ === e ? new Zt(t, n) : \"not-in\" /* NOT_IN */ === e ? new te(t, n) : \"array-contains-any\" /* ARRAY_CONTAINS_ANY */ === e ? new ee(t, n) : new Wt(t, e, n);\n    }\n    static V(t, e, n) {\n        return \"in\" /* IN */ === e ? new Ht(t, n) : new Kt(t, n);\n    }\n    matches(t) {\n        const e = t.data.field(this.field);\n        // Types do not have to match in NOT_EQUAL filters.\n                return \"!=\" /* NOT_EQUAL */ === this.op ? null !== e && this.D(qt(e, this.value)) : null !== e && St(this.value) === St(e) && this.D(qt(e, this.value));\n        // Only compare types with matching backend order (such as double and int).\n        }\n    D(t) {\n        switch (this.op) {\n          case \"<\" /* LESS_THAN */ :\n            return t < 0;\n\n          case \"<=\" /* LESS_THAN_OR_EQUAL */ :\n            return t <= 0;\n\n          case \"==\" /* EQUAL */ :\n            return 0 === t;\n\n          case \"!=\" /* NOT_EQUAL */ :\n            return 0 !== t;\n\n          case \">\" /* GREATER_THAN */ :\n            return t > 0;\n\n          case \">=\" /* GREATER_THAN_OR_EQUAL */ :\n            return t >= 0;\n\n          default:\n            return g();\n        }\n    }\n    N() {\n        return [ \"<\" /* LESS_THAN */ , \"<=\" /* LESS_THAN_OR_EQUAL */ , \">\" /* GREATER_THAN */ , \">=\" /* GREATER_THAN_OR_EQUAL */ , \"!=\" /* NOT_EQUAL */ , \"not-in\" /* NOT_IN */ ].indexOf(this.op) >= 0;\n    }\n}\n\n/** Filter that matches on key fields (i.e. '__name__'). */\nclass Yt extends Wt {\n    constructor(t, e, n) {\n        super(t, e, n), this.key = et.fromName(n.referenceValue);\n    }\n    matches(t) {\n        const e = et.comparator(t.key, this.key);\n        return this.D(e);\n    }\n}\n\n/** Filter that matches on key fields within an array. */ class Ht extends Wt {\n    constructor(t, e) {\n        super(t, \"in\" /* IN */ , e), this.keys = Jt(\"in\" /* IN */ , e);\n    }\n    matches(t) {\n        return this.keys.some((e => e.isEqual(t.key)));\n    }\n}\n\n/** Filter that matches on key fields not present within an array. */ class Kt extends Wt {\n    constructor(t, e) {\n        super(t, \"not-in\" /* NOT_IN */ , e), this.keys = Jt(\"not-in\" /* NOT_IN */ , e);\n    }\n    matches(t) {\n        return !this.keys.some((e => e.isEqual(t.key)));\n    }\n}\n\nfunction Jt(t, e) {\n    var n;\n    return ((null === (n = e.arrayValue) || void 0 === n ? void 0 : n.values) || []).map((t => et.fromName(t.referenceValue)));\n}\n\n/** A Filter that implements the array-contains operator. */ class Xt extends Wt {\n    constructor(t, e) {\n        super(t, \"array-contains\" /* ARRAY_CONTAINS */ , e);\n    }\n    matches(t) {\n        const e = t.data.field(this.field);\n        return Lt(e) && xt(e.arrayValue, this.value);\n    }\n}\n\n/** A Filter that implements the IN operator. */ class Zt extends Wt {\n    constructor(t, e) {\n        super(t, \"in\" /* IN */ , e);\n    }\n    matches(t) {\n        const e = t.data.field(this.field);\n        return null !== e && xt(this.value.arrayValue, e);\n    }\n}\n\n/** A Filter that implements the not-in operator. */ class te extends Wt {\n    constructor(t, e) {\n        super(t, \"not-in\" /* NOT_IN */ , e);\n    }\n    matches(t) {\n        if (xt(this.value.arrayValue, {\n            nullValue: \"NULL_VALUE\"\n        })) return !1;\n        const e = t.data.field(this.field);\n        return null !== e && !xt(this.value.arrayValue, e);\n    }\n}\n\n/** A Filter that implements the array-contains-any operator. */ class ee extends Wt {\n    constructor(t, e) {\n        super(t, \"array-contains-any\" /* ARRAY_CONTAINS_ANY */ , e);\n    }\n    matches(t) {\n        const e = t.data.field(this.field);\n        return !(!Lt(e) || !e.arrayValue.values) && e.arrayValue.values.some((t => xt(this.value.arrayValue, t)));\n    }\n}\n\n/**\n * Represents a bound of a query.\n *\n * The bound is specified with the given components representing a position and\n * whether it's just before or just after the position (relative to whatever the\n * query order is).\n *\n * The position represents a logical index position for a query. It's a prefix\n * of values for the (potentially implicit) order by clauses of a query.\n *\n * Bound provides a function to determine whether a document comes before or\n * after a bound. This is influenced by whether the position is just before or\n * just after the provided values.\n */ class ne {\n    constructor(t, e) {\n        this.position = t, this.inclusive = e;\n    }\n}\n\n/**\n * An ordering on a field, in some Direction. Direction defaults to ASCENDING.\n */ class re {\n    constructor(t, e = \"asc\" /* ASCENDING */) {\n        this.field = t, this.dir = e;\n    }\n}\n\nfunction se(t, e) {\n    return t.dir === e.dir && t.field.isEqual(e.field);\n}\n\nfunction ie(t, e) {\n    if (null === t) return null === e;\n    if (null === e) return !1;\n    if (t.inclusive !== e.inclusive || t.position.length !== e.position.length) return !1;\n    for (let n = 0; n < t.position.length; n++) {\n        if (!Ft(t.position[n], e.position[n])) return !1;\n    }\n    return !0;\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Query encapsulates all the query attributes we support in the SDK. It can\n * be run against the LocalStore, as well as be converted to a `Target` to\n * query the RemoteStore results.\n *\n * Visible for testing.\n */ class oe {\n    /**\n     * Initializes a Query with a path and optional additional query constraints.\n     * Path must currently be empty if this is a collection group query.\n     */\n    constructor(t, e = null, n = [], r = [], s = null, i = \"F\" /* First */ , o = null, u = null) {\n        this.path = t, this.collectionGroup = e, this.explicitOrderBy = n, this.filters = r, \n        this.limit = s, this.limitType = i, this.startAt = o, this.endAt = u, this.$ = null, \n        // The corresponding `Target` of this `Query` instance.\n        this.S = null, this.startAt, this.endAt;\n    }\n}\n\n/** Creates a new Query for a query that matches all documents at `path` */ function ue(t) {\n    return !ct(t.limit) && \"L\" /* Last */ === t.limitType;\n}\n\nfunction ce(t) {\n    return t.explicitOrderBy.length > 0 ? t.explicitOrderBy[0].field : null;\n}\n\nfunction ae(t) {\n    for (const e of t.filters) if (e.N()) return e.field;\n    return null;\n}\n\n/**\n * Checks if any of the provided Operators are included in the query and\n * returns the first one that is, or null if none are.\n */\n/**\n * Returns whether the query matches a collection group rather than a specific\n * collection.\n */\nfunction he(t) {\n    return null !== t.collectionGroup;\n}\n\n/**\n * Returns the implicit order by constraint that is used to execute the Query,\n * which can be different from the order by constraints the user provided (e.g.\n * the SDK and backend always orders by `__name__`).\n */ function le(t) {\n    const e = b(t);\n    if (null === e.$) {\n        e.$ = [];\n        const t = ae(e), n = ce(e);\n        if (null !== t && null === n) \n        // In order to implicitly add key ordering, we must also add the\n        // inequality filter field for it to be a valid query.\n        // Note that the default inequality field and key ordering is ascending.\n        t.isKeyField() || e.$.push(new re(t)), e.$.push(new re(tt.keyField(), \"asc\" /* ASCENDING */)); else {\n            let t = !1;\n            for (const n of e.explicitOrderBy) e.$.push(n), n.field.isKeyField() && (t = !0);\n            if (!t) {\n                // The order of the implicit key ordering always matches the last\n                // explicit order by\n                const t = e.explicitOrderBy.length > 0 ? e.explicitOrderBy[e.explicitOrderBy.length - 1].dir : \"asc\" /* ASCENDING */;\n                e.$.push(new re(tt.keyField(), t));\n            }\n        }\n    }\n    return e.$;\n}\n\n/**\n * Converts this `Query` instance to it's corresponding `Target` representation.\n */ function fe(t) {\n    const e = b(t);\n    if (!e.S) if (\"F\" /* First */ === e.limitType) e.S = Qt(e.path, e.collectionGroup, le(e), e.filters, e.limit, e.startAt, e.endAt); else {\n        // Flip the orderBy directions since we want the last results\n        const t = [];\n        for (const n of le(e)) {\n            const e = \"desc\" /* DESCENDING */ === n.dir ? \"asc\" /* ASCENDING */ : \"desc\" /* DESCENDING */;\n            t.push(new re(n.field, e));\n        }\n        // We need to swap the cursors to match the now-flipped query ordering.\n                const n = e.endAt ? new ne(e.endAt.position, !e.endAt.inclusive) : null, r = e.startAt ? new ne(e.startAt.position, !e.startAt.inclusive) : null;\n        // Now return as a LimitType.First query.\n        e.S = Qt(e.path, e.collectionGroup, t, e.filters, e.limit, n, r);\n    }\n    return e.S;\n}\n\nfunction de(t, e) {\n    return function(t, e) {\n        if (t.limit !== e.limit) return !1;\n        if (t.orderBy.length !== e.orderBy.length) return !1;\n        for (let n = 0; n < t.orderBy.length; n++) if (!se(t.orderBy[n], e.orderBy[n])) return !1;\n        if (t.filters.length !== e.filters.length) return !1;\n        for (let s = 0; s < t.filters.length; s++) if (n = t.filters[s], r = e.filters[s], \n        n.op !== r.op || !n.field.isEqual(r.field) || !Ft(n.value, r.value)) return !1;\n        var n, r;\n        return t.collectionGroup === e.collectionGroup && !!t.path.isEqual(e.path) && !!ie(t.startAt, e.startAt) && ie(t.endAt, e.endAt);\n    }(fe(t), fe(e)) && t.limitType === e.limitType;\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Returns an DoubleValue for `value` that is encoded based the serializer's\n * `useProto3Json` setting.\n */\n/**\n * Returns a value for a number that's appropriate to put into a proto.\n * The return value is an IntegerValue if it can safely represent the value,\n * otherwise a DoubleValue is returned.\n */\nfunction we(t, e) {\n    return function(t) {\n        return \"number\" == typeof t && Number.isInteger(t) && !at(t) && t <= Number.MAX_SAFE_INTEGER && t >= Number.MIN_SAFE_INTEGER;\n    }(e) ? \n    /**\n * Returns an IntegerValue for `value`.\n */\n    function(t) {\n        return {\n            integerValue: \"\" + t\n        };\n    }(e) : function(t, e) {\n        if (t.F) {\n            if (isNaN(e)) return {\n                doubleValue: \"NaN\"\n            };\n            if (e === 1 / 0) return {\n                doubleValue: \"Infinity\"\n            };\n            if (e === -1 / 0) return {\n                doubleValue: \"-Infinity\"\n            };\n        }\n        return {\n            doubleValue: at(e) ? \"-0\" : e\n        };\n    }(t, e);\n}\n\n/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** Used to represent a field transform on a mutation. */ class me {\n    constructor() {\n        // Make sure that the structural type of `TransformOperation` is unique.\n        // See https://github.com/microsoft/TypeScript/issues/5451\n        this._ = void 0;\n    }\n}\n\n/** Transforms a value into a server-generated timestamp. */ class pe extends me {}\n\n/** Transforms an array value via a union operation. */ class ye extends me {\n    constructor(t) {\n        super(), this.elements = t;\n    }\n}\n\n/** Transforms an array value via a remove operation. */ class _e extends me {\n    constructor(t) {\n        super(), this.elements = t;\n    }\n}\n\n/**\n * Implements the backend semantics for locally computed NUMERIC_ADD (increment)\n * transforms. Converts all field values to integers or doubles, but unlike the\n * backend does not cap integer values at 2^63. Instead, JavaScript number\n * arithmetic is used and precision loss can occur for values greater than 2^53.\n */ class ge extends me {\n    constructor(t, e) {\n        super(), this.q = t, this.O = e;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** A field path and the TransformOperation to perform upon it. */ class ve {\n    constructor(t, e) {\n        this.field = t, this.transform = e;\n    }\n}\n\n/**\n * Encodes a precondition for a mutation. This follows the model that the\n * backend accepts with the special case of an explicit \"empty\" precondition\n * (meaning no precondition).\n */ class be {\n    constructor(t, e) {\n        this.updateTime = t, this.exists = e;\n    }\n    /** Creates a new empty Precondition. */    static none() {\n        return new be;\n    }\n    /** Creates a new Precondition with an exists flag. */    static exists(t) {\n        return new be(void 0, t);\n    }\n    /** Creates a new Precondition based on a version a document exists at. */    static updateTime(t) {\n        return new be(t);\n    }\n    /** Returns whether this Precondition is empty. */    get isNone() {\n        return void 0 === this.updateTime && void 0 === this.exists;\n    }\n    isEqual(t) {\n        return this.exists === t.exists && (this.updateTime ? !!t.updateTime && this.updateTime.isEqual(t.updateTime) : !t.updateTime);\n    }\n}\n\n/**\n * A mutation describes a self-contained change to a document. Mutations can\n * create, replace, delete, and update subsets of documents.\n *\n * Mutations not only act on the value of the document but also its version.\n *\n * For local mutations (mutations that haven't been committed yet), we preserve\n * the existing version for Set and Patch mutations. For Delete mutations, we\n * reset the version to 0.\n *\n * Here's the expected transition table.\n *\n * MUTATION           APPLIED TO            RESULTS IN\n *\n * SetMutation        Document(v3)          Document(v3)\n * SetMutation        NoDocument(v3)        Document(v0)\n * SetMutation        InvalidDocument(v0)   Document(v0)\n * PatchMutation      Document(v3)          Document(v3)\n * PatchMutation      NoDocument(v3)        NoDocument(v3)\n * PatchMutation      InvalidDocument(v0)   UnknownDocument(v3)\n * DeleteMutation     Document(v3)          NoDocument(v0)\n * DeleteMutation     NoDocument(v3)        NoDocument(v0)\n * DeleteMutation     InvalidDocument(v0)   NoDocument(v0)\n *\n * For acknowledged mutations, we use the updateTime of the WriteResponse as\n * the resulting version for Set and Patch mutations. As deletes have no\n * explicit update time, we use the commitTime of the WriteResponse for\n * Delete mutations.\n *\n * If a mutation is acknowledged by the backend but fails the precondition check\n * locally, we transition to an `UnknownDocument` and rely on Watch to send us\n * the updated version.\n *\n * Field transforms are used only with Patch and Set Mutations. We use the\n * `updateTransforms` message to store transforms, rather than the `transforms`s\n * messages.\n *\n * ## Subclassing Notes\n *\n * Every type of mutation needs to implement its own applyToRemoteDocument() and\n * applyToLocalView() to implement the actual behavior of applying the mutation\n * to some source document (see `setMutationApplyToRemoteDocument()` for an\n * example).\n */ class Ee {}\n\n/**\n * A mutation that creates or replaces the document at the given key with the\n * object value contents.\n */ class Te extends Ee {\n    constructor(t, e, n, r = []) {\n        super(), this.key = t, this.value = e, this.precondition = n, this.fieldTransforms = r, \n        this.type = 0 /* Set */;\n    }\n}\n\n/**\n * A mutation that modifies fields of the document at the given key with the\n * given values. The values are applied through a field mask:\n *\n *  * When a field is in both the mask and the values, the corresponding field\n *    is updated.\n *  * When a field is in neither the mask nor the values, the corresponding\n *    field is unmodified.\n *  * When a field is in the mask but not in the values, the corresponding field\n *    is deleted.\n *  * When a field is not in the mask but is in the values, the values map is\n *    ignored.\n */ class Ie extends Ee {\n    constructor(t, e, n, r, s = []) {\n        super(), this.key = t, this.data = e, this.fieldMask = n, this.precondition = r, \n        this.fieldTransforms = s, this.type = 1 /* Patch */;\n    }\n}\n\n/** A mutation that deletes the document at the given key. */ class Ae extends Ee {\n    constructor(t, e) {\n        super(), this.key = t, this.precondition = e, this.type = 2 /* Delete */ , this.fieldTransforms = [];\n    }\n}\n\n/**\n * A mutation that verifies the existence of the document at the given key with\n * the provided precondition.\n *\n * The `verify` operation is only used in Transactions, and this class serves\n * primarily to facilitate serialization into protos.\n */ class Re extends Ee {\n    constructor(t, e) {\n        super(), this.key = t, this.precondition = e, this.type = 3 /* Verify */ , this.fieldTransforms = [];\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ const Pe = (() => {\n    const t = {\n        asc: \"ASCENDING\",\n        desc: \"DESCENDING\"\n    };\n    return t;\n})(), Ve = (() => {\n    const t = {\n        \"<\": \"LESS_THAN\",\n        \"<=\": \"LESS_THAN_OR_EQUAL\",\n        \">\": \"GREATER_THAN\",\n        \">=\": \"GREATER_THAN_OR_EQUAL\",\n        \"==\": \"EQUAL\",\n        \"!=\": \"NOT_EQUAL\",\n        \"array-contains\": \"ARRAY_CONTAINS\",\n        in: \"IN\",\n        \"not-in\": \"NOT_IN\",\n        \"array-contains-any\": \"ARRAY_CONTAINS_ANY\"\n    };\n    return t;\n})();\n\n/**\n * This class generates JsonObject values for the Datastore API suitable for\n * sending to either GRPC stub methods or via the JSON/HTTP REST API.\n *\n * The serializer supports both Protobuf.js and Proto3 JSON formats. By\n * setting `useProto3Json` to true, the serializer will use the Proto3 JSON\n * format.\n *\n * For a description of the Proto3 JSON format check\n * https://developers.google.com/protocol-buffers/docs/proto3#json\n *\n * TODO(klimt): We can remove the databaseId argument if we keep the full\n * resource name in documents.\n */\nclass De {\n    constructor(t, e) {\n        this.databaseId = t, this.F = e;\n    }\n}\n\n/**\n * Returns a value for a number (or null) that's appropriate to put into\n * a google.protobuf.Int32Value proto.\n * DO NOT USE THIS FOR ANYTHING ELSE.\n * This method cheats. It's typed as returning \"number\" because that's what\n * our generated proto interfaces say Int32Value must be. But GRPC actually\n * expects a { value: <number> } struct.\n */\n/**\n * Returns a value for a Date that's appropriate to put into a proto.\n */\nfunction Ne(t, e) {\n    if (t.F) {\n        return `${new Date(1e3 * e.seconds).toISOString().replace(/\\.\\d*/, \"\").replace(\"Z\", \"\")}.${(\"000000000\" + e.nanoseconds).slice(-9)}Z`;\n    }\n    return {\n        seconds: \"\" + e.seconds,\n        nanos: e.nanoseconds\n    };\n}\n\n/**\n * Returns a value for bytes that's appropriate to put in a proto.\n *\n * Visible for testing.\n */\nfunction $e(t, e) {\n    return t.F ? e.toBase64() : e.toUint8Array();\n}\n\nfunction Se(t, e) {\n    return Ne(t, e.toTimestamp());\n}\n\nfunction Fe(t) {\n    return v(!!t), vt.fromTimestamp(function(t) {\n        const e = Rt(t);\n        return new gt(e.seconds, e.nanos);\n    }(t));\n}\n\nfunction xe(t, e) {\n    return function(t) {\n        return new X([ \"projects\", t.projectId, \"databases\", t.database ]);\n    }(t).child(\"documents\").child(e).canonicalString();\n}\n\nfunction qe(t, e) {\n    return xe(t.databaseId, e.path);\n}\n\nfunction Oe(t, e) {\n    const n = function(t) {\n        const e = X.fromString(t);\n        return v(We(e)), e;\n    }(e);\n    if (n.get(1) !== t.databaseId.projectId) throw new U(A, \"Tried to deserialize key from different project: \" + n.get(1) + \" vs \" + t.databaseId.projectId);\n    if (n.get(3) !== t.databaseId.database) throw new U(A, \"Tried to deserialize key from different database: \" + n.get(3) + \" vs \" + t.databaseId.database);\n    return new et((v((r = n).length > 4 && \"documents\" === r.get(4)), r.popFirst(5)));\n    var r;\n    /** Creates a Document proto from key and fields (but no create/update time) */}\n\nfunction Ce(t, e) {\n    return xe(t.databaseId, e);\n}\n\nfunction Le(t) {\n    return new X([ \"projects\", t.databaseId.projectId, \"databases\", t.databaseId.database ]).canonicalString();\n}\n\nfunction Ue(t, e, n) {\n    return {\n        name: qe(t, e),\n        fields: n.value.mapValue.fields\n    };\n}\n\nfunction ke(t, e) {\n    return \"found\" in e ? function(t, e) {\n        v(!!e.found), e.found.name, e.found.updateTime;\n        const n = Oe(t, e.found.name), r = Fe(e.found.updateTime), s = new Bt({\n            mapValue: {\n                fields: e.found.fields\n            }\n        });\n        return zt.newFoundDocument(n, r, s);\n    }(t, e) : \"missing\" in e ? function(t, e) {\n        v(!!e.missing), v(!!e.readTime);\n        const n = Oe(t, e.missing), r = Fe(e.readTime);\n        return zt.newNoDocument(n, r);\n    }(t, e) : g();\n}\n\nfunction je(t, e) {\n    let n;\n    if (e instanceof Te) n = {\n        update: Ue(t, e.key, e.value)\n    }; else if (e instanceof Ae) n = {\n        delete: qe(t, e.key)\n    }; else if (e instanceof Ie) n = {\n        update: Ue(t, e.key, e.data),\n        updateMask: Qe(e.fieldMask)\n    }; else {\n        if (!(e instanceof Re)) return g();\n        n = {\n            verify: qe(t, e.key)\n        };\n    }\n    return e.fieldTransforms.length > 0 && (n.updateTransforms = e.fieldTransforms.map((t => function(t, e) {\n        const n = e.transform;\n        if (n instanceof pe) return {\n            fieldPath: e.field.canonicalString(),\n            setToServerValue: \"REQUEST_TIME\"\n        };\n        if (n instanceof ye) return {\n            fieldPath: e.field.canonicalString(),\n            appendMissingElements: {\n                values: n.elements\n            }\n        };\n        if (n instanceof _e) return {\n            fieldPath: e.field.canonicalString(),\n            removeAllFromArray: {\n                values: n.elements\n            }\n        };\n        if (n instanceof ge) return {\n            fieldPath: e.field.canonicalString(),\n            increment: n.O\n        };\n        throw g();\n    }(0, t)))), e.precondition.isNone || (n.currentDocument = function(t, e) {\n        return void 0 !== e.updateTime ? {\n            updateTime: Se(t, e.updateTime)\n        } : void 0 !== e.exists ? {\n            exists: e.exists\n        } : g();\n    }(t, e.precondition)), n;\n}\n\nfunction Me(t, e) {\n    // Dissect the path into parent, collectionId, and optional key filter.\n    const n = {\n        structuredQuery: {}\n    }, r = e.path;\n    null !== e.collectionGroup ? (n.parent = Ce(t, r), n.structuredQuery.from = [ {\n        collectionId: e.collectionGroup,\n        allDescendants: !0\n    } ]) : (n.parent = Ce(t, r.popLast()), n.structuredQuery.from = [ {\n        collectionId: r.lastSegment()\n    } ]);\n    const s = function(t) {\n        if (0 === t.length) return;\n        const e = t.map((t => \n        // visible for testing\n        function(t) {\n            if (\"==\" /* EQUAL */ === t.op) {\n                if (kt(t.value)) return {\n                    unaryFilter: {\n                        field: Ge(t.field),\n                        op: \"IS_NAN\"\n                    }\n                };\n                if (Ut(t.value)) return {\n                    unaryFilter: {\n                        field: Ge(t.field),\n                        op: \"IS_NULL\"\n                    }\n                };\n            } else if (\"!=\" /* NOT_EQUAL */ === t.op) {\n                if (kt(t.value)) return {\n                    unaryFilter: {\n                        field: Ge(t.field),\n                        op: \"IS_NOT_NAN\"\n                    }\n                };\n                if (Ut(t.value)) return {\n                    unaryFilter: {\n                        field: Ge(t.field),\n                        op: \"IS_NOT_NULL\"\n                    }\n                };\n            }\n            return {\n                fieldFilter: {\n                    field: Ge(t.field),\n                    op: ze(t.op),\n                    value: t.value\n                }\n            };\n        }(t)));\n        if (1 === e.length) return e[0];\n        return {\n            compositeFilter: {\n                op: \"AND\",\n                filters: e\n            }\n        };\n    }(e.filters);\n    s && (n.structuredQuery.where = s);\n    const i = function(t) {\n        if (0 === t.length) return;\n        return t.map((t => \n        // visible for testing\n        function(t) {\n            return {\n                field: Ge(t.field),\n                direction: Be(t.dir)\n            };\n        }(t)));\n    }(e.orderBy);\n    i && (n.structuredQuery.orderBy = i);\n    const o = function(t, e) {\n        return t.F || ct(e) ? e : {\n            value: e\n        };\n    }(t, e.limit);\n    var u;\n    return null !== o && (n.structuredQuery.limit = o), e.startAt && (n.structuredQuery.startAt = {\n        before: (u = e.startAt).inclusive,\n        values: u.position\n    }), e.endAt && (n.structuredQuery.endAt = function(t) {\n        return {\n            before: !t.inclusive,\n            values: t.position\n        };\n    }\n    // visible for testing\n    (e.endAt)), n;\n}\n\nfunction Be(t) {\n    return Pe[t];\n}\n\n// visible for testing\nfunction ze(t) {\n    return Ve[t];\n}\n\nfunction Ge(t) {\n    return {\n        fieldPath: t.canonicalString()\n    };\n}\n\nfunction Qe(t) {\n    const e = [];\n    return t.fields.forEach((t => e.push(t.canonicalString()))), {\n        fieldPaths: e\n    };\n}\n\nfunction We(t) {\n    // Resource names have at least 4 components (project ID, database ID)\n    return t.length >= 4 && \"projects\" === t.get(0) && \"databases\" === t.get(2);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ function Ye(t) {\n    return new De(t, /* useProto3Json= */ !0);\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A helper for running delayed tasks following an exponential backoff curve\n * between attempts.\n *\n * Each delay is made up of a \"base\" delay which follows the exponential\n * backoff curve, and a +/- 50% \"jitter\" that is calculated and added to the\n * base delay. This prevents clients from accidentally synchronizing their\n * delays causing spikes of load to the backend.\n */\nclass He {\n    constructor(\n    /**\n     * The AsyncQueue to run backoff operations on.\n     */\n    t, \n    /**\n     * The ID to use when scheduling backoff operations on the AsyncQueue.\n     */\n    e, \n    /**\n     * The initial delay (used as the base delay on the first retry attempt).\n     * Note that jitter will still be applied, so the actual delay could be as\n     * little as 0.5*initialDelayMs.\n     */\n    n = 1e3\n    /**\n     * The multiplier to use to determine the extended base delay after each\n     * attempt.\n     */ , r = 1.5\n    /**\n     * The maximum base delay after which no further backoff is performed.\n     * Note that jitter will still be applied, so the actual delay could be as\n     * much as 1.5*maxDelayMs.\n     */ , s = 6e4) {\n        this.C = t, this.timerId = e, this.L = n, this.U = r, this.k = s, this.j = 0, this.M = null, \n        /** The last backoff attempt, as epoch milliseconds. */\n        this.B = Date.now(), this.reset();\n    }\n    /**\n     * Resets the backoff delay.\n     *\n     * The very next backoffAndWait() will have no delay. If it is called again\n     * (i.e. due to an error), initialDelayMs (plus jitter) will be used, and\n     * subsequent ones will increase according to the backoffFactor.\n     */    reset() {\n        this.j = 0;\n    }\n    /**\n     * Resets the backoff delay to the maximum delay (e.g. for use after a\n     * RESOURCE_EXHAUSTED error).\n     */    G() {\n        this.j = this.k;\n    }\n    /**\n     * Returns a promise that resolves after currentDelayMs, and increases the\n     * delay for any subsequent attempts. If there was a pending backoff operation\n     * already, it will be canceled.\n     */    W(t) {\n        // Cancel any pending backoff operation.\n        this.cancel();\n        // First schedule using the current base (which may be 0 and should be\n        // honored as such).\n        const e = Math.floor(this.j + this.Y()), n = Math.max(0, Date.now() - this.B), r = Math.max(0, e - n);\n        // Guard against lastAttemptTime being in the future due to a clock change.\n                r > 0 && m(\"ExponentialBackoff\", `Backing off for ${r} ms (base delay: ${this.j} ms, delay with jitter: ${e} ms, last attempt: ${n} ms ago)`), \n        this.M = this.C.enqueueAfterDelay(this.timerId, r, (() => (this.B = Date.now(), \n        t()))), \n        // Apply backoff factor to determine next delay and ensure it is within\n        // bounds.\n        this.j *= this.U, this.j < this.L && (this.j = this.L), this.j > this.k && (this.j = this.k);\n    }\n    H() {\n        null !== this.M && (this.M.skipDelay(), this.M = null);\n    }\n    cancel() {\n        null !== this.M && (this.M.cancel(), this.M = null);\n    }\n    /** Returns a random value in the range [-currentBaseMs/2, currentBaseMs/2] */    Y() {\n        return (Math.random() - .5) * this.j;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Datastore and its related methods are a wrapper around the external Google\n * Cloud Datastore grpc API, which provides an interface that is more convenient\n * for the rest of the client SDK architecture to consume.\n */\n/**\n * An implementation of Datastore that exposes additional state for internal\n * consumption.\n */\nclass Ke extends class {} {\n    constructor(t, e, n, r) {\n        super(), this.authCredentials = t, this.appCheckCredentials = e, this.K = n, this.q = r, \n        this.J = !1;\n    }\n    X() {\n        if (this.J) throw new U(S, \"The client has already been terminated.\");\n    }\n    /** Invokes the provided RPC with auth and AppCheck tokens. */    m(t, e, n) {\n        return this.X(), Promise.all([ this.authCredentials.getToken(), this.appCheckCredentials.getToken() ]).then((([r, s]) => this.K.m(t, e, n, r, s))).catch((t => {\n            throw \"FirebaseError\" === t.name ? (t.code === N && (this.authCredentials.invalidateToken(), \n            this.appCheckCredentials.invalidateToken()), t) : new U(I, t.toString());\n        }));\n    }\n    /** Invokes the provided RPC with streamed results with auth and AppCheck tokens. */    T(t, e, n) {\n        return this.X(), Promise.all([ this.authCredentials.getToken(), this.appCheckCredentials.getToken() ]).then((([r, s]) => this.K.T(t, e, n, r, s))).catch((t => {\n            throw \"FirebaseError\" === t.name ? (t.code === N && (this.authCredentials.invalidateToken(), \n            this.appCheckCredentials.invalidateToken()), t) : new U(I, t.toString());\n        }));\n    }\n    terminate() {\n        this.J = !0;\n    }\n}\n\n// TODO(firestorexp): Make sure there is only one Datastore instance per\n// firestore-exp client.\nasync function Je(t, e) {\n    const n = b(t), r = Le(n.q) + \"/documents\", s = {\n        writes: e.map((t => je(n.q, t)))\n    };\n    await n.m(\"Commit\", r, s);\n}\n\nasync function Xe(t, e) {\n    const n = b(t), r = Le(n.q) + \"/documents\", s = {\n        documents: e.map((t => qe(n.q, t)))\n    }, i = await n.T(\"BatchGetDocuments\", r, s), o = new Map;\n    i.forEach((t => {\n        const e = ke(n.q, t);\n        o.set(e.key.toString(), e);\n    }));\n    const u = [];\n    return e.forEach((t => {\n        const e = o.get(t.toString());\n        v(!!e), u.push(e);\n    })), u;\n}\n\nasync function Ze(t, e) {\n    const n = b(t), r = Me(n.q, fe(e));\n    return (await n.T(\"RunQuery\", r.parent, {\n        structuredQuery: r.structuredQuery\n    })).filter((t => !!t.document)).map((t => function(t, e, n) {\n        const r = Oe(t, e.name), s = Fe(e.updateTime), i = new Bt({\n            mapValue: {\n                fields: e.fields\n            }\n        }), o = zt.newFoundDocument(r, s, i);\n        return n && o.setHasCommittedMutations(), n ? o.setHasCommittedMutations() : o;\n    }(n.q, t.document, void 0)));\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ const tn = new Map;\n\n/**\n * An instance map that ensures only one Datastore exists per Firestore\n * instance.\n */\n/**\n * Returns an initialized and started Datastore for the given Firestore\n * instance. Callers must invoke removeComponents() when the Firestore\n * instance is terminated.\n */\nfunction en(t) {\n    if (t._terminated) throw new U(S, \"The client has already been terminated.\");\n    if (!tn.has(t)) {\n        m(\"ComponentProvider\", \"Initializing Datastore\");\n        const i = function(t) {\n            return new wt(t, fetch.bind(null));\n        }((e = t._databaseId, n = t.app.options.appId || \"\", r = t._persistenceKey, s = t._freezeSettings(), \n        new H(e, n, r, s.host, s.ssl, s.experimentalForceLongPolling, s.experimentalAutoDetectLongPolling, s.useFetchStreams))), o = Ye(t._databaseId), u = function(t, e, n, r) {\n            return new Ke(t, e, n, r);\n        }(t._authCredentials, t._appCheckCredentials, i, o);\n        tn.set(t, u);\n    }\n    var e, n, r, s;\n    /**\n * @license\n * Copyright 2018 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */    return tn.get(t);\n}\n\n/**\n * Removes all components associated with the provided instance. Must be called\n * when the `Firestore` instance is terminated.\n */\n/**\n * A concrete type describing all the values that can be applied via a\n * user-supplied `FirestoreSettings` object. This is a separate type so that\n * defaults can be supplied and the value can be checked for equality.\n */\nclass nn {\n    constructor(t) {\n        var e;\n        if (void 0 === t.host) {\n            if (void 0 !== t.ssl) throw new U(A, \"Can't provide ssl option if host option is not set\");\n            this.host = \"firestore.googleapis.com\", this.ssl = true;\n        } else this.host = t.host, this.ssl = null === (e = t.ssl) || void 0 === e || e;\n        if (this.credentials = t.credentials, this.ignoreUndefinedProperties = !!t.ignoreUndefinedProperties, \n        void 0 === t.cacheSizeBytes) this.cacheSizeBytes = 41943040; else {\n            if (-1 !== t.cacheSizeBytes && t.cacheSizeBytes < 1048576) throw new U(A, \"cacheSizeBytes must be at least 1048576\");\n            this.cacheSizeBytes = t.cacheSizeBytes;\n        }\n        this.experimentalForceLongPolling = !!t.experimentalForceLongPolling, this.experimentalAutoDetectLongPolling = !!t.experimentalAutoDetectLongPolling, \n        this.useFetchStreams = !!t.useFetchStreams, function(t, e, n, r) {\n            if (!0 === e && !0 === r) throw new U(A, `${t} and ${n} cannot be used together.`);\n        }(\"experimentalForceLongPolling\", t.experimentalForceLongPolling, \"experimentalAutoDetectLongPolling\", t.experimentalAutoDetectLongPolling);\n    }\n    isEqual(t) {\n        return this.host === t.host && this.ssl === t.ssl && this.credentials === t.credentials && this.cacheSizeBytes === t.cacheSizeBytes && this.experimentalForceLongPolling === t.experimentalForceLongPolling && this.experimentalAutoDetectLongPolling === t.experimentalAutoDetectLongPolling && this.ignoreUndefinedProperties === t.ignoreUndefinedProperties && this.useFetchStreams === t.useFetchStreams;\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * The Cloud Firestore service interface.\n *\n * Do not call this constructor directly. Instead, use {@link getFirestore}.\n */ class rn {\n    /** @hideconstructor */\n    constructor(t, e, n) {\n        this._authCredentials = e, this._appCheckCredentials = n, \n        /**\n         * Whether it's a Firestore or Firestore Lite instance.\n         */\n        this.type = \"firestore-lite\", this._persistenceKey = \"(lite)\", this._settings = new nn({}), \n        this._settingsFrozen = !1, t instanceof K ? this._databaseId = t : (this._app = t, \n        this._databaseId = function(t) {\n            if (!Object.prototype.hasOwnProperty.apply(t.options, [ \"projectId\" ])) throw new U(A, '\"projectId\" not provided in firebase.initializeApp.');\n            return new K(t.options.projectId);\n        }\n        /**\n * Initializes a new instance of Cloud Firestore with the provided settings.\n * Can only be called before any other functions, including\n * {@link getFirestore}. If the custom settings are empty, this function is\n * equivalent to calling {@link getFirestore}.\n *\n * @param app - The {@link @firebase/app#FirebaseApp} with which the `Firestore` instance will\n * be associated.\n * @param settings - A settings object to configure the `Firestore` instance.\n * @returns A newly initialized `Firestore` instance.\n */ (t));\n    }\n    /**\n     * The {@link @firebase/app#FirebaseApp} associated with this `Firestore` service\n     * instance.\n     */    get app() {\n        if (!this._app) throw new U(S, \"Firestore was not initialized using the Firebase SDK. 'app' is not available\");\n        return this._app;\n    }\n    get _initialized() {\n        return this._settingsFrozen;\n    }\n    get _terminated() {\n        return void 0 !== this._terminateTask;\n    }\n    _setSettings(t) {\n        if (this._settingsFrozen) throw new U(S, \"Firestore has already been started and its settings can no longer be changed. You can only modify settings before calling any other methods on a Firestore object.\");\n        this._settings = new nn(t), void 0 !== t.credentials && (this._authCredentials = function(t) {\n            if (!t) return new M;\n            switch (t.type) {\n              case \"gapi\":\n                const e = t.client;\n                // Make sure this really is a Gapi client.\n                                return v(!(\"object\" != typeof e || null === e || !e.auth || !e.auth.getAuthHeaderValueForFirstParty)), \n                new Q(e, t.sessionIndex || \"0\", t.iamToken || null);\n\n              case \"provider\":\n                return t.client;\n\n              default:\n                throw new U(A, \"makeAuthCredentialsProvider failed due to invalid credential type\");\n            }\n        }(t.credentials));\n    }\n    _getSettings() {\n        return this._settings;\n    }\n    _freezeSettings() {\n        return this._settingsFrozen = !0, this._settings;\n    }\n    _delete() {\n        return this._terminateTask || (this._terminateTask = this._terminate()), this._terminateTask;\n    }\n    /** Returns a JSON-serializable representation of this `Firestore` instance. */    toJSON() {\n        return {\n            app: this._app,\n            databaseId: this._databaseId,\n            settings: this._settings\n        };\n    }\n    /**\n     * Terminates all components used by this client. Subclasses can override\n     * this method to clean up their own dependencies, but must also call this\n     * method.\n     *\n     * Only ever called once.\n     */    _terminate() {\n        return function(t) {\n            const e = tn.get(t);\n            e && (m(\"ComponentProvider\", \"Removing Datastore\"), tn.delete(t), e.terminate());\n        }(this), Promise.resolve();\n    }\n}\n\nfunction sn(t, e) {\n    const n = _getProvider(t, \"firestore/lite\");\n    if (n.isInitialized()) throw new U(S, \"Firestore can only be initialized once per app.\");\n    return n.initialize({\n        options: e\n    });\n}\n\n/**\n * Returns the existing `Firestore` instance that is associated with the\n * provided {@link @firebase/app#FirebaseApp}. If no instance exists, initializes a new\n * instance with default settings.\n *\n * @param app - The {@link @firebase/app#FirebaseApp} instance that the returned `Firestore`\n * instance is associated with.\n * @returns The `Firestore` instance of the provided app.\n */ function on(e = getApp()) {\n    return _getProvider(e, \"firestore/lite\").getImmediate();\n}\n\n/**\n * Modify this instance to communicate with the Cloud Firestore emulator.\n *\n * Note: This must be called before this instance has been used to do any\n * operations.\n *\n * @param firestore - The `Firestore` instance to configure to connect to the\n * emulator.\n * @param host - the emulator host (ex: localhost).\n * @param port - the emulator port (ex: 9000).\n * @param options.mockUserToken - the mock auth token to use for unit testing\n * Security Rules.\n */ function un(t, e, n, r = {}) {\n    var s;\n    const i = (t = ot(t, rn))._getSettings();\n    if (\"firestore.googleapis.com\" !== i.host && i.host !== e && y(\"Host has been set in both settings() and useEmulator(), emulator host will be used\"), \n    t._setSettings(Object.assign(Object.assign({}, i), {\n        host: `${e}:${n}`,\n        ssl: !1\n    })), r.mockUserToken) {\n        let e, n;\n        if (\"string\" == typeof r.mockUserToken) e = r.mockUserToken, n = l.MOCK_USER; else {\n            // Let createMockUserToken validate first (catches common mistakes like\n            // invalid field \"uid\" and missing field \"sub\" / \"user_id\".)\n            e = createMockUserToken(r.mockUserToken, null === (s = t._app) || void 0 === s ? void 0 : s.options.projectId);\n            const i = r.mockUserToken.sub || r.mockUserToken.user_id;\n            if (!i) throw new U(A, \"mockUserToken must contain 'sub' or 'user_id' field!\");\n            n = new l(i);\n        }\n        t._authCredentials = new B(new j(e, n));\n    }\n}\n\n/**\n * Terminates the provided `Firestore` instance.\n *\n * After calling `terminate()` only the `clearIndexedDbPersistence()` functions\n * may be used. Any other function will throw a `FirestoreError`. Termination\n * does not cancel any pending writes, and any promises that are awaiting a\n * response from the server will not be resolved.\n *\n * To restart after termination, create a new instance of `Firestore` with\n * {@link getFirestore}.\n *\n * Note: Under normal circumstances, calling `terminate()` is not required. This\n * function is useful only when you want to force this instance to release all of\n * its resources or in combination with {@link clearIndexedDbPersistence} to\n * ensure that all local state is destroyed between test runs.\n *\n * @param firestore - The `Firestore` instance to terminate.\n * @returns A `Promise` that is resolved when the instance has been successfully\n * terminated.\n */ function cn(t) {\n    return t = ot(t, rn), _removeServiceInstance(t.app, \"firestore/lite\"), t._delete();\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A `DocumentReference` refers to a document location in a Firestore database\n * and can be used to write, read, or listen to the location. The document at\n * the referenced location may or may not exist.\n */\nclass an {\n    /** @hideconstructor */\n    constructor(t, \n    /**\n     * If provided, the `FirestoreDataConverter` associated with this instance.\n     */\n    e, n) {\n        this.converter = e, this._key = n, \n        /** The type of this Firestore reference. */\n        this.type = \"document\", this.firestore = t;\n    }\n    get _path() {\n        return this._key.path;\n    }\n    /**\n     * The document's identifier within its collection.\n     */    get id() {\n        return this._key.path.lastSegment();\n    }\n    /**\n     * A string representing the path of the referenced document (relative\n     * to the root of the database).\n     */    get path() {\n        return this._key.path.canonicalString();\n    }\n    /**\n     * The collection this `DocumentReference` belongs to.\n     */    get parent() {\n        return new ln(this.firestore, this.converter, this._key.path.popLast());\n    }\n    withConverter(t) {\n        return new an(this.firestore, t, this._key);\n    }\n}\n\n/**\n * A `Query` refers to a query which you can read or listen to. You can also\n * construct refined `Query` objects by adding filters and ordering.\n */ class hn {\n    // This is the lite version of the Query class in the main SDK.\n    /** @hideconstructor protected */\n    constructor(t, \n    /**\n     * If provided, the `FirestoreDataConverter` associated with this instance.\n     */\n    e, n) {\n        this.converter = e, this._query = n, \n        /** The type of this Firestore reference. */\n        this.type = \"query\", this.firestore = t;\n    }\n    withConverter(t) {\n        return new hn(this.firestore, t, this._query);\n    }\n}\n\n/**\n * A `CollectionReference` object can be used for adding documents, getting\n * document references, and querying for documents (using {@link query}).\n */ class ln extends hn {\n    /** @hideconstructor */\n    constructor(t, e, n) {\n        super(t, e, new oe(n)), this._path = n, \n        /** The type of this Firestore reference. */\n        this.type = \"collection\";\n    }\n    /** The collection's identifier. */    get id() {\n        return this._query.path.lastSegment();\n    }\n    /**\n     * A string representing the path of the referenced collection (relative\n     * to the root of the database).\n     */    get path() {\n        return this._query.path.canonicalString();\n    }\n    /**\n     * A reference to the containing `DocumentReference` if this is a\n     * subcollection. If this isn't a subcollection, the reference is null.\n     */    get parent() {\n        const t = this._path.popLast();\n        return t.isEmpty() ? null : new an(this.firestore, \n        /* converter= */ null, new et(t));\n    }\n    withConverter(t) {\n        return new ln(this.firestore, t, this._path);\n    }\n}\n\nfunction fn(t, e, ...n) {\n    if (t = getModularInstance(t), nt(\"collection\", \"path\", e), t instanceof rn) {\n        const r = X.fromString(e, ...n);\n        return st(r), new ln(t, /* converter= */ null, r);\n    }\n    {\n        if (!(t instanceof an || t instanceof ln)) throw new U(A, \"Expected first argument to collection() to be a CollectionReference, a DocumentReference or FirebaseFirestore\");\n        const r = t._path.child(X.fromString(e, ...n));\n        return st(r), new ln(t.firestore, \n        /* converter= */ null, r);\n    }\n}\n\n// TODO(firestorelite): Consider using ErrorFactory -\n// https://github.com/firebase/firebase-js-sdk/blob/0131e1f/packages/util/src/errors.ts#L106\n/**\n * Creates and returns a new `Query` instance that includes all documents in the\n * database that are contained in a collection or subcollection with the\n * given `collectionId`.\n *\n * @param firestore - A reference to the root `Firestore` instance.\n * @param collectionId - Identifies the collections to query over. Every\n * collection or subcollection with this ID as the last segment of its path\n * will be included. Cannot contain a slash.\n * @returns The created `Query`.\n */ function dn(t, e) {\n    if (t = ot(t, rn), nt(\"collectionGroup\", \"collection id\", e), e.indexOf(\"/\") >= 0) throw new U(A, `Invalid collection ID '${e}' passed to function collectionGroup(). Collection IDs must not contain '/'.`);\n    return new hn(t, \n    /* converter= */ null, \n    /**\n * Creates a new Query for a collection group query that matches all documents\n * within the provided collection group.\n */\n    function(t) {\n        return new oe(X.emptyPath(), t);\n    }(e));\n}\n\nfunction wn(t, e, ...n) {\n    if (t = getModularInstance(t), \n    // We allow omission of 'pathString' but explicitly prohibit passing in both\n    // 'undefined' and 'null'.\n    1 === arguments.length && (e = pt.R()), nt(\"doc\", \"path\", e), t instanceof rn) {\n        const r = X.fromString(e, ...n);\n        return rt(r), new an(t, \n        /* converter= */ null, new et(r));\n    }\n    {\n        if (!(t instanceof an || t instanceof ln)) throw new U(A, \"Expected first argument to collection() to be a CollectionReference, a DocumentReference or FirebaseFirestore\");\n        const r = t._path.child(X.fromString(e, ...n));\n        return rt(r), new an(t.firestore, t instanceof ln ? t.converter : null, new et(r));\n    }\n}\n\n/**\n * Returns true if the provided references are equal.\n *\n * @param left - A reference to compare.\n * @param right - A reference to compare.\n * @returns true if the references point to the same location in the same\n * Firestore database.\n */ function mn(t, e) {\n    return t = getModularInstance(t), e = getModularInstance(e), (t instanceof an || t instanceof ln) && (e instanceof an || e instanceof ln) && (t.firestore === e.firestore && t.path === e.path && t.converter === e.converter);\n}\n\n/**\n * Returns true if the provided queries point to the same collection and apply\n * the same constraints.\n *\n * @param left - A `Query` to compare.\n * @param right - A `Query` to compare.\n * @returns true if the references point to the same location in the same\n * Firestore database.\n */ function pn(t, e) {\n    return t = getModularInstance(t), e = getModularInstance(e), t instanceof hn && e instanceof hn && (t.firestore === e.firestore && de(t._query, e._query) && t.converter === e.converter);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A `FieldPath` refers to a field in a document. The path may consist of a\n * single field name (referring to a top-level field in the document), or a\n * list of field names (referring to a nested field in the document).\n *\n * Create a `FieldPath` by providing field names. If more than one field\n * name is provided, the path will point to a nested field in a document.\n */ class yn {\n    /**\n     * Creates a `FieldPath` from the provided field names. If more than one field\n     * name is provided, the path will point to a nested field in a document.\n     *\n     * @param fieldNames - A list of field names.\n     */\n    constructor(...t) {\n        for (let e = 0; e < t.length; ++e) if (0 === t[e].length) throw new U(A, \"Invalid field name at argument $(i + 1). Field names must not be empty.\");\n        this._internalPath = new tt(t);\n    }\n    /**\n     * Returns true if this `FieldPath` is equal to the provided one.\n     *\n     * @param other - The `FieldPath` to compare against.\n     * @returns true if this `FieldPath` is equal to the provided one.\n     */    isEqual(t) {\n        return this._internalPath.isEqual(t._internalPath);\n    }\n}\n\n/**\n * Returns a special sentinel `FieldPath` to refer to the ID of a document.\n * It can be used in queries to sort or filter by the document ID.\n */ function _n() {\n    return new yn(\"__name__\");\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * An immutable object representing an array of bytes.\n */ class gn {\n    /** @hideconstructor */\n    constructor(t) {\n        this._byteString = t;\n    }\n    /**\n     * Creates a new `Bytes` object from the given Base64 string, converting it to\n     * bytes.\n     *\n     * @param base64 - The Base64 string used to create the `Bytes` object.\n     */    static fromBase64String(t) {\n        try {\n            return new gn(It.fromBase64String(t));\n        } catch (t) {\n            throw new U(A, \"Failed to construct data from Base64 string: \" + t);\n        }\n    }\n    /**\n     * Creates a new `Bytes` object from the given Uint8Array.\n     *\n     * @param array - The Uint8Array used to create the `Bytes` object.\n     */    static fromUint8Array(t) {\n        return new gn(It.fromUint8Array(t));\n    }\n    /**\n     * Returns the underlying bytes as a Base64-encoded string.\n     *\n     * @returns The Base64-encoded string created from the `Bytes` object.\n     */    toBase64() {\n        return this._byteString.toBase64();\n    }\n    /**\n     * Returns the underlying bytes in a new `Uint8Array`.\n     *\n     * @returns The Uint8Array created from the `Bytes` object.\n     */    toUint8Array() {\n        return this._byteString.toUint8Array();\n    }\n    /**\n     * Returns a string representation of the `Bytes` object.\n     *\n     * @returns A string representation of the `Bytes` object.\n     */    toString() {\n        return \"Bytes(base64: \" + this.toBase64() + \")\";\n    }\n    /**\n     * Returns true if this `Bytes` object is equal to the provided one.\n     *\n     * @param other - The `Bytes` object to compare against.\n     * @returns true if this `Bytes` object is equal to the provided one.\n     */    isEqual(t) {\n        return this._byteString.isEqual(t._byteString);\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Sentinel values that can be used when writing document fields with `set()`\n * or `update()`.\n */ class vn {\n    /**\n     * @param _methodName - The public API endpoint that returns this class.\n     * @hideconstructor\n     */\n    constructor(t) {\n        this._methodName = t;\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * An immutable object representing a geographic location in Firestore. The\n * location is represented as latitude/longitude pair.\n *\n * Latitude values are in the range of [-90, 90].\n * Longitude values are in the range of [-180, 180].\n */ class bn {\n    /**\n     * Creates a new immutable `GeoPoint` object with the provided latitude and\n     * longitude values.\n     * @param latitude - The latitude as number between -90 and 90.\n     * @param longitude - The longitude as number between -180 and 180.\n     */\n    constructor(t, e) {\n        if (!isFinite(t) || t < -90 || t > 90) throw new U(A, \"Latitude must be a number between -90 and 90, but was: \" + t);\n        if (!isFinite(e) || e < -180 || e > 180) throw new U(A, \"Longitude must be a number between -180 and 180, but was: \" + e);\n        this._lat = t, this._long = e;\n    }\n    /**\n     * The latitude of this `GeoPoint` instance.\n     */    get latitude() {\n        return this._lat;\n    }\n    /**\n     * The longitude of this `GeoPoint` instance.\n     */    get longitude() {\n        return this._long;\n    }\n    /**\n     * Returns true if this `GeoPoint` is equal to the provided one.\n     *\n     * @param other - The `GeoPoint` to compare against.\n     * @returns true if this `GeoPoint` is equal to the provided one.\n     */    isEqual(t) {\n        return this._lat === t._lat && this._long === t._long;\n    }\n    /** Returns a JSON-serializable representation of this GeoPoint. */    toJSON() {\n        return {\n            latitude: this._lat,\n            longitude: this._long\n        };\n    }\n    /**\n     * Actually private to JS consumers of our API, so this function is prefixed\n     * with an underscore.\n     */    _compareTo(t) {\n        return yt(this._lat, t._lat) || yt(this._long, t._long);\n    }\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ const En = /^__.*__$/;\n\n/** The result of parsing document data (e.g. for a setData call). */ class Tn {\n    constructor(t, e, n) {\n        this.data = t, this.fieldMask = e, this.fieldTransforms = n;\n    }\n    toMutation(t, e) {\n        return null !== this.fieldMask ? new Ie(t, this.data, this.fieldMask, e, this.fieldTransforms) : new Te(t, this.data, e, this.fieldTransforms);\n    }\n}\n\n/** The result of parsing \"update\" data (i.e. for an updateData call). */ class In {\n    constructor(t, \n    // The fieldMask does not include document transforms.\n    e, n) {\n        this.data = t, this.fieldMask = e, this.fieldTransforms = n;\n    }\n    toMutation(t, e) {\n        return new Ie(t, this.data, this.fieldMask, e, this.fieldTransforms);\n    }\n}\n\nfunction An(t) {\n    switch (t) {\n      case 0 /* Set */ :\n // fall through\n              case 2 /* MergeSet */ :\n // fall through\n              case 1 /* Update */ :\n        return !0;\n\n      case 3 /* Argument */ :\n      case 4 /* ArrayArgument */ :\n        return !1;\n\n      default:\n        throw g();\n    }\n}\n\n/** A \"context\" object passed around while parsing user data. */ class Rn {\n    /**\n     * Initializes a ParseContext with the given source and path.\n     *\n     * @param settings - The settings for the parser.\n     * @param databaseId - The database ID of the Firestore instance.\n     * @param serializer - The serializer to use to generate the Value proto.\n     * @param ignoreUndefinedProperties - Whether to ignore undefined properties\n     * rather than throw.\n     * @param fieldTransforms - A mutable list of field transforms encountered\n     * while parsing the data.\n     * @param fieldMask - A mutable list of field paths encountered while parsing\n     * the data.\n     *\n     * TODO(b/34871131): We don't support array paths right now, so path can be\n     * null to indicate the context represents any location within an array (in\n     * which case certain features will not work and errors will be somewhat\n     * compromised).\n     */\n    constructor(t, e, n, r, s, i) {\n        this.settings = t, this.databaseId = e, this.q = n, this.ignoreUndefinedProperties = r, \n        // Minor hack: If fieldTransforms is undefined, we assume this is an\n        // external call and we need to validate the entire path.\n        void 0 === s && this.Z(), this.fieldTransforms = s || [], this.fieldMask = i || [];\n    }\n    get path() {\n        return this.settings.path;\n    }\n    get tt() {\n        return this.settings.tt;\n    }\n    /** Returns a new context with the specified settings overwritten. */    et(t) {\n        return new Rn(Object.assign(Object.assign({}, this.settings), t), this.databaseId, this.q, this.ignoreUndefinedProperties, this.fieldTransforms, this.fieldMask);\n    }\n    nt(t) {\n        var e;\n        const n = null === (e = this.path) || void 0 === e ? void 0 : e.child(t), r = this.et({\n            path: n,\n            rt: !1\n        });\n        return r.st(t), r;\n    }\n    it(t) {\n        var e;\n        const n = null === (e = this.path) || void 0 === e ? void 0 : e.child(t), r = this.et({\n            path: n,\n            rt: !1\n        });\n        return r.Z(), r;\n    }\n    ot(t) {\n        // TODO(b/34871131): We don't support array paths right now; so make path\n        // undefined.\n        return this.et({\n            path: void 0,\n            rt: !0\n        });\n    }\n    ut(t) {\n        return Qn(t, this.settings.methodName, this.settings.ct || !1, this.path, this.settings.at);\n    }\n    /** Returns 'true' if 'fieldPath' was traversed when creating this context. */    contains(t) {\n        return void 0 !== this.fieldMask.find((e => t.isPrefixOf(e))) || void 0 !== this.fieldTransforms.find((e => t.isPrefixOf(e.field)));\n    }\n    Z() {\n        // TODO(b/34871131): Remove null check once we have proper paths for fields\n        // within arrays.\n        if (this.path) for (let t = 0; t < this.path.length; t++) this.st(this.path.get(t));\n    }\n    st(t) {\n        if (0 === t.length) throw this.ut(\"Document fields must not be empty\");\n        if (An(this.tt) && En.test(t)) throw this.ut('Document fields cannot begin and end with \"__\"');\n    }\n}\n\n/**\n * Helper for parsing raw user input (provided via the API) into internal model\n * classes.\n */ class Pn {\n    constructor(t, e, n) {\n        this.databaseId = t, this.ignoreUndefinedProperties = e, this.q = n || Ye(t);\n    }\n    /** Creates a new top-level parse context. */    ht(t, e, n, r = !1) {\n        return new Rn({\n            tt: t,\n            methodName: e,\n            at: n,\n            path: tt.emptyPath(),\n            rt: !1,\n            ct: r\n        }, this.databaseId, this.q, this.ignoreUndefinedProperties);\n    }\n}\n\nfunction Vn(t) {\n    const e = t._freezeSettings(), n = Ye(t._databaseId);\n    return new Pn(t._databaseId, !!e.ignoreUndefinedProperties, n);\n}\n\n/** Parse document data from a set() call. */ function Dn(t, e, n, r, s, i = {}) {\n    const o = t.ht(i.merge || i.mergeFields ? 2 /* MergeSet */ : 0 /* Set */ , e, n, s);\n    Mn(\"Data must be an object, but it was:\", o, r);\n    const u = kn(r, o);\n    let c, a;\n    if (i.merge) c = new Tt(o.fieldMask), a = o.fieldTransforms; else if (i.mergeFields) {\n        const t = [];\n        for (const r of i.mergeFields) {\n            const s = Bn(e, r, n);\n            if (!o.contains(s)) throw new U(A, `Field '${s}' is specified in your field mask but missing from your input data.`);\n            Wn(t, s) || t.push(s);\n        }\n        c = new Tt(t), a = o.fieldTransforms.filter((t => c.covers(t.field)));\n    } else c = null, a = o.fieldTransforms;\n    return new Tn(new Bt(u), c, a);\n}\n\nclass Nn extends vn {\n    _toFieldTransform(t) {\n        if (2 /* MergeSet */ !== t.tt) throw 1 /* Update */ === t.tt ? t.ut(`${this._methodName}() can only appear at the top level of your update data`) : t.ut(`${this._methodName}() cannot be used with set() unless you pass {merge:true}`);\n        // No transform to add for a delete, but we need to add it to our\n        // fieldMask so it gets deleted.\n        return t.fieldMask.push(t.path), null;\n    }\n    isEqual(t) {\n        return t instanceof Nn;\n    }\n}\n\n/**\n * Creates a child context for parsing SerializableFieldValues.\n *\n * This is different than calling `ParseContext.contextWith` because it keeps\n * the fieldTransforms and fieldMask separate.\n *\n * The created context has its `dataSource` set to `UserDataSource.Argument`.\n * Although these values are used with writes, any elements in these FieldValues\n * are not considered writes since they cannot contain any FieldValue sentinels,\n * etc.\n *\n * @param fieldValue - The sentinel FieldValue for which to create a child\n *     context.\n * @param context - The parent context.\n * @param arrayElement - Whether or not the FieldValue has an array.\n */ function $n(t, e, n) {\n    return new Rn({\n        tt: 3 /* Argument */ ,\n        at: e.settings.at,\n        methodName: t._methodName,\n        rt: n\n    }, e.databaseId, e.q, e.ignoreUndefinedProperties);\n}\n\nclass Sn extends vn {\n    _toFieldTransform(t) {\n        return new ve(t.path, new pe);\n    }\n    isEqual(t) {\n        return t instanceof Sn;\n    }\n}\n\nclass Fn extends vn {\n    constructor(t, e) {\n        super(t), this.lt = e;\n    }\n    _toFieldTransform(t) {\n        const e = $n(this, t, \n        /*array=*/ !0), n = this.lt.map((t => Un(t, e))), r = new ye(n);\n        return new ve(t.path, r);\n    }\n    isEqual(t) {\n        // TODO(mrschmidt): Implement isEquals\n        return this === t;\n    }\n}\n\nclass xn extends vn {\n    constructor(t, e) {\n        super(t), this.lt = e;\n    }\n    _toFieldTransform(t) {\n        const e = $n(this, t, \n        /*array=*/ !0), n = this.lt.map((t => Un(t, e))), r = new _e(n);\n        return new ve(t.path, r);\n    }\n    isEqual(t) {\n        // TODO(mrschmidt): Implement isEquals\n        return this === t;\n    }\n}\n\nclass qn extends vn {\n    constructor(t, e) {\n        super(t), this.ft = e;\n    }\n    _toFieldTransform(t) {\n        const e = new ge(t.q, we(t.q, this.ft));\n        return new ve(t.path, e);\n    }\n    isEqual(t) {\n        // TODO(mrschmidt): Implement isEquals\n        return this === t;\n    }\n}\n\n/** Parse update data from an update() call. */ function On(t, e, n, r) {\n    const s = t.ht(1 /* Update */ , e, n);\n    Mn(\"Data must be an object, but it was:\", s, r);\n    const i = [], o = Bt.empty();\n    Et(r, ((t, r) => {\n        const u = Gn(e, t, n);\n        // For Compat types, we have to \"extract\" the underlying types before\n        // performing validation.\n                r = getModularInstance(r);\n        const c = s.it(u);\n        if (r instanceof Nn) \n        // Add it to the field mask, but don't add anything to updateData.\n        i.push(u); else {\n            const t = Un(r, c);\n            null != t && (i.push(u), o.set(u, t));\n        }\n    }));\n    const u = new Tt(i);\n    return new In(o, u, s.fieldTransforms);\n}\n\n/** Parse update data from a list of field/value arguments. */ function Cn(t, e, n, r, s, i) {\n    const o = t.ht(1 /* Update */ , e, n), u = [ Bn(e, r, n) ], c = [ s ];\n    if (i.length % 2 != 0) throw new U(A, `Function ${e}() needs to be called with an even number of arguments that alternate between field names and values.`);\n    for (let t = 0; t < i.length; t += 2) u.push(Bn(e, i[t])), c.push(i[t + 1]);\n    const a = [], l = Bt.empty();\n    // We iterate in reverse order to pick the last value for a field if the\n    // user specified the field multiple times.\n    for (let t = u.length - 1; t >= 0; --t) if (!Wn(a, u[t])) {\n        const e = u[t];\n        let n = c[t];\n        // For Compat types, we have to \"extract\" the underlying types before\n        // performing validation.\n                n = getModularInstance(n);\n        const r = o.it(e);\n        if (n instanceof Nn) \n        // Add it to the field mask, but don't add anything to updateData.\n        a.push(e); else {\n            const t = Un(n, r);\n            null != t && (a.push(e), l.set(e, t));\n        }\n    }\n    const f = new Tt(a);\n    return new In(l, f, o.fieldTransforms);\n}\n\n/**\n * Parse a \"query value\" (e.g. value in a where filter or a value in a cursor\n * bound).\n *\n * @param allowArrays - Whether the query value is an array that may directly\n * contain additional arrays (e.g. the operand of an `in` query).\n */ function Ln(t, e, n, r = !1) {\n    return Un(n, t.ht(r ? 4 /* ArrayArgument */ : 3 /* Argument */ , e));\n}\n\n/**\n * Parses user data to Protobuf Values.\n *\n * @param input - Data to be parsed.\n * @param context - A context object representing the current path being parsed,\n * the source of the data being parsed, etc.\n * @returns The parsed value, or null if the value was a FieldValue sentinel\n * that should not be included in the resulting parsed data.\n */ function Un(t, e) {\n    if (jn(\n    // Unwrap the API type from the Compat SDK. This will return the API type\n    // from firestore-exp.\n    t = getModularInstance(t))) return Mn(\"Unsupported field value:\", e, t), kn(t, e);\n    if (t instanceof vn) \n    // FieldValues usually parse into transforms (except deleteField())\n    // in which case we do not want to include this field in our parsed data\n    // (as doing so will overwrite the field directly prior to the transform\n    // trying to transform it). So we don't add this location to\n    // context.fieldMask and we return null as our parsing result.\n    /**\n * \"Parses\" the provided FieldValueImpl, adding any necessary transforms to\n * context.fieldTransforms.\n */\n    return function(t, e) {\n        // Sentinels are only supported with writes, and not within arrays.\n        if (!An(e.tt)) throw e.ut(`${t._methodName}() can only be used with update() and set()`);\n        if (!e.path) throw e.ut(`${t._methodName}() is not currently supported inside arrays`);\n        const n = t._toFieldTransform(e);\n        n && e.fieldTransforms.push(n);\n    }\n    /**\n * Helper to parse a scalar value (i.e. not an Object, Array, or FieldValue)\n *\n * @returns The parsed value\n */ (t, e), null;\n    if (void 0 === t && e.ignoreUndefinedProperties) \n    // If the input is undefined it can never participate in the fieldMask, so\n    // don't handle this below. If `ignoreUndefinedProperties` is false,\n    // `parseScalarValue` will reject an undefined value.\n    return null;\n    if (\n    // If context.path is null we are inside an array and we don't support\n    // field mask paths more granular than the top-level array.\n    e.path && e.fieldMask.push(e.path), t instanceof Array) {\n        // TODO(b/34871131): Include the path containing the array in the error\n        // message.\n        // In the case of IN queries, the parsed data is an array (representing\n        // the set of values to be included for the IN query) that may directly\n        // contain additional arrays (each representing an individual field\n        // value), so we disable this validation.\n        if (e.settings.rt && 4 /* ArrayArgument */ !== e.tt) throw e.ut(\"Nested arrays are not supported\");\n        return function(t, e) {\n            const n = [];\n            let r = 0;\n            for (const s of t) {\n                let t = Un(s, e.ot(r));\n                null == t && (\n                // Just include nulls in the array for fields being replaced with a\n                // sentinel.\n                t = {\n                    nullValue: \"NULL_VALUE\"\n                }), n.push(t), r++;\n            }\n            return {\n                arrayValue: {\n                    values: n\n                }\n            };\n        }(t, e);\n    }\n    return function(t, e) {\n        if (null === (t = getModularInstance(t))) return {\n            nullValue: \"NULL_VALUE\"\n        };\n        if (\"number\" == typeof t) return we(e.q, t);\n        if (\"boolean\" == typeof t) return {\n            booleanValue: t\n        };\n        if (\"string\" == typeof t) return {\n            stringValue: t\n        };\n        if (t instanceof Date) {\n            const n = gt.fromDate(t);\n            return {\n                timestampValue: Ne(e.q, n)\n            };\n        }\n        if (t instanceof gt) {\n            // Firestore backend truncates precision down to microseconds. To ensure\n            // offline mode works the same with regards to truncation, perform the\n            // truncation immediately without waiting for the backend to do that.\n            const n = new gt(t.seconds, 1e3 * Math.floor(t.nanoseconds / 1e3));\n            return {\n                timestampValue: Ne(e.q, n)\n            };\n        }\n        if (t instanceof bn) return {\n            geoPointValue: {\n                latitude: t.latitude,\n                longitude: t.longitude\n            }\n        };\n        if (t instanceof gn) return {\n            bytesValue: $e(e.q, t._byteString)\n        };\n        if (t instanceof an) {\n            const n = e.databaseId, r = t.firestore._databaseId;\n            if (!r.isEqual(n)) throw e.ut(`Document reference is for database ${r.projectId}/${r.database} but should be for database ${n.projectId}/${n.database}`);\n            return {\n                referenceValue: xe(t.firestore._databaseId || e.databaseId, t._key.path)\n            };\n        }\n        throw e.ut(`Unsupported field value: ${it(t)}`);\n    }\n    /**\n * Checks whether an object looks like a JSON object that should be converted\n * into a struct. Normal class/prototype instances are considered to look like\n * JSON objects since they should be converted to a struct value. Arrays, Dates,\n * GeoPoints, etc. are not considered to look like JSON objects since they map\n * to specific FieldValue types other than ObjectValue.\n */ (t, e);\n}\n\nfunction kn(t, e) {\n    const n = {};\n    return !function(t) {\n        for (const e in t) if (Object.prototype.hasOwnProperty.call(t, e)) return !1;\n        return !0;\n    }(t) ? Et(t, ((t, r) => {\n        const s = Un(r, e.nt(t));\n        null != s && (n[t] = s);\n    })) : \n    // If we encounter an empty object, we explicitly add it to the update\n    // mask to ensure that the server creates a map entry.\n    e.path && e.path.length > 0 && e.fieldMask.push(e.path), {\n        mapValue: {\n            fields: n\n        }\n    };\n}\n\nfunction jn(t) {\n    return !(\"object\" != typeof t || null === t || t instanceof Array || t instanceof Date || t instanceof gt || t instanceof bn || t instanceof gn || t instanceof an || t instanceof vn);\n}\n\nfunction Mn(t, e, n) {\n    if (!jn(n) || !function(t) {\n        return \"object\" == typeof t && null !== t && (Object.getPrototypeOf(t) === Object.prototype || null === Object.getPrototypeOf(t));\n    }(n)) {\n        const r = it(n);\n        throw \"an object\" === r ? e.ut(t + \" a custom object\") : e.ut(t + \" \" + r);\n    }\n}\n\n/**\n * Helper that calls fromDotSeparatedString() but wraps any error thrown.\n */ function Bn(t, e, n) {\n    if ((\n    // If required, replace the FieldPath Compat class with with the firestore-exp\n    // FieldPath.\n    e = getModularInstance(e)) instanceof yn) return e._internalPath;\n    if (\"string\" == typeof e) return Gn(t, e);\n    throw Qn(\"Field path arguments must be of type string or \", t, \n    /* hasConverter= */ !1, \n    /* path= */ void 0, n);\n}\n\n/**\n * Matches any characters in a field path string that are reserved.\n */ const zn = new RegExp(\"[~\\\\*/\\\\[\\\\]]\");\n\n/**\n * Wraps fromDotSeparatedString with an error message about the method that\n * was thrown.\n * @param methodName - The publicly visible method name\n * @param path - The dot-separated string form of a field path which will be\n * split on dots.\n * @param targetDoc - The document against which the field path will be\n * evaluated.\n */ function Gn(t, e, n) {\n    if (e.search(zn) >= 0) throw Qn(`Invalid field path (${e}). Paths must not contain '~', '*', '/', '[', or ']'`, t, \n    /* hasConverter= */ !1, \n    /* path= */ void 0, n);\n    try {\n        return new yn(...e.split(\".\"))._internalPath;\n    } catch (r) {\n        throw Qn(`Invalid field path (${e}). Paths must not be empty, begin with '.', end with '.', or contain '..'`, t, \n        /* hasConverter= */ !1, \n        /* path= */ void 0, n);\n    }\n}\n\nfunction Qn(t, e, n, r, s) {\n    const i = r && !r.isEmpty(), o = void 0 !== s;\n    let u = `Function ${e}() called with invalid data`;\n    n && (u += \" (via `toFirestore()`)\"), u += \". \";\n    let c = \"\";\n    return (i || o) && (c += \" (found\", i && (c += ` in field ${r}`), o && (c += ` in document ${s}`), \n    c += \")\"), new U(A, u + t + c);\n}\n\n/** Checks `haystack` if FieldPath `needle` is present. Runs in O(n). */ function Wn(t, e) {\n    return t.some((t => t.isEqual(e)));\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A `DocumentSnapshot` contains data read from a document in your Firestore\n * database. The data can be extracted with `.data()` or `.get(<field>)` to\n * get a specific field.\n *\n * For a `DocumentSnapshot` that points to a non-existing document, any data\n * access will return 'undefined'. You can use the `exists()` method to\n * explicitly verify a document's existence.\n */ class Yn {\n    // Note: This class is stripped down version of the DocumentSnapshot in\n    // the legacy SDK. The changes are:\n    // - No support for SnapshotMetadata.\n    // - No support for SnapshotOptions.\n    /** @hideconstructor protected */\n    constructor(t, e, n, r, s) {\n        this._firestore = t, this._userDataWriter = e, this._key = n, this._document = r, \n        this._converter = s;\n    }\n    /** Property of the `DocumentSnapshot` that provides the document's ID. */    get id() {\n        return this._key.path.lastSegment();\n    }\n    /**\n     * The `DocumentReference` for the document included in the `DocumentSnapshot`.\n     */    get ref() {\n        return new an(this._firestore, this._converter, this._key);\n    }\n    /**\n     * Signals whether or not the document at the snapshot's location exists.\n     *\n     * @returns true if the document exists.\n     */    exists() {\n        return null !== this._document;\n    }\n    /**\n     * Retrieves all fields in the document as an `Object`. Returns `undefined` if\n     * the document doesn't exist.\n     *\n     * @returns An `Object` containing all fields in the document or `undefined`\n     * if the document doesn't exist.\n     */    data() {\n        if (this._document) {\n            if (this._converter) {\n                // We only want to use the converter and create a new DocumentSnapshot\n                // if a converter has been provided.\n                const t = new Hn(this._firestore, this._userDataWriter, this._key, this._document, \n                /* converter= */ null);\n                return this._converter.fromFirestore(t);\n            }\n            return this._userDataWriter.convertValue(this._document.data.value);\n        }\n    }\n    /**\n     * Retrieves the field specified by `fieldPath`. Returns `undefined` if the\n     * document or field doesn't exist.\n     *\n     * @param fieldPath - The path (for example 'foo' or 'foo.bar') to a specific\n     * field.\n     * @returns The data at the specified field location or undefined if no such\n     * field exists in the document.\n     */\n    // We are using `any` here to avoid an explicit cast by our users.\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    get(t) {\n        if (this._document) {\n            const e = this._document.data.field(Xn(\"DocumentSnapshot.get\", t));\n            if (null !== e) return this._userDataWriter.convertValue(e);\n        }\n    }\n}\n\n/**\n * A `QueryDocumentSnapshot` contains data read from a document in your\n * Firestore database as part of a query. The document is guaranteed to exist\n * and its data can be extracted with `.data()` or `.get(<field>)` to get a\n * specific field.\n *\n * A `QueryDocumentSnapshot` offers the same API surface as a\n * `DocumentSnapshot`. Since query results contain only existing documents, the\n * `exists` property will always be true and `data()` will never return\n * 'undefined'.\n */ class Hn extends Yn {\n    /**\n     * Retrieves all fields in the document as an `Object`.\n     *\n     * @override\n     * @returns An `Object` containing all fields in the document.\n     */\n    data() {\n        return super.data();\n    }\n}\n\n/**\n * A `QuerySnapshot` contains zero or more `DocumentSnapshot` objects\n * representing the results of a query. The documents can be accessed as an\n * array via the `docs` property or enumerated using the `forEach` method. The\n * number of documents can be determined via the `empty` and `size`\n * properties.\n */ class Kn {\n    /** @hideconstructor */\n    constructor(t, e) {\n        this._docs = e, this.query = t;\n    }\n    /** An array of all the documents in the `QuerySnapshot`. */    get docs() {\n        return [ ...this._docs ];\n    }\n    /** The number of documents in the `QuerySnapshot`. */    get size() {\n        return this.docs.length;\n    }\n    /** True if there are no documents in the `QuerySnapshot`. */    get empty() {\n        return 0 === this.docs.length;\n    }\n    /**\n     * Enumerates all of the documents in the `QuerySnapshot`.\n     *\n     * @param callback - A callback to be called with a `QueryDocumentSnapshot` for\n     * each document in the snapshot.\n     * @param thisArg - The `this` binding for the callback.\n     */    forEach(t, e) {\n        this._docs.forEach(t, e);\n    }\n}\n\n/**\n * Returns true if the provided snapshots are equal.\n *\n * @param left - A snapshot to compare.\n * @param right - A snapshot to compare.\n * @returns true if the snapshots are equal.\n */ function Jn(t, e) {\n    return t = getModularInstance(t), e = getModularInstance(e), t instanceof Yn && e instanceof Yn ? t._firestore === e._firestore && t._key.isEqual(e._key) && (null === t._document ? null === e._document : t._document.isEqual(e._document)) && t._converter === e._converter : t instanceof Kn && e instanceof Kn && (pn(t.query, e.query) && _t(t.docs, e.docs, Jn));\n}\n\n/**\n * Helper that calls `fromDotSeparatedString()` but wraps any error thrown.\n */ function Xn(t, e) {\n    return \"string\" == typeof e ? Gn(t, e) : e instanceof yn ? e._internalPath : e._delegate._internalPath;\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A `QueryConstraint` is used to narrow the set of documents returned by a\n * Firestore query. `QueryConstraint`s are created by invoking {@link where},\n * {@link orderBy}, {@link (startAt:1)}, {@link (startAfter:1)}, {@link\n * endBefore:1}, {@link (endAt:1)}, {@link limit} or {@link limitToLast} and\n * can then be passed to {@link query} to create a new query instance that\n * also contains this `QueryConstraint`.\n */\nclass Zn {}\n\n/**\n * Creates a new immutable instance of {@link Query} that is extended to also include\n * additional query constraints.\n *\n * @param query - The {@link Query} instance to use as a base for the new constraints.\n * @param queryConstraints - The list of {@link QueryConstraint}s to apply.\n * @throws if any of the provided query constraints cannot be combined with the\n * existing or new constraints.\n */ function tr(t, ...e) {\n    for (const n of e) t = n._apply(t);\n    return t;\n}\n\nclass er extends Zn {\n    constructor(t, e, n) {\n        super(), this.dt = t, this.wt = e, this.yt = n, this.type = \"where\";\n    }\n    _apply(t) {\n        const e = Vn(t.firestore), n = function(t, e, n, r, s, i, o) {\n            let u;\n            if (s.isKeyField()) {\n                if (\"array-contains\" /* ARRAY_CONTAINS */ === i || \"array-contains-any\" /* ARRAY_CONTAINS_ANY */ === i) throw new U(A, `Invalid Query. You can't perform '${i}' queries on documentId().`);\n                if (\"in\" /* IN */ === i || \"not-in\" /* NOT_IN */ === i) {\n                    pr(o, i);\n                    const e = [];\n                    for (const n of o) e.push(mr(r, t, n));\n                    u = {\n                        arrayValue: {\n                            values: e\n                        }\n                    };\n                } else u = mr(r, t, o);\n            } else \"in\" /* IN */ !== i && \"not-in\" /* NOT_IN */ !== i && \"array-contains-any\" /* ARRAY_CONTAINS_ANY */ !== i || pr(o, i), \n            u = Ln(n, e, o, \n            /* allowArrays= */ \"in\" /* IN */ === i || \"not-in\" /* NOT_IN */ === i);\n            const c = Wt.create(s, i, u);\n            return function(t, e) {\n                if (e.N()) {\n                    const n = ae(t);\n                    if (null !== n && !n.isEqual(e.field)) throw new U(A, `Invalid query. All where filters with an inequality (<, <=, !=, not-in, >, or >=) must be on the same field. But you have inequality filters on '${n.toString()}' and '${e.field.toString()}'`);\n                    const r = ce(t);\n                    null !== r && yr(t, e.field, r);\n                }\n                const n = function(t, e) {\n                    for (const n of t.filters) if (e.indexOf(n.op) >= 0) return n.op;\n                    return null;\n                }(t, \n                /**\n * Given an operator, returns the set of operators that cannot be used with it.\n *\n * Operators in a query must adhere to the following set of rules:\n * 1. Only one array operator is allowed.\n * 2. Only one disjunctive operator is allowed.\n * 3. `NOT_EQUAL` cannot be used with another `NOT_EQUAL` operator.\n * 4. `NOT_IN` cannot be used with array, disjunctive, or `NOT_EQUAL` operators.\n *\n * Array operators: `ARRAY_CONTAINS`, `ARRAY_CONTAINS_ANY`\n * Disjunctive operators: `IN`, `ARRAY_CONTAINS_ANY`, `NOT_IN`\n */\n                function(t) {\n                    switch (t) {\n                      case \"!=\" /* NOT_EQUAL */ :\n                        return [ \"!=\" /* NOT_EQUAL */ , \"not-in\" /* NOT_IN */ ];\n\n                      case \"array-contains\" /* ARRAY_CONTAINS */ :\n                        return [ \"array-contains\" /* ARRAY_CONTAINS */ , \"array-contains-any\" /* ARRAY_CONTAINS_ANY */ , \"not-in\" /* NOT_IN */ ];\n\n                      case \"in\" /* IN */ :\n                        return [ \"array-contains-any\" /* ARRAY_CONTAINS_ANY */ , \"in\" /* IN */ , \"not-in\" /* NOT_IN */ ];\n\n                      case \"array-contains-any\" /* ARRAY_CONTAINS_ANY */ :\n                        return [ \"array-contains\" /* ARRAY_CONTAINS */ , \"array-contains-any\" /* ARRAY_CONTAINS_ANY */ , \"in\" /* IN */ , \"not-in\" /* NOT_IN */ ];\n\n                      case \"not-in\" /* NOT_IN */ :\n                        return [ \"array-contains\" /* ARRAY_CONTAINS */ , \"array-contains-any\" /* ARRAY_CONTAINS_ANY */ , \"in\" /* IN */ , \"not-in\" /* NOT_IN */ , \"!=\" /* NOT_EQUAL */ ];\n\n                      default:\n                        return [];\n                    }\n                }(e.op));\n                if (null !== n) \n                // Special case when it's a duplicate op to give a slightly clearer error message.\n                throw n === e.op ? new U(A, `Invalid query. You cannot use more than one '${e.op.toString()}' filter.`) : new U(A, `Invalid query. You cannot use '${e.op.toString()}' filters with '${n.toString()}' filters.`);\n            }(t, c), c;\n        }(t._query, \"where\", e, t.firestore._databaseId, this.dt, this.wt, this.yt);\n        return new hn(t.firestore, t.converter, function(t, e) {\n            const n = t.filters.concat([ e ]);\n            return new oe(t.path, t.collectionGroup, t.explicitOrderBy.slice(), n, t.limit, t.limitType, t.startAt, t.endAt);\n        }(t._query, n));\n    }\n}\n\n/**\n * Creates a {@link QueryConstraint} that enforces that documents must contain the\n * specified field and that the value should satisfy the relation constraint\n * provided.\n *\n * @param fieldPath - The path to compare\n * @param opStr - The operation string (e.g \"&lt;\", \"&lt;=\", \"==\", \"&lt;\",\n *   \"&lt;=\", \"!=\").\n * @param value - The value for comparison\n * @returns The created {@link Query}.\n */ function nr(t, e, n) {\n    const r = e, s = Xn(\"where\", t);\n    return new er(s, r, n);\n}\n\nclass rr extends Zn {\n    constructor(t, e) {\n        super(), this.dt = t, this._t = e, this.type = \"orderBy\";\n    }\n    _apply(t) {\n        const e = function(t, e, n) {\n            if (null !== t.startAt) throw new U(A, \"Invalid query. You must not call startAt() or startAfter() before calling orderBy().\");\n            if (null !== t.endAt) throw new U(A, \"Invalid query. You must not call endAt() or endBefore() before calling orderBy().\");\n            const r = new re(e, n);\n            return function(t, e) {\n                if (null === ce(t)) {\n                    // This is the first order by. It must match any inequality.\n                    const n = ae(t);\n                    null !== n && yr(t, n, e.field);\n                }\n            }(t, r), r;\n        }\n        /**\n * Create a `Bound` from a query and a document.\n *\n * Note that the `Bound` will always include the key of the document\n * and so only the provided document will compare equal to the returned\n * position.\n *\n * Will throw if the document does not contain all fields of the order by\n * of the query or if any of the fields in the order by are an uncommitted\n * server timestamp.\n */ (t._query, this.dt, this._t);\n        return new hn(t.firestore, t.converter, function(t, e) {\n            // TODO(dimond): validate that orderBy does not list the same key twice.\n            const n = t.explicitOrderBy.concat([ e ]);\n            return new oe(t.path, t.collectionGroup, n, t.filters.slice(), t.limit, t.limitType, t.startAt, t.endAt);\n        }(t._query, e));\n    }\n}\n\n/**\n * Creates a {@link QueryConstraint} that sorts the query result by the\n * specified field, optionally in descending order instead of ascending.\n *\n * @param fieldPath - The field to sort by.\n * @param directionStr - Optional direction to sort by ('asc' or 'desc'). If\n * not specified, order will be ascending.\n * @returns The created {@link Query}.\n */ function sr(t, e = \"asc\") {\n    const n = e, r = Xn(\"orderBy\", t);\n    return new rr(r, n);\n}\n\nclass ir extends Zn {\n    constructor(t, e, n) {\n        super(), this.type = t, this.gt = e, this.vt = n;\n    }\n    _apply(t) {\n        return new hn(t.firestore, t.converter, function(t, e, n) {\n            return new oe(t.path, t.collectionGroup, t.explicitOrderBy.slice(), t.filters.slice(), e, n, t.startAt, t.endAt);\n        }(t._query, this.gt, this.vt));\n    }\n}\n\n/**\n * Creates a {@link QueryConstraint} that only returns the first matching documents.\n *\n * @param limit - The maximum number of items to return.\n * @returns The created {@link Query}.\n */ function or(t) {\n    return ut(\"limit\", t), new ir(\"limit\", t, \"F\" /* First */);\n}\n\n/**\n * Creates a {@link QueryConstraint} that only returns the last matching documents.\n *\n * You must specify at least one `orderBy` clause for `limitToLast` queries,\n * otherwise an exception will be thrown during execution.\n *\n * @param limit - The maximum number of items to return.\n * @returns The created {@link Query}.\n */ function ur(t) {\n    return ut(\"limitToLast\", t), new ir(\"limitToLast\", t, \"L\" /* Last */);\n}\n\nclass cr extends Zn {\n    constructor(t, e, n) {\n        super(), this.type = t, this.bt = e, this.Et = n;\n    }\n    _apply(t) {\n        const e = wr(t, this.type, this.bt, this.Et);\n        return new hn(t.firestore, t.converter, function(t, e) {\n            return new oe(t.path, t.collectionGroup, t.explicitOrderBy.slice(), t.filters.slice(), t.limit, t.limitType, e, t.endAt);\n        }(t._query, e));\n    }\n}\n\nfunction ar(...t) {\n    return new cr(\"startAt\", t, \n    /*inclusive=*/ !0);\n}\n\nfunction hr(...t) {\n    return new cr(\"startAfter\", t, \n    /*inclusive=*/ !1);\n}\n\nclass lr extends Zn {\n    constructor(t, e, n) {\n        super(), this.type = t, this.bt = e, this.Et = n;\n    }\n    _apply(t) {\n        const e = wr(t, this.type, this.bt, this.Et);\n        return new hn(t.firestore, t.converter, function(t, e) {\n            return new oe(t.path, t.collectionGroup, t.explicitOrderBy.slice(), t.filters.slice(), t.limit, t.limitType, t.startAt, e);\n        }(t._query, e));\n    }\n}\n\nfunction fr(...t) {\n    return new lr(\"endBefore\", t, \n    /*inclusive=*/ !1);\n}\n\nfunction dr(...t) {\n    return new lr(\"endAt\", t, /*inclusive=*/ !0);\n}\n\n/** Helper function to create a bound from a document or fields */ function wr(t, e, n, r) {\n    if (n[0] = getModularInstance(n[0]), n[0] instanceof Yn) return function(t, e, n, r, s) {\n        if (!r) throw new U(P, `Can't use a DocumentSnapshot that doesn't exist for ${n}().`);\n        const i = [];\n        // Because people expect to continue/end a query at the exact document\n        // provided, we need to use the implicit sort order rather than the explicit\n        // sort order, because it's guaranteed to contain the document key. That way\n        // the position becomes unambiguous and the query continues/ends exactly at\n        // the provided document. Without the key (by using the explicit sort\n        // orders), multiple documents could match the position, yielding duplicate\n        // results.\n                for (const n of le(t)) if (n.field.isKeyField()) i.push(Ct(e, r.key)); else {\n            const t = r.data.field(n.field);\n            if (Dt(t)) throw new U(A, 'Invalid query. You are trying to start or end a query using a document for which the field \"' + n.field + '\" is an uncommitted server timestamp. (Since the value of this field is unknown, you cannot start/end a query with it.)');\n            if (null === t) {\n                const t = n.field.canonicalString();\n                throw new U(A, `Invalid query. You are trying to start or end a query using a document for which the field '${t}' (used as the orderBy) does not exist.`);\n            }\n            i.push(t);\n        }\n        return new ne(i, s);\n    }\n    /**\n * Converts a list of field values to a `Bound` for the given query.\n */ (t._query, t.firestore._databaseId, e, n[0]._document, r);\n    {\n        const s = Vn(t.firestore);\n        return function(t, e, n, r, s, i) {\n            // Use explicit order by's because it has to match the query the user made\n            const o = t.explicitOrderBy;\n            if (s.length > o.length) throw new U(A, `Too many arguments provided to ${r}(). The number of arguments must be less than or equal to the number of orderBy() clauses`);\n            const u = [];\n            for (let i = 0; i < s.length; i++) {\n                const c = s[i];\n                if (o[i].field.isKeyField()) {\n                    if (\"string\" != typeof c) throw new U(A, `Invalid query. Expected a string for document ID in ${r}(), but got a ${typeof c}`);\n                    if (!he(t) && -1 !== c.indexOf(\"/\")) throw new U(A, `Invalid query. When querying a collection and ordering by documentId(), the value passed to ${r}() must be a plain document ID, but '${c}' contains a slash.`);\n                    const n = t.path.child(X.fromString(c));\n                    if (!et.isDocumentKey(n)) throw new U(A, `Invalid query. When querying a collection group and ordering by documentId(), the value passed to ${r}() must result in a valid document path, but '${n}' is not because it contains an odd number of segments.`);\n                    const s = new et(n);\n                    u.push(Ct(e, s));\n                } else {\n                    const t = Ln(n, r, c);\n                    u.push(t);\n                }\n            }\n            return new ne(u, i);\n        }\n        /**\n * Parses the given `documentIdValue` into a `ReferenceValue`, throwing\n * appropriate errors if the value is anything other than a `DocumentReference`\n * or `string`, or if the string is malformed.\n */ (t._query, t.firestore._databaseId, s, e, n, r);\n    }\n}\n\nfunction mr(t, e, n) {\n    if (\"string\" == typeof (n = getModularInstance(n))) {\n        if (\"\" === n) throw new U(A, \"Invalid query. When querying with documentId(), you must provide a valid document ID, but it was an empty string.\");\n        if (!he(e) && -1 !== n.indexOf(\"/\")) throw new U(A, `Invalid query. When querying a collection by documentId(), you must provide a plain document ID, but '${n}' contains a '/' character.`);\n        const r = e.path.child(X.fromString(n));\n        if (!et.isDocumentKey(r)) throw new U(A, `Invalid query. When querying a collection group by documentId(), the value provided must result in a valid document path, but '${r}' is not because it has an odd number of segments (${r.length}).`);\n        return Ct(t, new et(r));\n    }\n    if (n instanceof an) return Ct(t, n._key);\n    throw new U(A, `Invalid query. When querying with documentId(), you must provide a valid string or a DocumentReference, but it was: ${it(n)}.`);\n}\n\n/**\n * Validates that the value passed into a disjunctive filter satisfies all\n * array requirements.\n */ function pr(t, e) {\n    if (!Array.isArray(t) || 0 === t.length) throw new U(A, `Invalid Query. A non-empty array is required for '${e.toString()}' filters.`);\n    if (t.length > 10) throw new U(A, `Invalid Query. '${e.toString()}' filters support a maximum of 10 elements in the value array.`);\n}\n\nfunction yr(t, e, n) {\n    if (!n.isEqual(e)) throw new U(A, `Invalid query. You have a where filter with an inequality (<, <=, !=, not-in, >, or >=) on field '${e.toString()}' and so you must also use '${e.toString()}' as your first argument to orderBy(), but your first orderBy() is on field '${n.toString()}' instead.`);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Converts Firestore's internal types to the JavaScript types that we expose\n * to the user.\n *\n * @internal\n */\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Converts custom model object of type T into `DocumentData` by applying the\n * converter if it exists.\n *\n * This function is used when converting user objects to `DocumentData`\n * because we want to provide the user with a more specific error message if\n * their `set()` or fails due to invalid data originating from a `toFirestore()`\n * call.\n */\nfunction _r(t, e, n) {\n    let r;\n    // Cast to `any` in order to satisfy the union type constraint on\n    // toFirestore().\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return r = t ? n && (n.merge || n.mergeFields) ? t.toFirestore(e, n) : t.toFirestore(e) : e, \n    r;\n}\n\nclass gr extends class {\n    convertValue(t, e = \"none\") {\n        switch (St(t)) {\n          case 0 /* NullValue */ :\n            return null;\n\n          case 1 /* BooleanValue */ :\n            return t.booleanValue;\n\n          case 2 /* NumberValue */ :\n            return Pt(t.integerValue || t.doubleValue);\n\n          case 3 /* TimestampValue */ :\n            return this.convertTimestamp(t.timestampValue);\n\n          case 4 /* ServerTimestampValue */ :\n            return this.convertServerTimestamp(t, e);\n\n          case 5 /* StringValue */ :\n            return t.stringValue;\n\n          case 6 /* BlobValue */ :\n            return this.convertBytes(Vt(t.bytesValue));\n\n          case 7 /* RefValue */ :\n            return this.convertReference(t.referenceValue);\n\n          case 8 /* GeoPointValue */ :\n            return this.convertGeoPoint(t.geoPointValue);\n\n          case 9 /* ArrayValue */ :\n            return this.convertArray(t.arrayValue, e);\n\n          case 10 /* ObjectValue */ :\n            return this.convertObject(t.mapValue, e);\n\n          default:\n            throw g();\n        }\n    }\n    convertObject(t, e) {\n        const n = {};\n        return Et(t.fields, ((t, r) => {\n            n[t] = this.convertValue(r, e);\n        })), n;\n    }\n    convertGeoPoint(t) {\n        return new bn(Pt(t.latitude), Pt(t.longitude));\n    }\n    convertArray(t, e) {\n        return (t.values || []).map((t => this.convertValue(t, e)));\n    }\n    convertServerTimestamp(t, e) {\n        switch (e) {\n          case \"previous\":\n            const n = Nt(t);\n            return null == n ? null : this.convertValue(n, e);\n\n          case \"estimate\":\n            return this.convertTimestamp($t(t));\n\n          default:\n            return null;\n        }\n    }\n    convertTimestamp(t) {\n        const e = Rt(t);\n        return new gt(e.seconds, e.nanos);\n    }\n    convertDocumentKey(t, e) {\n        const n = X.fromString(t);\n        v(We(n));\n        const r = new K(n.get(1), n.get(3)), s = new et(n.popFirst(5));\n        return r.isEqual(e) || \n        // TODO(b/64130202): Somehow support foreign references.\n        p(`Document ${s} contains a document reference within a different database (${r.projectId}/${r.database}) which is not supported. It will be treated as a reference in the current database (${e.projectId}/${e.database}) instead.`), \n        s;\n    }\n} {\n    constructor(t) {\n        super(), this.firestore = t;\n    }\n    convertBytes(t) {\n        return new gn(t);\n    }\n    convertReference(t) {\n        const e = this.convertDocumentKey(t, this.firestore._databaseId);\n        return new an(this.firestore, /* converter= */ null, e);\n    }\n}\n\n/**\n * Reads the document referred to by the specified document reference.\n *\n * All documents are directly fetched from the server, even if the document was\n * previously read or modified. Recent modifications are only reflected in the\n * retrieved `DocumentSnapshot` if they have already been applied by the\n * backend. If the client is offline, the read fails. If you like to use\n * caching or see local modifications, please use the full Firestore SDK.\n *\n * @param reference - The reference of the document to fetch.\n * @returns A Promise resolved with a `DocumentSnapshot` containing the current\n * document contents.\n */ function vr(t) {\n    const e = en((t = ot(t, an)).firestore), n = new gr(t.firestore);\n    return Xe(e, [ t._key ]).then((e => {\n        v(1 === e.length);\n        const r = e[0];\n        return new Yn(t.firestore, n, t._key, r.isFoundDocument() ? r : null, t.converter);\n    }));\n}\n\n/**\n * Executes the query and returns the results as a {@link QuerySnapshot}.\n *\n * All queries are executed directly by the server, even if the the query was\n * previously executed. Recent modifications are only reflected in the retrieved\n * results if they have already been applied by the backend. If the client is\n * offline, the operation fails. To see previously cached result and local\n * modifications, use the full Firestore SDK.\n *\n * @param query - The `Query` to execute.\n * @returns A Promise that will be resolved with the results of the query.\n */ function br(t) {\n    !function(t) {\n        if (ue(t) && 0 === t.explicitOrderBy.length) throw new U(q, \"limitToLast() queries require specifying at least one orderBy() clause\");\n    }((t = ot(t, hn))._query);\n    const e = en(t.firestore), n = new gr(t.firestore);\n    return Ze(e, t._query).then((e => {\n        const r = e.map((e => new Hn(t.firestore, n, e.key, e, t.converter)));\n        return ue(t._query) && \n        // Limit to last queries reverse the orderBy constraint that was\n        // specified by the user. As such, we need to reverse the order of the\n        // results to return the documents in the expected order.\n        r.reverse(), new Kn(t, r);\n    }));\n}\n\nfunction Er(t, e, n) {\n    const r = _r((t = ot(t, an)).converter, e, n), s = Dn(Vn(t.firestore), \"setDoc\", t._key, r, null !== t.converter, n);\n    return Je(en(t.firestore), [ s.toMutation(t._key, be.none()) ]);\n}\n\nfunction Tr(t, e, n, ...r) {\n    const s = Vn((t = ot(t, an)).firestore);\n    // For Compat types, we have to \"extract\" the underlying types before\n    // performing validation.\n        let i;\n    i = \"string\" == typeof (e = getModularInstance(e)) || e instanceof yn ? Cn(s, \"updateDoc\", t._key, e, n, r) : On(s, \"updateDoc\", t._key, e);\n    return Je(en(t.firestore), [ i.toMutation(t._key, be.exists(!0)) ]);\n}\n\n/**\n * Deletes the document referred to by the specified `DocumentReference`.\n *\n * The deletion will only be reflected in document reads that occur after the\n * returned promise resolves. If the client is offline, the\n * delete fails. If you would like to see local modifications or buffer writes\n * until the client is online, use the full Firestore SDK.\n *\n * @param reference - A reference to the document to delete.\n * @returns A `Promise` resolved once the document has been successfully\n * deleted from the backend.\n */ function Ir(t) {\n    return Je(en((t = ot(t, an)).firestore), [ new Ae(t._key, be.none()) ]);\n}\n\n/**\n * Add a new document to specified `CollectionReference` with the given data,\n * assigning it a document ID automatically.\n *\n * The result of this write will only be reflected in document reads that occur\n * after the returned promise resolves. If the client is offline, the\n * write fails. If you would like to see local modifications or buffer writes\n * until the client is online, use the full Firestore SDK.\n *\n * @param reference - A reference to the collection to add this document to.\n * @param data - An Object containing the data for the new document.\n * @throws Error - If the provided input is not a valid Firestore document.\n * @returns A `Promise` resolved with a `DocumentReference` pointing to the\n * newly created document after it has been written to the backend.\n */ function Ar(t, e) {\n    const n = wn(t = ot(t, ln)), r = _r(t.converter, e), s = Dn(Vn(t.firestore), \"addDoc\", n._key, r, null !== n.converter, {});\n    return Je(en(t.firestore), [ s.toMutation(n._key, be.exists(!1)) ]).then((() => n));\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Returns a sentinel for use with {@link @firebase/firestore/lite#(updateDoc:1)} or\n * {@link @firebase/firestore/lite#(setDoc:1)} with `{merge: true}` to mark a field for deletion.\n */ function Rr() {\n    return new Nn(\"deleteField\");\n}\n\n/**\n * Returns a sentinel used with {@link @firebase/firestore/lite#(setDoc:1)} or {@link @firebase/firestore/lite#(updateDoc:1)} to\n * include a server-generated timestamp in the written data.\n */ function Pr() {\n    return new Sn(\"serverTimestamp\");\n}\n\n/**\n * Returns a special value that can be used with {@link @firebase/firestore/lite#(setDoc:1)} or {@link\n * @firebase/firestore/lite#(updateDoc:1)} that tells the server to union the given elements with any array\n * value that already exists on the server. Each specified element that doesn't\n * already exist in the array will be added to the end. If the field being\n * modified is not already an array it will be overwritten with an array\n * containing exactly the specified elements.\n *\n * @param elements - The elements to union into the array.\n * @returns The `FieldValue` sentinel for use in a call to `setDoc()` or\n * `updateDoc()`.\n */ function Vr(...t) {\n    // NOTE: We don't actually parse the data until it's used in set() or\n    // update() since we'd need the Firestore instance to do this.\n    return new Fn(\"arrayUnion\", t);\n}\n\n/**\n * Returns a special value that can be used with {@link (setDoc:1)} or {@link\n * updateDoc:1} that tells the server to remove the given elements from any\n * array value that already exists on the server. All instances of each element\n * specified will be removed from the array. If the field being modified is not\n * already an array it will be overwritten with an empty array.\n *\n * @param elements - The elements to remove from the array.\n * @returns The `FieldValue` sentinel for use in a call to `setDoc()` or\n * `updateDoc()`\n */ function Dr(...t) {\n    // NOTE: We don't actually parse the data until it's used in set() or\n    // update() since we'd need the Firestore instance to do this.\n    return new xn(\"arrayRemove\", t);\n}\n\n/**\n * Returns a special value that can be used with {@link @firebase/firestore/lite#(setDoc:1)} or {@link\n * @firebase/firestore/lite#(updateDoc:1)} that tells the server to increment the field's current value by\n * the given value.\n *\n * If either the operand or the current field value uses floating point\n * precision, all arithmetic follows IEEE 754 semantics. If both values are\n * integers, values outside of JavaScript's safe number range\n * (`Number.MIN_SAFE_INTEGER` to `Number.MAX_SAFE_INTEGER`) are also subject to\n * precision loss. Furthermore, once processed by the Firestore backend, all\n * integer operations are capped between -2^63 and 2^63-1.\n *\n * If the current field value is not of type `number`, or if the field does not\n * yet exist, the transformation sets the field to the given value.\n *\n * @param n - The value to increment by.\n * @returns The `FieldValue` sentinel for use in a call to `setDoc()` or\n * `updateDoc()`\n */ function Nr(t) {\n    return new qn(\"increment\", t);\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A write batch, used to perform multiple writes as a single atomic unit.\n *\n * A `WriteBatch` object can be acquired by calling {@link writeBatch}. It\n * provides methods for adding writes to the write batch. None of the writes\n * will be committed (or visible locally) until {@link WriteBatch.commit} is\n * called.\n */ class $r {\n    /** @hideconstructor */\n    constructor(t, e) {\n        this._firestore = t, this._commitHandler = e, this._mutations = [], this._committed = !1, \n        this._dataReader = Vn(t);\n    }\n    set(t, e, n) {\n        this._verifyNotCommitted();\n        const r = Sr(t, this._firestore), s = _r(r.converter, e, n), i = Dn(this._dataReader, \"WriteBatch.set\", r._key, s, null !== r.converter, n);\n        return this._mutations.push(i.toMutation(r._key, be.none())), this;\n    }\n    update(t, e, n, ...r) {\n        this._verifyNotCommitted();\n        const s = Sr(t, this._firestore);\n        // For Compat types, we have to \"extract\" the underlying types before\n        // performing validation.\n                let i;\n        return i = \"string\" == typeof (e = getModularInstance(e)) || e instanceof yn ? Cn(this._dataReader, \"WriteBatch.update\", s._key, e, n, r) : On(this._dataReader, \"WriteBatch.update\", s._key, e), \n        this._mutations.push(i.toMutation(s._key, be.exists(!0))), this;\n    }\n    /**\n     * Deletes the document referred to by the provided {@link DocumentReference}.\n     *\n     * @param documentRef - A reference to the document to be deleted.\n     * @returns This `WriteBatch` instance. Used for chaining method calls.\n     */    delete(t) {\n        this._verifyNotCommitted();\n        const e = Sr(t, this._firestore);\n        return this._mutations = this._mutations.concat(new Ae(e._key, be.none())), this;\n    }\n    /**\n     * Commits all of the writes in this write batch as a single atomic unit.\n     *\n     * The result of these writes will only be reflected in document reads that\n     * occur after the returned promise resolves. If the client is offline, the\n     * write fails. If you would like to see local modifications or buffer writes\n     * until the client is online, use the full Firestore SDK.\n     *\n     * @returns A `Promise` resolved once all of the writes in the batch have been\n     * successfully written to the backend as an atomic unit (note that it won't\n     * resolve while you're offline).\n     */    commit() {\n        return this._verifyNotCommitted(), this._committed = !0, this._mutations.length > 0 ? this._commitHandler(this._mutations) : Promise.resolve();\n    }\n    _verifyNotCommitted() {\n        if (this._committed) throw new U(S, \"A write batch can no longer be used after commit() has been called.\");\n    }\n}\n\nfunction Sr(t, e) {\n    if ((t = getModularInstance(t)).firestore !== e) throw new U(A, \"Provided document reference is from a different Firestore instance.\");\n    return t;\n}\n\n/**\n * Creates a write batch, used for performing multiple writes as a single\n * atomic operation. The maximum number of writes allowed in a single WriteBatch\n * is 500.\n *\n * The result of these writes will only be reflected in document reads that\n * occur after the returned promise resolves. If the client is offline, the\n * write fails. If you would like to see local modifications or buffer writes\n * until the client is online, use the full Firestore SDK.\n *\n * @returns A `WriteBatch` that can be used to atomically execute multiple\n * writes.\n */ function Fr(t) {\n    const e = en(t = ot(t, rn));\n    return new $r(t, (t => Je(e, t)));\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Internal transaction object responsible for accumulating the mutations to\n * perform and the base versions for any documents read.\n */ class xr {\n    constructor(t) {\n        this.datastore = t, \n        // The version of each document that was read during this transaction.\n        this.readVersions = new Map, this.mutations = [], this.committed = !1, \n        /**\n         * A deferred usage error that occurred previously in this transaction that\n         * will cause the transaction to fail once it actually commits.\n         */\n        this.lastWriteError = null, \n        /**\n         * Set of documents that have been written in the transaction.\n         *\n         * When there's more than one write to the same key in a transaction, any\n         * writes after the first are handled differently.\n         */\n        this.writtenDocs = new Set;\n    }\n    async lookup(t) {\n        if (this.ensureCommitNotCalled(), this.mutations.length > 0) throw new U(A, \"Firestore transactions require all reads to be executed before all writes.\");\n        const e = await Xe(this.datastore, t);\n        return e.forEach((t => this.recordVersion(t))), e;\n    }\n    set(t, e) {\n        this.write(e.toMutation(t, this.precondition(t))), this.writtenDocs.add(t.toString());\n    }\n    update(t, e) {\n        try {\n            this.write(e.toMutation(t, this.preconditionForUpdate(t)));\n        } catch (t) {\n            this.lastWriteError = t;\n        }\n        this.writtenDocs.add(t.toString());\n    }\n    delete(t) {\n        this.write(new Ae(t, this.precondition(t))), this.writtenDocs.add(t.toString());\n    }\n    async commit() {\n        if (this.ensureCommitNotCalled(), this.lastWriteError) throw this.lastWriteError;\n        const t = this.readVersions;\n        // For each mutation, note that the doc was written.\n                this.mutations.forEach((e => {\n            t.delete(e.key.toString());\n        })), \n        // For each document that was read but not written to, we want to perform\n        // a `verify` operation.\n        t.forEach(((t, e) => {\n            const n = et.fromPath(e);\n            this.mutations.push(new Re(n, this.precondition(n)));\n        })), await Je(this.datastore, this.mutations), this.committed = !0;\n    }\n    recordVersion(t) {\n        let e;\n        if (t.isFoundDocument()) e = t.version; else {\n            if (!t.isNoDocument()) throw g();\n            // For deleted docs, we must use baseVersion 0 when we overwrite them.\n            e = vt.min();\n        }\n        const n = this.readVersions.get(t.key.toString());\n        if (n) {\n            if (!e.isEqual(n)) \n            // This transaction will fail no matter what.\n            throw new U(F, \"Document version changed between two reads.\");\n        } else this.readVersions.set(t.key.toString(), e);\n    }\n    /**\n     * Returns the version of this document when it was read in this transaction,\n     * as a precondition, or no precondition if it was not read.\n     */    precondition(t) {\n        const e = this.readVersions.get(t.toString());\n        return !this.writtenDocs.has(t.toString()) && e ? be.updateTime(e) : be.none();\n    }\n    /**\n     * Returns the precondition for a document if the operation is an update.\n     */    preconditionForUpdate(t) {\n        const e = this.readVersions.get(t.toString());\n        // The first time a document is written, we want to take into account the\n        // read time and existence\n                if (!this.writtenDocs.has(t.toString()) && e) {\n            if (e.isEqual(vt.min())) \n            // The document doesn't exist, so fail the transaction.\n            // This has to be validated locally because you can't send a\n            // precondition that a document does not exist without changing the\n            // semantics of the backend write to be an insert. This is the reverse\n            // of what we want, since we want to assert that the document doesn't\n            // exist but then send the update and have it fail. Since we can't\n            // express that to the backend, we have to validate locally.\n            // Note: this can change once we can send separate verify writes in the\n            // transaction.\n            throw new U(A, \"Can't update a document that doesn't exist.\");\n            // Document exists, base precondition on document update time.\n                        return be.updateTime(e);\n        }\n        // Document was not read, so we just use the preconditions for a blind\n        // update.\n        return be.exists(!0);\n    }\n    write(t) {\n        this.ensureCommitNotCalled(), this.mutations.push(t);\n    }\n    ensureCommitNotCalled() {}\n}\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * TransactionRunner encapsulates the logic needed to run and retry transactions\n * with backoff.\n */\nclass qr {\n    constructor(t, e, n, r) {\n        this.asyncQueue = t, this.datastore = e, this.updateFunction = n, this.deferred = r, \n        this.Tt = 5, this.It = new He(this.asyncQueue, \"transaction_retry\" /* TransactionRetry */);\n    }\n    /** Runs the transaction and sets the result on deferred. */    run() {\n        this.Tt -= 1, this.At();\n    }\n    At() {\n        this.It.W((async () => {\n            const t = new xr(this.datastore), e = this.Rt(t);\n            e && e.then((e => {\n                this.asyncQueue.enqueueAndForget((() => t.commit().then((() => {\n                    this.deferred.resolve(e);\n                })).catch((t => {\n                    this.Pt(t);\n                }))));\n            })).catch((t => {\n                this.Pt(t);\n            }));\n        }));\n    }\n    Rt(t) {\n        try {\n            const e = this.updateFunction(t);\n            return !ct(e) && e.catch && e.then ? e : (this.deferred.reject(Error(\"Transaction callback must return a Promise\")), \n            null);\n        } catch (t) {\n            // Do not retry errors thrown by user provided updateFunction.\n            return this.deferred.reject(t), null;\n        }\n    }\n    Pt(t) {\n        this.Tt > 0 && this.Vt(t) ? (this.Tt -= 1, this.asyncQueue.enqueueAndForget((() => (this.At(), \n        Promise.resolve())))) : this.deferred.reject(t);\n    }\n    Vt(t) {\n        if (\"FirebaseError\" === t.name) {\n            // In transactions, the backend will fail outdated reads with FAILED_PRECONDITION and\n            // non-matching document versions with ABORTED. These errors should be retried.\n            const e = t.code;\n            return \"aborted\" === e || \"failed-precondition\" === e || !\n            /**\n * Determines whether an error code represents a permanent error when received\n * in response to a non-write operation.\n *\n * See isPermanentWriteError for classifying write errors.\n */\n            function(t) {\n                switch (t) {\n                  default:\n                    return g();\n\n                  case T:\n                  case I:\n                  case R:\n                  case $:\n                  case O:\n                  case C:\n // Unauthenticated means something went wrong with our token and we need\n                    // to retry with new credentials which will happen automatically.\n                                      case N:\n                    return !1;\n\n                  case A:\n                  case P:\n                  case V:\n                  case D:\n                  case S:\n // Aborted might be retried in some scenarios, but that is dependant on\n                    // the context and should handled individually by the calling code.\n                    // See https://cloud.google.com/apis/design/errors.\n                                      case F:\n                  case x:\n                  case q:\n                  case L:\n                    return !0;\n                }\n            }(e);\n        }\n        return !1;\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** The Platform's 'document' implementation or null if not available. */ function Or() {\n    // `document` is not always available, e.g. in ReactNative and WebWorkers.\n    // eslint-disable-next-line no-restricted-globals\n    return \"undefined\" != typeof document ? document : null;\n}\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Represents an operation scheduled to be run in the future on an AsyncQueue.\n *\n * It is created via DelayedOperation.createAndSchedule().\n *\n * Supports cancellation (via cancel()) and early execution (via skipDelay()).\n *\n * Note: We implement `PromiseLike` instead of `Promise`, as the `Promise` type\n * in newer versions of TypeScript defines `finally`, which is not available in\n * IE.\n */ class Cr {\n    constructor(t, e, n, r, s) {\n        this.asyncQueue = t, this.timerId = e, this.targetTimeMs = n, this.op = r, this.removalCallback = s, \n        this.deferred = new k, this.then = this.deferred.promise.then.bind(this.deferred.promise), \n        // It's normal for the deferred promise to be canceled (due to cancellation)\n        // and so we attach a dummy catch callback to avoid\n        // 'UnhandledPromiseRejectionWarning' log spam.\n        this.deferred.promise.catch((t => {}));\n    }\n    /**\n     * Creates and returns a DelayedOperation that has been scheduled to be\n     * executed on the provided asyncQueue after the provided delayMs.\n     *\n     * @param asyncQueue - The queue to schedule the operation on.\n     * @param id - A Timer ID identifying the type of operation this is.\n     * @param delayMs - The delay (ms) before the operation should be scheduled.\n     * @param op - The operation to run.\n     * @param removalCallback - A callback to be called synchronously once the\n     *   operation is executed or canceled, notifying the AsyncQueue to remove it\n     *   from its delayedOperations list.\n     *   PORTING NOTE: This exists to prevent making removeDelayedOperation() and\n     *   the DelayedOperation class public.\n     */    static createAndSchedule(t, e, n, r, s) {\n        const i = Date.now() + n, o = new Cr(t, e, i, r, s);\n        return o.start(n), o;\n    }\n    /**\n     * Starts the timer. This is called immediately after construction by\n     * createAndSchedule().\n     */    start(t) {\n        this.timerHandle = setTimeout((() => this.handleDelayElapsed()), t);\n    }\n    /**\n     * Queues the operation to run immediately (if it hasn't already been run or\n     * canceled).\n     */    skipDelay() {\n        return this.handleDelayElapsed();\n    }\n    /**\n     * Cancels the operation if it hasn't already been executed or canceled. The\n     * promise will be rejected.\n     *\n     * As long as the operation has not yet been run, calling cancel() provides a\n     * guarantee that the operation will not be run.\n     */    cancel(t) {\n        null !== this.timerHandle && (this.clearTimeout(), this.deferred.reject(new U(T, \"Operation cancelled\" + (t ? \": \" + t : \"\"))));\n    }\n    handleDelayElapsed() {\n        this.asyncQueue.enqueueAndForget((() => null !== this.timerHandle ? (this.clearTimeout(), \n        this.op().then((t => this.deferred.resolve(t)))) : Promise.resolve()));\n    }\n    clearTimeout() {\n        null !== this.timerHandle && (this.removalCallback(this), clearTimeout(this.timerHandle), \n        this.timerHandle = null);\n    }\n}\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ class Lr {\n    constructor() {\n        // The last promise in the queue.\n        this.Dt = Promise.resolve(), \n        // A list of retryable operations. Retryable operations are run in order and\n        // retried with backoff.\n        this.Nt = [], \n        // Is this AsyncQueue being shut down? Once it is set to true, it will not\n        // be changed again.\n        this.$t = !1, \n        // Operations scheduled to be queued in the future. Operations are\n        // automatically removed after they are run or canceled.\n        this.St = [], \n        // visible for testing\n        this.Ft = null, \n        // Flag set while there's an outstanding AsyncQueue operation, used for\n        // assertion sanity-checks.\n        this.xt = !1, \n        // Enabled during shutdown on Safari to prevent future access to IndexedDB.\n        this.qt = !1, \n        // List of TimerIds to fast-forward delays for.\n        this.Ot = [], \n        // Backoff timer used to schedule retries for retryable operations\n        this.It = new He(this, \"async_queue_retry\" /* AsyncQueueRetry */), \n        // Visibility handler that triggers an immediate retry of all retryable\n        // operations. Meant to speed up recovery when we regain file system access\n        // after page comes into foreground.\n        this.Ct = () => {\n            const t = Or();\n            t && m(\"AsyncQueue\", \"Visibility state changed to \" + t.visibilityState), this.It.H();\n        };\n        const t = Or();\n        t && \"function\" == typeof t.addEventListener && t.addEventListener(\"visibilitychange\", this.Ct);\n    }\n    get isShuttingDown() {\n        return this.$t;\n    }\n    /**\n     * Adds a new operation to the queue without waiting for it to complete (i.e.\n     * we ignore the Promise result).\n     */    enqueueAndForget(t) {\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        this.enqueue(t);\n    }\n    enqueueAndForgetEvenWhileRestricted(t) {\n        this.Lt(), \n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        this.Ut(t);\n    }\n    enterRestrictedMode(t) {\n        if (!this.$t) {\n            this.$t = !0, this.qt = t || !1;\n            const e = Or();\n            e && \"function\" == typeof e.removeEventListener && e.removeEventListener(\"visibilitychange\", this.Ct);\n        }\n    }\n    enqueue(t) {\n        if (this.Lt(), this.$t) \n        // Return a Promise which never resolves.\n        return new Promise((() => {}));\n        // Create a deferred Promise that we can return to the callee. This\n        // allows us to return a \"hanging Promise\" only to the callee and still\n        // advance the queue even when the operation is not run.\n                const e = new k;\n        return this.Ut((() => this.$t && this.qt ? Promise.resolve() : (t().then(e.resolve, e.reject), \n        e.promise))).then((() => e.promise));\n    }\n    enqueueRetryable(t) {\n        this.enqueueAndForget((() => (this.Nt.push(t), this.kt())));\n    }\n    /**\n     * Runs the next operation from the retryable queue. If the operation fails,\n     * reschedules with backoff.\n     */    async kt() {\n        if (0 !== this.Nt.length) {\n            try {\n                await this.Nt[0](), this.Nt.shift(), this.It.reset();\n            } catch (t) {\n                if (!\n                /**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n                /** Verifies whether `e` is an IndexedDbTransactionError. */\n                function(t) {\n                    // Use name equality, as instanceof checks on errors don't work with errors\n                    // that wrap other errors.\n                    return \"IndexedDbTransactionError\" === t.name;\n                }\n                /**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ (t)) throw t;\n // Failure will be handled by AsyncQueue\n                                m(\"AsyncQueue\", \"Operation failed with retryable error: \" + t);\n            }\n            this.Nt.length > 0 && \n            // If there are additional operations, we re-schedule `retryNextOp()`.\n            // This is necessary to run retryable operations that failed during\n            // their initial attempt since we don't know whether they are already\n            // enqueued. If, for example, `op1`, `op2`, `op3` are enqueued and `op1`\n            // needs to  be re-run, we will run `op1`, `op1`, `op2` using the\n            // already enqueued calls to `retryNextOp()`. `op3()` will then run in the\n            // call scheduled here.\n            // Since `backoffAndRun()` cancels an existing backoff and schedules a\n            // new backoff on every call, there is only ever a single additional\n            // operation in the queue.\n            this.It.W((() => this.kt()));\n        }\n    }\n    Ut(t) {\n        const e = this.Dt.then((() => (this.xt = !0, t().catch((t => {\n            this.Ft = t, this.xt = !1;\n            const e = \n            /**\n * Chrome includes Error.message in Error.stack. Other browsers do not.\n * This returns expected output of message + stack when available.\n * @param error - Error or FirestoreError\n */\n            function(t) {\n                let e = t.message || \"\";\n                t.stack && (e = t.stack.includes(t.message) ? t.stack : t.message + \"\\n\" + t.stack);\n                return e;\n            }\n            /**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n            // TODO(mrschmidt) Consider using `BaseTransaction` as the base class in the\n            // legacy SDK.\n            /**\n * A reference to a transaction.\n *\n * The `Transaction` object passed to a transaction's `updateFunction` provides\n * the methods to read and write data within the transaction context. See\n * {@link runTransaction}.\n */ (t);\n            // Re-throw the error so that this.tail becomes a rejected Promise and\n            // all further attempts to chain (via .then) will just short-circuit\n            // and return the rejected Promise.\n            throw p(\"INTERNAL UNHANDLED ERROR: \", e), t;\n        })).then((t => (this.xt = !1, t))))));\n        return this.Dt = e, e;\n    }\n    enqueueAfterDelay(t, e, n) {\n        this.Lt(), \n        // Fast-forward delays for timerIds that have been overriden.\n        this.Ot.indexOf(t) > -1 && (e = 0);\n        const r = Cr.createAndSchedule(this, t, e, n, (t => this.jt(t)));\n        return this.St.push(r), r;\n    }\n    Lt() {\n        this.Ft && g();\n    }\n    verifyOperationInProgress() {}\n    /**\n     * Waits until all currently queued tasks are finished executing. Delayed\n     * operations are not run.\n     */    async Mt() {\n        // Operations in the queue prior to draining may have enqueued additional\n        // operations. Keep draining the queue until the tail is no longer advanced,\n        // which indicates that no more new operations were enqueued and that all\n        // operations were executed.\n        let t;\n        do {\n            t = this.Dt, await t;\n        } while (t !== this.Dt);\n    }\n    /**\n     * For Tests: Determine if a delayed operation with a particular TimerId\n     * exists.\n     */    Bt(t) {\n        for (const e of this.St) if (e.timerId === t) return !0;\n        return !1;\n    }\n    /**\n     * For Tests: Runs some or all delayed operations early.\n     *\n     * @param lastTimerId - Delayed operations up to and including this TimerId\n     * will be drained. Pass TimerId.All to run all delayed operations.\n     * @returns a Promise that resolves once all operations have been run.\n     */    zt(t) {\n        // Note that draining may generate more delayed ops, so we do that first.\n        return this.Mt().then((() => {\n            // Run ops in the same order they'd run if they ran naturally.\n            this.St.sort(((t, e) => t.targetTimeMs - e.targetTimeMs));\n            for (const e of this.St) if (e.skipDelay(), \"all\" /* All */ !== t && e.timerId === t) break;\n            return this.Mt();\n        }));\n    }\n    /**\n     * For Tests: Skip all subsequent delays for a timer id.\n     */    Gt(t) {\n        this.Ot.push(t);\n    }\n    /** Called once a DelayedOperation is run or canceled. */    jt(t) {\n        // NOTE: indexOf / slice are O(n), but delayedOperations is expected to be small.\n        const e = this.St.indexOf(t);\n        this.St.splice(e, 1);\n    }\n}\n\nclass Ur {\n    /** @hideconstructor */\n    constructor(t, e) {\n        this._firestore = t, this._transaction = e, this._dataReader = Vn(t);\n    }\n    /**\n     * Reads the document referenced by the provided {@link DocumentReference}.\n     *\n     * @param documentRef - A reference to the document to be read.\n     * @returns A `DocumentSnapshot` with the read data.\n     */    get(t) {\n        const e = Sr(t, this._firestore), n = new gr(this._firestore);\n        return this._transaction.lookup([ e._key ]).then((t => {\n            if (!t || 1 !== t.length) return g();\n            const r = t[0];\n            if (r.isFoundDocument()) return new Yn(this._firestore, n, r.key, r, e.converter);\n            if (r.isNoDocument()) return new Yn(this._firestore, n, e._key, null, e.converter);\n            throw g();\n        }));\n    }\n    set(t, e, n) {\n        const r = Sr(t, this._firestore), s = _r(r.converter, e, n), i = Dn(this._dataReader, \"Transaction.set\", r._key, s, null !== r.converter, n);\n        return this._transaction.set(r._key, i), this;\n    }\n    update(t, e, n, ...r) {\n        const s = Sr(t, this._firestore);\n        // For Compat types, we have to \"extract\" the underlying types before\n        // performing validation.\n                let i;\n        return i = \"string\" == typeof (e = getModularInstance(e)) || e instanceof yn ? Cn(this._dataReader, \"Transaction.update\", s._key, e, n, r) : On(this._dataReader, \"Transaction.update\", s._key, e), \n        this._transaction.update(s._key, i), this;\n    }\n    /**\n     * Deletes the document referred to by the provided {@link DocumentReference}.\n     *\n     * @param documentRef - A reference to the document to be deleted.\n     * @returns This `Transaction` instance. Used for chaining method calls.\n     */    delete(t) {\n        const e = Sr(t, this._firestore);\n        return this._transaction.delete(e._key), this;\n    }\n}\n\n/**\n * Executes the given `updateFunction` and then attempts to commit the changes\n * applied within the transaction. If any document read within the transaction\n * has changed, Cloud Firestore retries the `updateFunction`. If it fails to\n * commit after 5 attempts, the transaction fails.\n *\n * The maximum number of writes allowed in a single transaction is 500.\n *\n * @param firestore - A reference to the Firestore database to run this\n * transaction against.\n * @param updateFunction - The function to execute within the transaction\n * context.\n * @returns If the transaction completed successfully or was explicitly aborted\n * (the `updateFunction` returned a failed promise), the promise returned by the\n * `updateFunction `is returned here. Otherwise, if the transaction failed, a\n * rejected promise with the corresponding failure error is returned.\n */ function kr(t, e) {\n    const n = en(t = ot(t, rn)), r = new k;\n    return new qr(new Lr, n, (n => e(new Ur(t, n))), r).run(), r.promise;\n}\n\n/**\n * Firestore Lite\n *\n * @remarks Firestore Lite is a small online-only SDK that allows read\n * and write access to your Firestore database. All operations connect\n * directly to the backend, and `onSnapshot()` APIs are not supported.\n * @packageDocumentation\n */ !function(t) {\n    f = t;\n}(`${SDK_VERSION}_lite`), _registerComponent(new Component(\"firestore/lite\", ((t, {options: e}) => {\n    const n = t.getProvider(\"app\").getImmediate(), r = new rn(n, new z(t.getProvider(\"auth-internal\")), new Y(t.getProvider(\"app-check-internal\")));\n    return e && r._setSettings(e), r;\n}), \"PUBLIC\")), \n// RUNTIME_ENV and BUILD_TARGET are replaced by real values during the compilation\nregisterVersion(\"firestore-lite\", \"3.4.6\", \"\"), registerVersion(\"firestore-lite\", \"3.4.6\", \"esm2017\");\n\nexport { gn as Bytes, ln as CollectionReference, an as DocumentReference, Yn as DocumentSnapshot, yn as FieldPath, vn as FieldValue, rn as Firestore, U as FirestoreError, bn as GeoPoint, hn as Query, Zn as QueryConstraint, Hn as QueryDocumentSnapshot, Kn as QuerySnapshot, gt as Timestamp, Ur as Transaction, $r as WriteBatch, Ar as addDoc, Dr as arrayRemove, Vr as arrayUnion, fn as collection, dn as collectionGroup, un as connectFirestoreEmulator, Ir as deleteDoc, Rr as deleteField, wn as doc, _n as documentId, dr as endAt, fr as endBefore, vr as getDoc, br as getDocs, on as getFirestore, Nr as increment, sn as initializeFirestore, or as limit, ur as limitToLast, sr as orderBy, tr as query, pn as queryEqual, mn as refEqual, kr as runTransaction, Pr as serverTimestamp, Er as setDoc, w as setLogLevel, Jn as snapshotEqual, hr as startAfter, ar as startAt, cn as terminate, Tr as updateDoc, nr as where, Fr as writeBatch };\n//# sourceMappingURL=index.browser.esm2017.js.map\n","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\r\nimport Vue from 'vue';\r\nimport Const, { DIFFICULTY_LEVEL } from '@/classes/const';\r\nimport {\r\n  collection,\r\n  DocumentData,\r\n  getDocs,\r\n  getFirestore,\r\n  limit,\r\n  query,\r\n  where,\r\n  orderBy,\r\n  Query,\r\n  startAfter,\r\n  QueryDocumentSnapshot,\r\n} from 'firebase/firestore/lite';\r\nimport Convert from '@/classes/convert';\r\nimport SaveData from '@/classes/saveData/saveData';\r\nimport { UploadedPreset } from '@/classes/interfaces/uploadedPreset';\r\n\r\nconst STEP = 20;\r\n\r\nexport default Vue.extend({\r\n  name: 'SaveDataList',\r\n  components: {},\r\n  data: () => ({\r\n    areaItems: [] as ({ divider: boolean } | { header: string } | { value: number; text: string; group: string })[],\r\n    selectedArea: 11,\r\n    level: DIFFICULTY_LEVEL.HARD,\r\n    levelItems: Const.DIFFICULTY_LEVELS,\r\n    savedata: [] as UploadedPreset[],\r\n    isLoading: false,\r\n    lastMap: 0,\r\n    lastLevel: 0,\r\n    lastDocument: undefined as undefined | QueryDocumentSnapshot<DocumentData>,\r\n  }),\r\n  mounted() {\r\n    // 海域セレクトボックス初期化\r\n    const items = [];\r\n    const worlds = Const.WORLDS;\r\n    for (let i = 0; i < worlds.length; i += 1) {\r\n      const world = worlds[i];\r\n      const maps = Const.MAPS.filter((v) => Math.floor(v.value / 10) === world.value);\r\n      if (!maps.length) {\r\n        continue;\r\n      }\r\n      if (i > 0) {\r\n        items.push({ divider: true });\r\n      }\r\n\r\n      items.push({ header: world.text });\r\n      for (let j = 0; j < maps.length; j += 1) {\r\n        const map = maps[j];\r\n        const worldText = world.value > 40 ? 'E' : `${world.value}`;\r\n        items.push({ value: map.value, text: `${worldText}-${map.value % 10}：${map.text}`, group: world.text });\r\n      }\r\n    }\r\n    this.areaItems = items;\r\n\r\n    const initialiList = this.$store.state.searchedList as UploadedPreset[];\r\n    if (initialiList && initialiList.length) {\r\n      this.savedata = initialiList;\r\n    }\r\n  },\r\n  computed: {\r\n    isEvent(): boolean {\r\n      return Math.floor(this.selectedArea / 10) > 40;\r\n    },\r\n    isSameSearchCondition(): boolean {\r\n      return this.lastMap === this.selectedArea && this.lastLevel === this.level;\r\n    },\r\n    enabledMoreLoad(): boolean {\r\n      return !!this.lastDocument && this.isSameSearchCondition;\r\n    },\r\n  },\r\n  methods: {\r\n    changedWorld() {\r\n      this.isLoading = false;\r\n    },\r\n    async searchPreset() {\r\n      this.isLoading = true;\r\n      if (!this.enabledMoreLoad) {\r\n        this.savedata = [];\r\n      }\r\n\r\n      try {\r\n        const db = getFirestore();\r\n        const fbLevel = 4 - this.level;\r\n        let q: Query<DocumentData>;\r\n        if (this.isEvent) {\r\n          if (this.lastDocument) {\r\n            q = query(\r\n              collection(db, 'presets'),\r\n              where('map', '==', this.selectedArea),\r\n              where('level', '==', fbLevel),\r\n              orderBy('createdAt', 'desc'),\r\n              startAfter(this.lastDocument),\r\n              limit(STEP),\r\n            );\r\n          } else {\r\n            q = query(\r\n              collection(db, 'presets'),\r\n              where('map', '==', this.selectedArea),\r\n              where('level', '==', fbLevel),\r\n              orderBy('createdAt', 'desc'),\r\n              limit(STEP),\r\n            );\r\n          }\r\n        } else if (this.lastDocument) {\r\n          q = query(\r\n            collection(db, 'presets'),\r\n            where('map', '==', this.selectedArea),\r\n            where('level', '==', 0),\r\n            orderBy('createdAt', 'desc'),\r\n            startAfter(this.lastDocument),\r\n            limit(STEP),\r\n          );\r\n        } else {\r\n          q = query(\r\n            collection(db, 'presets'),\r\n            where('map', '==', this.selectedArea),\r\n            where('level', '==', 0),\r\n            orderBy('createdAt', 'desc'),\r\n            limit(STEP),\r\n          );\r\n        }\r\n\r\n        // 今回の検索条件を保持\r\n        this.lastMap = this.selectedArea;\r\n        this.lastLevel = this.level;\r\n\r\n        const snapShot = await getDocs(q);\r\n        const fetchData: UploadedPreset[] = [];\r\n        const converter = new Convert(this.$store.state.items, this.$store.state.ships, this.$store.state.defaultEnemies);\r\n        snapShot.forEach((doc) => {\r\n          // 中間生成物\r\n          const preset = doc.data() as UploadedPreset;\r\n          // 編成復元\r\n          const manager = converter.restoreOldSaveData(doc.data().data);\r\n          if (manager) {\r\n            preset.ships = manager.fleetInfo.fleets[0].ships;\r\n            preset.manager = manager;\r\n            preset.createdAt = Convert.formatDate(doc.data().createdAt.toDate(), 'yyyy/MM/dd HH:mm:ss');\r\n            fetchData.push(preset);\r\n          } else {\r\n            // 新版編成復元？ TODO\r\n          }\r\n        });\r\n\r\n        if (this.lastDocument && this.savedata) {\r\n          // 追加読み込みの場合はpushする\r\n          this.savedata = this.savedata.concat(fetchData);\r\n        } else {\r\n          this.savedata = fetchData;\r\n        }\r\n\r\n        // 追加読み込み制御\r\n        if (snapShot && snapShot.docs.length >= STEP) {\r\n          this.lastDocument = snapShot.docs[snapShot.docs.length - 1];\r\n        } else {\r\n          this.lastDocument = undefined;\r\n        }\r\n\r\n        // 次回訪問時復帰するため保持\r\n        this.$store.dispatch('setSearchedList', this.savedata);\r\n      } catch (error) {\r\n        this.savedata = [];\r\n      }\r\n\r\n      this.isLoading = false;\r\n    },\r\n    expandPreset(preset: UploadedPreset) {\r\n      const saveData = this.$store.state.saveData as SaveData;\r\n      saveData.disabledMain();\r\n\r\n      // ルートに無題のデータを生成\r\n      const data = new SaveData();\r\n      data.name = preset.name;\r\n      data.remarks = preset.memo;\r\n      data.tempData = [preset.manager];\r\n      data.tempIndex = 0;\r\n      data.isActive = true;\r\n      data.isMain = true;\r\n      saveData.childItems.push(data);\r\n\r\n      this.$store.dispatch('updateSaveData', saveData);\r\n      this.$store.dispatch('setMainSaveData', data);\r\n      this.$router.push('aircalc');\r\n    },\r\n  },\r\n});\r\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--15-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/@vue/cli-plugin-typescript/node_modules/ts-loader/index.js??ref--15-3!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SaveDataList.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--15-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/@vue/cli-plugin-typescript/node_modules/ts-loader/index.js??ref--15-3!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SaveDataList.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./SaveDataList.vue?vue&type=template&id=12236bd7&scoped=true&\"\nimport script from \"./SaveDataList.vue?vue&type=script&lang=ts&\"\nexport * from \"./SaveDataList.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./SaveDataList.vue?vue&type=style&index=0&id=12236bd7&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"12236bd7\",\n  null\n  \n)\n\nexport default component.exports\n\n/* vuetify-loader */\nimport installComponents from \"!../../node_modules/vuetify-loader/lib/runtime/installComponents.js\"\nimport { VBtn } from 'vuetify/lib/components/VBtn';\nimport { VCard } from 'vuetify/lib/components/VCard';\nimport { VDivider } from 'vuetify/lib/components/VDivider';\nimport { VIcon } from 'vuetify/lib/components/VIcon';\nimport { VImg } from 'vuetify/lib/components/VImg';\nimport { VProgressCircular } from 'vuetify/lib/components/VProgressCircular';\nimport { VSelect } from 'vuetify/lib/components/VSelect';\nimport { VSpacer } from 'vuetify/lib/components/VGrid';\ninstallComponents(component, {VBtn,VCard,VDivider,VIcon,VImg,VProgressCircular,VSelect,VSpacer})\n","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SaveDataList.vue?vue&type=style&index=0&id=12236bd7&scoped=true&lang=css&\""],"sourceRoot":""}